<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Planet of the Crabs</title>
	<subtitle>ü¶Ä fearless rust</subtitle>
	<link href="https://kitallis.github.io/hades/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://kitallis.github.io/hades/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2021-04-20T13:18:01+00:00</updated>
	<id>https://kitallis.github.io/hades/atom.xml</id>
	<entry xml:lang="en">
		<title>Linus Torvalds: ‚ÄúC++ is really a terrible language!‚Äù</title>
		<published>2021-04-20T13:18:01+00:00</published>
		<updated>2021-04-20T13:18:01+00:00</updated>
		<link href="https://kitallis.github.io/hades/linus-torvalds-c-is-really-a-terrible-language-hoahgglpuyitmajvmutkg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/linus-torvalds-c-is-really-a-terrible-language-hoahgglpuyitmajvmutkg/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;nerd-for-tech&#x2F;linus-torvalds-c-is-really-a-terrible-language-2248b839bee3?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;943&#x2F;0*TQMu9pK5bOyLTu-P&quot; width=&quot;943&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;He&amp;#x2019;s here! Linus is here again with his &amp;#x201C;violent temper&amp;#x201D;!&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;nerd-for-tech&#x2F;linus-torvalds-c-is-really-a-terrible-language-2248b839bee3?source=rss------rust-5&quot;&gt;Continue reading on Nerd For Tech ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>I also read in a recent article, they are starting with Rust.</title>
		<published>2021-04-20T06:35:34+00:00</published>
		<updated>2021-04-20T06:35:34+00:00</updated>
		<link href="https://kitallis.github.io/hades/i-also-read-in-a-recent-article-they-are-starting-with-rust-alvn1q9ecxa15q1ajebti/" type="text/html"/>
		<id>https://kitallis.github.io/hades/i-also-read-in-a-recent-article-they-are-starting-with-rust-alvn1q9ecxa15q1ajebti/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;drumm8.medium.com&#x2F;i-also-read-in-a-recent-article-they-are-starting-with-rust-bacfaf98ea1c?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Running GraphQL on Lambda with Rust</title>
		<published>2021-04-20T00:00:00+00:00</published>
		<updated>2021-04-20T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/running-graphql-on-lambda-with-rust-s9iyutagkymidlznxmbda/" type="text/html"/>
		<id>https://kitallis.github.io/hades/running-graphql-on-lambda-with-rust-s9iyutagkymidlznxmbda/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dbanty.medium.com&#x2F;running-graphql-on-lambda-with-rust-e3d1f96dfce9?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;2000&#x2F;0*PLy8AkDg95mxMdYO.png&quot; width=&quot;2000&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;Taking a break from OpenAPI for a bit, I decided to explore the primary alternative for web API development&amp;#x2014;GraphQL. I&amp;#x2019;ve been pleasantly&amp;#x2026;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dbanty.medium.com&#x2F;running-graphql-on-lambda-with-rust-e3d1f96dfce9?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Programando em Rust‚Ää‚Äî‚ÄäParte 0‚Äî Conhecendo os Frameworks</title>
		<published>2021-04-19T13:03:36+00:00</published>
		<updated>2021-04-19T13:03:36+00:00</updated>
		<link href="https://kitallis.github.io/hades/programando-em-rust-parte-0-conhecendo-os-frameworks-1mb6qn8yzkmr4hruanvy7/" type="text/html"/>
		<id>https://kitallis.github.io/hades/programando-em-rust-parte-0-conhecendo-os-frameworks-1mb6qn8yzkmr4hruanvy7/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jhrl.medium.com&#x2F;programando-em-rust-parte-0-conhecendo-os-frameworks-959dd07eaece?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;2000&#x2F;1*PTodsdw4EdcaiM2rXwHTCA.png&quot; width=&quot;2000&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;Nesse artigo veremos quais ferramentas j&amp;#xE1; existem a disposi&amp;#xE7;&amp;#xE3;o para trabalharmos na linguagem Rust.&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jhrl.medium.com&#x2F;programando-em-rust-parte-0-conhecendo-os-frameworks-959dd07eaece?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Houston, we have a problem‚Ää‚Äî‚ÄäAnomaly Detection Methods</title>
		<published>2021-04-18T16:59:08+00:00</published>
		<updated>2021-04-18T16:59:08+00:00</updated>
		<link href="https://kitallis.github.io/hades/houston-we-have-a-problem-anomaly-detection-methods-kdrxowedcuwkdrvg6pzvn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/houston-we-have-a-problem-anomaly-detection-methods-kdrxowedcuwkdrvg6pzvn/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;analytics-vidhya&#x2F;houston-we-have-a-problem-anomaly-detection-methods-2d6e2ebc12c0?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;1907&#x2F;1*7JBg7yzabIoW-lnlYgg-Kw.png&quot; width=&quot;1907&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;The previous article in my Houston, we have a problem anomaly detection series was a light introduction to the realm of time series&amp;#x2026;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;analytics-vidhya&#x2F;houston-we-have-a-problem-anomaly-detection-methods-2d6e2ebc12c0?source=rss------rust-5&quot;&gt;Continue reading on Analytics Vidhya ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust Lang ‡∏¢‡∏≤‡∏°‡∏™‡∏á‡∏Å‡∏£‡∏≤‡∏ô‡∏ï‡πå #5 References and Borrowing</title>
		<published>2021-04-18T11:51:56+00:00</published>
		<updated>2021-04-18T11:51:56+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-lang-yaamsngkraant-5-references-and-borrowing-ci7-nmfvkuiusrdcekqgm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-lang-yaamsngkraant-5-references-and-borrowing-ci7-nmfvkuiusrdcekqgm/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@mmxx155&#x2F;rust-lang-%E0%B8%A2%E0%B8%B2%E0%B8%A1%E0%B8%AA%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%99%E0%B8%95%E0%B9%8C-5-references-and-borrowing-9116594fa3bb?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;1574&#x2F;1*nA5AwFiGBiaSTGvDhfchUQ.png&quot; width=&quot;1574&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;&amp;#xE1B;&amp;#xE31;&amp;#xE0D;&amp;#xE2B;&amp;#xE32;&amp;#xE08;&amp;#xE32;&amp;#xE01;&amp;#xE15;&amp;#xE2D;&amp;#xE19; ownership &amp;#xE17;&amp;#xE35;&amp;#xE48;&amp;#xE27;&amp;#xE48;&amp;#xE32;&amp;#xE15;&amp;#xE49;&amp;#xE2D;&amp;#xE07; return &amp;#xE04;&amp;#xE48;&amp;#xE32;&amp;#xE44;&amp;#xE21;&amp;#xE48;&amp;#xE07;&amp;#xE31;&amp;#xE49;&amp;#xE19;&amp;#xE04;&amp;#xE48;&amp;#xE32;&amp;#xE16;&amp;#xE39;&amp;#xE01; droped &amp;#xE08;&amp;#xE36;&amp;#xE07;&amp;#xE21;&amp;#xE35; concept &amp;#xE19;&amp;#xE35;&amp;#xE49;&amp;#xE21;&amp;#xE32; (&amp;#xE1C;&amp;#xE21;&amp;#xE40;&amp;#xE02;&amp;#xE49;&amp;#xE32;&amp;#xE43;&amp;#xE08;&amp;#xE27;&amp;#xE48;&amp;#xE32;&amp;#xE21;&amp;#xE31;&amp;#xE19;&amp;#xE40;&amp;#xE2B;&amp;#xE21;&amp;#xE37;&amp;#xE2D;&amp;#xE19; pointer&amp;#xE43;&amp;#xE19;&amp;#xE20;&amp;#xE32;&amp;#xE29;&amp;#xE32; C &amp;#xE19;&amp;#xE30;&amp;#xE04;&amp;#xE23;&amp;#xE31;&amp;#xE1A;)&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@mmxx155&#x2F;rust-lang-%E0%B8%A2%E0%B8%B2%E0%B8%A1%E0%B8%AA%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%99%E0%B8%95%E0%B9%8C-5-references-and-borrowing-9116594fa3bb?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust Lang ‡∏¢‡∏≤‡∏°‡∏™‡∏á‡∏Å‡∏£‡∏≤‡∏ô‡∏ï‡πå #4 Ownership</title>
		<published>2021-04-18T04:26:57+00:00</published>
		<updated>2021-04-18T04:26:57+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-lang-yaamsngkraant-4-ownership-qqwyn175tsrp1hdlhzmxz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-lang-yaamsngkraant-4-ownership-qqwyn175tsrp1hdlhzmxz/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@mmxx155&#x2F;rust-lang-%E0%B8%A2%E0%B8%B2%E0%B8%A1%E0%B8%AA%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%99%E0%B8%95%E0%B9%8C-4-ownership-93619ca9dda7?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;846&#x2F;1*MWaoLpC2wd3sWj4ZVPH0EA.png&quot; width=&quot;846&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;&amp;#xE21;&amp;#xE32;&amp;#xE16;&amp;#xE36;&amp;#xE07; feature &amp;#xE17;&amp;#xE35;&amp;#xE48;&amp;#xE21;&amp;#xE35;&amp;#xE40;&amp;#xE09;&amp;#xE1E;&amp;#xE32;&amp;#xE30;&amp;#xE15;&amp;#xE31;&amp;#xE27; Rust &amp;#xE40;&amp;#xE2D;&amp;#xE07;&amp;#xE41;&amp;#xE25;&amp;#xE49;&amp;#xE27;&amp;#xE19;&amp;#xE30;&amp;#xE04;&amp;#xE23;&amp;#xE31;&amp;#xE1A; &amp;#xE40;&amp;#xE1B;&amp;#xE47;&amp;#xE19;&amp;#xE2A;&amp;#xE48;&amp;#xE27;&amp;#xE19;&amp;#xE17;&amp;#xE35;&amp;#xE48;&amp;#xE27;&amp;#xE48;&amp;#xE32; &amp;#xE17;&amp;#xE33;&amp;#xE44;&amp;#xE21; Rust &amp;#xE16;&amp;#xE36;&amp;#xE07;&amp;#xE21;&amp;#xE35;&amp;#xE04;&amp;#xE27;&amp;#xE32;&amp;#xE21;&amp;#xE1B;&amp;#xE25;&amp;#xE2D;&amp;#xE14;&amp;#xE20;&amp;#xE31;&amp;#xE22;&amp;#xE14;&amp;#xE49;&amp;#xE32;&amp;#xE19;&amp;#xE2B;&amp;#xE19;&amp;#xE48;&amp;#xE27;&amp;#xE22;&amp;#xE04;&amp;#xE27;&amp;#xE32;&amp;#xE21;&amp;#xE08;&amp;#xE33;&amp;#xE41;&amp;#xE25;&amp;#xE30;&amp;#xE17;&amp;#xE33;&amp;#xE44;&amp;#xE21;&amp;#xE16;&amp;#xE36;&amp;#xE07;&amp;#xE44;&amp;#xE21;&amp;#xE48;&amp;#xE21;&amp;#xE35; garbage collector&amp;#x2026;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@mmxx155&#x2F;rust-lang-%E0%B8%A2%E0%B8%B2%E0%B8%A1%E0%B8%AA%E0%B8%87%E0%B8%81%E0%B8%A3%E0%B8%B2%E0%B8%99%E0%B8%95%E0%B9%8C-4-ownership-93619ca9dda7?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust ownership and borrows‚Ää‚Äî‚ÄäFighting the borrow-checker</title>
		<published>2021-04-18T00:42:28+00:00</published>
		<updated>2021-04-18T00:42:28+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-ownership-and-borrows-fighting-the-borrow-checker-jcdrt-xnor6wyuixjromz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-ownership-and-borrows-fighting-the-borrow-checker-jcdrt-xnor6wyuixjromz/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;renoth.medium.com&#x2F;rust-ownership-and-borrows-fighting-the-borrow-checker-d57d5aa8df51?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;2000&#x2F;1*GHw5iROZLf1Lfc34MJjjUw.png&quot; width=&quot;2000&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;Fighting the borrow-checker is time-consuming. This post will give a small overview of what you can do to fix them and how to prevent&amp;#x2026;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;renoth.medium.com&#x2F;rust-ownership-and-borrows-fighting-the-borrow-checker-d57d5aa8df51?source=rss------rust-5&quot;&gt;Continue reading on Medium ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Find the good stock for buying in Vietnamese market</title>
		<published>2021-04-17T12:53:07+00:00</published>
		<updated>2021-04-17T12:53:07+00:00</updated>
		<link href="https://kitallis.github.io/hades/find-the-good-stock-for-buying-in-vietnamese-market-gg8-nmubhma64wcfu0anv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/find-the-good-stock-for-buying-in-vietnamese-market-gg8-nmubhma64wcfu0anv/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.datadriveninvestor.com&#x2F;find-the-good-stock-for-buying-in-vietnamese-market-a780e6b9ce74?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;2600&#x2F;1*P8YyQqKO2MB9skE-ia6kew.jpeg&quot; width=&quot;8063&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;using public API.&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.datadriveninvestor.com&#x2F;find-the-good-stock-for-buying-in-vietnamese-market-a780e6b9ce74?source=rss------rust-5&quot;&gt;Continue reading on DataDrivenInvestor ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>–í–≤–µ–¥–µ–Ω–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Rust</title>
		<published>2021-04-17T12:02:49+00:00</published>
		<updated>2021-04-17T12:02:49+00:00</updated>
		<link href="https://kitallis.github.io/hades/vvedenie-v-programmirovanie-na-rust-8eclv-czr3k8hu4pwaaw3/" type="text/html"/>
		<id>https://kitallis.github.io/hades/vvedenie-v-programmirovanie-na-rust-8eclv-czr3k8hu4pwaaw3/</id>
		<content type="html">&lt;div class=&quot;medium-feed-item&quot;&gt;&lt;p class=&quot;medium-feed-image&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;nuances-of-programming&#x2F;%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BD%D0%B0-rust-bf17e6ec6d0d?source=rss------rust-5&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;cdn-images-1.medium.com&#x2F;max&#x2F;1280&#x2F;1*aOP-b5uCkQRb1gmMCDzpmQ.png&quot; width=&quot;1280&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-snippet&quot;&gt;&amp;#x41F;&amp;#x440;&amp;#x438;&amp;#x441;&amp;#x442;&amp;#x443;&amp;#x43F;&amp;#x438;&amp;#x43C; &amp;#x43A; &amp;#x43E;&amp;#x441;&amp;#x432;&amp;#x43E;&amp;#x435;&amp;#x43D;&amp;#x438;&amp;#x44E; Rust: &amp;#x43D;&amp;#x430;&amp;#x43F;&amp;#x438;&amp;#x448;&amp;#x435;&amp;#x43C; &amp;#x43F;&amp;#x435;&amp;#x440;&amp;#x432;&amp;#x443;&amp;#x44E; &amp;#x43F;&amp;#x440;&amp;#x43E;&amp;#x433;&amp;#x440;&amp;#x430;&amp;#x43C;&amp;#x43C;&amp;#x443; &amp;#x441; &amp;#x43F;&amp;#x43E;&amp;#x434;&amp;#x440;&amp;#x43E;&amp;#x431;&amp;#x43D;&amp;#x44B;&amp;#x43C; &amp;#x440;&amp;#x430;&amp;#x437;&amp;#x431;&amp;#x43E;&amp;#x440;&amp;#x43E;&amp;#x43C; &amp;#x43A;&amp;#x43E;&amp;#x434;&amp;#x430; &amp;#x438; &amp;#x441;&amp;#x438;&amp;#x43D;&amp;#x442;&amp;#x430;&amp;#x43A;&amp;#x441;&amp;#x438;&amp;#x441;&amp;#x430;. &amp;#x418;&amp;#x437;&amp;#x443;&amp;#x447;&amp;#x438;&amp;#x43C; &amp;#x43A;&amp;#x440;&amp;#x430;&amp;#x435;&amp;#x443;&amp;#x433;&amp;#x43E;&amp;#x43B;&amp;#x44C;&amp;#x43D;&amp;#x44B;&amp;#x435; &amp;#x43F;&amp;#x43E;&amp;#x43D;&amp;#x44F;&amp;#x442;&amp;#x438;&amp;#x44F; &amp;#x200A;&amp;#x2014;&amp;#x200A; &amp;#x432;&amp;#x43B;&amp;#x430;&amp;#x434;&amp;#x435;&amp;#x43D;&amp;#x438;&amp;#x435; &amp;#x438;&amp;#x2026;&lt;&#x2F;p&gt;&lt;p class=&quot;medium-feed-link&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;nuances-of-programming&#x2F;%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BD%D0%B0-rust-bf17e6ec6d0d?source=rss------rust-5&quot;&gt;Continue reading on NOP::Nuances of Programming ¬ª&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Criterion.rs v0.3.4 And Iai 0.1.0</title>
		<published>2021-01-24T14:30:00-06:00</published>
		<updated>2021-01-24T14:30:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/criterion-rs-v0-3-4-and-iai-0-1-0-oxv0hj8fsjh-gllc-zf-8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/criterion-rs-v0-3-4-and-iai-0-1-0-oxv0hj8fsjh-gllc-zf-8/</id>
		<content type="html">&lt;p&gt;Today I‚Äôve released Criterion 0.3.4 and Iai 0.1.0. I‚Äôm particularly excited by Iai, so read on to find out what I‚Äôve been up to.
Criterion Updates The main new feature in this release is that Criterion.rs now has built-in support for benchmarking async functions.
This feature requires the async feature to be enabled. In addition to this, four other features - async-std, async-tokio, async-smol, and async-futures can be enabled to add support for benchmarking with the respective futures executors.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>hyper v0.14</title>
		<published>2020-12-23T11:00:11-08:00</published>
		<updated>2020-12-23T11:00:11-08:00</updated>
		<link href="https://kitallis.github.io/hades/hyper-v0-14-5ha-jmk1gxsjryc861le6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/hyper-v0-14-5ha-jmk1gxsjryc861le6/</id>
		<content type="html">&lt;p&gt;hyper v0.14
I&amp;rsquo;m so thrilled to announce the release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.14.0&quot;&gt;hyper v0.14&lt;&#x2F;a&gt; today. &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; is a safe, reliable, fast HTTP library written in Rust. It provides asynchronous client and server APIs, supporting both HTTP&#x2F;1 and HTTP&#x2F;2.&lt;&#x2F;p&gt;
&lt;h3&gt;What&amp;rsquo;s this release all about?&lt;&#x2F;h3&gt;
&lt;h4&gt;Tokio 1.0&lt;&#x2F;h4&gt;
&lt;p&gt;Today also sees the release of &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;blog&#x2F;2020-12-tokio-1-0&quot;&gt;Tokio v1.0&lt;&#x2F;a&gt;. We wanted to ensure that with that momentous release, hyper was ready immediately so the ecosystem can start using it right away. This change doesn&amp;rsquo;t have much of an outward effect on hyper&amp;rsquo;s API, but is a big step towards stabilizing the Rust networking experience.&lt;&#x2F;p&gt;
&lt;h4&gt;Optional Main Features&lt;&#x2F;h4&gt;
&lt;p&gt;hyper has had optional features for a while, such as optional support for the Tokio. This allows convenient usage with the excellent Tokio runtime, while allowing others who have an existing runtime to just use hyper for its HTTP bits.&lt;&#x2F;p&gt;
&lt;p&gt;In this release, however, we&amp;rsquo;ve made the main pieces of hyper optional features.&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;http1&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;http2&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;client&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;server&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;p&gt;These features cover the largest parts of hyper, its protocol implementations. With these now able to be enabled or disabled, you can significantly reduce the amount of code you compile and include in hyper. For example, if you&amp;rsquo;re application always talks to an HTTP&#x2F;1 server, you can enable just the &lt;code&gt;http1&lt;&#x2F;code&gt; and &lt;code&gt;client&lt;&#x2F;code&gt; features. Or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;tonic&quot;&gt;Tonic&lt;&#x2F;a&gt;, a Rust gRPC library, since it is based on HTTP&#x2F;2, it can disable the HTTP&#x2F;1 code in hyper, enabling only &lt;code&gt;http2&lt;&#x2F;code&gt;, &lt;code&gt;client&lt;&#x2F;code&gt;, and &lt;code&gt;server&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3&gt;What&amp;rsquo;s next?&lt;&#x2F;h3&gt;
&lt;p&gt;This release is timed to go out with &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;blog&#x2F;2020-12-tokio-1-0&quot;&gt;Tokio v1.0&lt;&#x2F;a&gt;, and notably isn&amp;rsquo;t hyper 1.0 yet. That means we&amp;rsquo;re not done. Here&amp;rsquo;s what we have planned coming soon:&lt;&#x2F;p&gt;
&lt;h4&gt;Stability&lt;&#x2F;h4&gt;
&lt;p&gt;We have our eyes set on making hyper stable, with a 1.0 release. We know many people rely on hyper to make fast, reliable HTTP applications and libraries, and it&amp;rsquo;s a top priority to make hyper stable and no longer need breaking changes.&lt;&#x2F;p&gt;
&lt;p&gt;Stability is also meant in terms of reliability: we&amp;rsquo;ll continue to fix bugs, improve performance, and undertake internal refactors that shouldn&amp;rsquo;t affect the API, but will result in more and more reliable HTTP for users.&lt;&#x2F;p&gt;
&lt;h4&gt;Simplification&lt;&#x2F;h4&gt;
&lt;p&gt;As part of the drive to stabilization and 1.0, we will be making strides towards simplifying the public API exposed in hyper. Simplifying things can mean different things, so for hyper, it refers to removing the more opinionated pieces. That means aiming to embrace the &amp;ldquo;low level&amp;rdquo; aspect of hyper, and moving more &amp;ldquo;high level&amp;rdquo; pieces into other libraries.&lt;&#x2F;p&gt;
&lt;h4&gt;C API&lt;&#x2F;h4&gt;
&lt;p&gt;Stabilizing and simplifying doesn&amp;rsquo;t mean nothing new is coming. New things are being worked on &lt;em&gt;right now&lt;&#x2F;em&gt;, but with great care to not disrupt the stabilization efforts.&lt;&#x2F;p&gt;
&lt;p&gt;hyper is a &lt;em&gt;safe&lt;&#x2F;em&gt;, correct, fast HTTP implementation written in Rust, and as it matures, the desire to use that safety in places that &lt;em&gt;aren&amp;rsquo;t&lt;&#x2F;em&gt; Rust grows. We&amp;rsquo;ve been working on a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;pull&#x2F;2278&quot;&gt;C API&lt;&#x2F;a&gt; for hyper, with the first main user being the &lt;a href=&quot;https:&#x2F;&#x2F;daniel.haxx.se&#x2F;blog&#x2F;2020&#x2F;10&#x2F;09&#x2F;rust-in-curl-with-hyper&#x2F;&quot;&gt;curl&lt;&#x2F;a&gt; project. We&amp;rsquo;re so excited to be part of this effort for a &lt;a href=&quot;https:&#x2F;&#x2F;www.abetterinternet.org&#x2F;post&#x2F;memory-safe-curl&#x2F;&quot;&gt;memory safe &amp;lsquo;curl&amp;rsquo;&lt;&#x2F;a&gt;, and you can already experimentally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;curl&#x2F;curl&#x2F;wiki&#x2F;Hyper&quot;&gt;try it out&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;To re-emphasize the stability and simplification goals, the first parts of this C API are based on the &amp;ldquo;lower level&amp;rdquo; client connection API in hyper. As hyper is used throughout curl&amp;rsquo;s extensive test suite, hyper&amp;rsquo;s Rust internals handle more edge cases and protocol features, which is a &lt;strong&gt;win for all hyper users&lt;&#x2F;strong&gt;, even if you don&amp;rsquo;t use the thin C API part.&lt;&#x2F;p&gt;
&lt;h4&gt;HTTP&#x2F;3&lt;&#x2F;h4&gt;
&lt;p&gt;In the greater Internet, work has been progressing on stabilizing QUIC and the next version of HTTP, HTTP&#x2F;3. We&amp;rsquo;ve started an effort on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;h3&quot;&gt;&lt;code&gt;h3&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; library, which provides HTTP&#x2F;3 while being generic over a QUIC implementation. There&amp;rsquo;s been great progress, with a working client example already in the repository.&lt;&#x2F;p&gt;
&lt;h3&gt;Come join us!&lt;&#x2F;h3&gt;
&lt;p&gt;This release is an important step for hyper. But as you can see, there&amp;rsquo;s still plenty to be done. If you find any issues, please &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;issues&quot;&gt;report them&lt;&#x2F;a&gt;. If you&amp;rsquo;d to help, you can look at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;issues&quot;&gt;issue board&lt;&#x2F;a&gt; and pick something to work on or discuss, and you can join the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;kkwpueZ&quot;&gt;chat&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;hyper is made through the efforts of many &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;graphs&#x2F;contributors&quot;&gt;contributors&lt;&#x2F;a&gt;, and their efforts are greatly appreciated. Together, today, we release &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.14.0&quot;&gt;hyper v0.14&lt;&#x2F;a&gt;, and look forward to what comes next!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Tokio 1.0</title>
		<published>2020-12-23T00:00:00+00:00</published>
		<updated>2020-12-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-tokio-1-0-9q9btpplcbuk3gwl15p16/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-tokio-1-0-9q9btpplcbuk3gwl15p16/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>How I Reclaimed My Attention</title>
		<published>2020-12-06T00:00:00+00:00</published>
		<updated>2020-12-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/how-i-reclaimed-my-attention-nntezk8r-gcoxm3t8aq1c/" type="text/html"/>
		<id>https://kitallis.github.io/hades/how-i-reclaimed-my-attention-nntezk8r-gcoxm3t8aq1c/</id>
		<content type="html">&lt;p&gt;It feels like boredome has been nearly extinguished, but our resiliency to it
is lower than ever. Our smartphone is always at hand, and if you pay attention
you can likely find yourself checking it nearly every second of downtime ‚Äì
becomming a default impulse that hapens so quickly there isn‚Äôt even an
&lt;em&gt;opportunity&lt;&#x2F;em&gt; to resist it.&lt;&#x2F;p&gt;
&lt;p&gt;However, I believe boredom has immense value. I find some of my most creative
and enjoyable moments to be when I am otherwise largely bored. For instance,
it‚Äôs hard to really &lt;em&gt;enjoy&lt;&#x2F;em&gt; music if you are not otherwise bored ‚Äì as music
cannot be fully appreciated while doing another task. More important, being
resilient to boredom allows you to have more freedom to direct your attention
to the things you value.&lt;&#x2F;p&gt;
&lt;p&gt;This blog post is not about the value of boredom in our lives, nor about the
value in having freedom in how we apply our attention. It is assumed that you
already see the value of those things or at least how they could be valuable.
Instead, this is about some of the general strategies I employ to reduce my
levels of distraction and live what I feel is a moderatly happy life.  I‚Äôve
struggled with attention addiction (addiction to video games, streaming website
information, etc) for most of my adult life, and have built up a large variety
of methods and tricks to reduce their hold on me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 1: make it very difficult to ‚Äúautomatically‚Äù do distracting behavior&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, (1) remove apps like twitter, reddit, facebook, games etc from
your phone. (2) Since these are all accessible via the web, &lt;strong&gt;also remove
chrome&#x2F;safari&lt;&#x2F;strong&gt; (and any other browser) as well. Technically on most phones you
can only ‚Äúdisable‚Äù these things, but the point is not to make it impossible to
distract yourself (you can never accomplish that) but to provide a barrier
against it being an &lt;em&gt;impulse&lt;&#x2F;em&gt;. Personally, I have also disabled the App Store
and the Search functionality built-into the phone, even disabling Gmail for a
few weeks at a time, since I found myself impulsively using that.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, (3) have a laptop&#x2F;computer that is for ‚Äúgetting things done.‚Äù Most
likely, this is your work computer. (For linux&#x2F;mac) go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&#x2F;etc&#x2F;hosts&lt;&#x2F;code&gt; and
disable sites that distract you like so:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1     facebook.com
127.0.0.1     www.facebook.com
127.0.0.1     reddit.com
127.0.0.1     www.reddit.com
# ... etc
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;&lt;strong&gt;Step 2: create consequences&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Write a contract with yourself; even better a best friend or significant other.
It should have:&lt;&#x2F;p&gt;
&lt;ol&gt;
  &lt;li&gt;What (significant) behaviors you are not allowed to do.&lt;&#x2F;li&gt;
  &lt;li&gt;The consequences for doing those behaviors.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;For me, since I don‚Äôt like sports, doing any of the distracting behaviors (for
more than 1 minute) requires me to purchase or wear Denver Broncos memoribilia.
If I do distracting behaviors 10ish times, I have to get a Denver Broncos
tatoo.&lt;&#x2F;p&gt;
&lt;p&gt;For smaller behaviors, like compuslively checking my phone, I have a
spreadsheet where I keep track of how often I compulively checked my phone that
day. This means that if I compusively open my phone, I have an immediate
consequence of needing to record it.&lt;&#x2F;p&gt;
&lt;p&gt;I found the book Atomic Habbits by James Clear useful as well. You might as
well.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 3: Find ways to still be connected (when useful)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I have a ‚Äúpersonal laptop‚Äù which I can only use after I put my kids to bed for
about an hour and a half. This is where I do my open source work, and also
where I briefly check some tech news. The news is blocked on my work computer
for obvious reasons, but it is nice to be able to stay up to date. I try to
stay away from most news. I find it tends to depresses me even though
I have no control over it, which has limited value.&lt;&#x2F;p&gt;
&lt;p&gt;I also still listen to podcasts, audiobooks and music on my phone, especially
while running or doing chores. This lets me stay connected while doing
activities that I value.&lt;&#x2F;p&gt;
&lt;p&gt;For me personally, I have completely abandoned video games, reddit and (non
educational) youtube. This is the nature of my own addiction, which is akin
to an alcoholic not being able to ‚Äújust have one drink‚Äù.&lt;&#x2F;p&gt;
&lt;p&gt;Also for me personally, I have found outlets for some of my addictions. I find
(open source) programming nearly as enjoyable&#x2F;distracting as playing video
games, but with a much larger long-term benefit. Therefore, I do open source
programming for a large chunk of my freetime. My recent project is
&lt;a href=&quot;https:&#x2F;&#x2F;civboot.org&quot;&gt;civboot&lt;&#x2F;a&gt;, check it out!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Conclussion&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Come up with your own methods or mimick mine ‚Äì what‚Äôs important is that you
have strategies. Also, it is important that you accept failure, because you
will fail alot. You have your whole life to figure out how to reduce
distraction and pay attention to the things that matter, so don‚Äôt stress out
about it. Don‚Äôt stress, but start right now.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a Recipe Manager - Part 5 - Data Integrity</title>
		<published>2020-11-22T11:30:00-06:00</published>
		<updated>2020-11-22T11:30:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/building-a-recipe-manager-part-5-data-integrity-ppul-k-8xldbqrhnffejm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/building-a-recipe-manager-part-5-data-integrity-ppul-k-8xldbqrhnffejm/</id>
		<content type="html">&lt;p&gt;Welcome back to my series of posts on the recipe-management software I‚Äôm building. If you haven‚Äôt been following along, you‚Äôll probably want to start at the first post. This isn‚Äôt so much a tutorial series like my posts on raytracing, just me writing about whatever‚Äôs on my mind as I build out my vision of what a recipe manager should be.
Progress In the last post I finished building the ingredient editor, meaning that I could move on to the recipe editor - probably the most important view in the whole application.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Servo‚Äôs new home</title>
		<published>2020-11-17T00:30:00+00:00</published>
		<updated>2020-11-17T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/servo-s-new-home-r70clusmoztcn5xkzc8py/" type="text/html"/>
		<id>https://kitallis.github.io/hades/servo-s-new-home-r70clusmoztcn5xkzc8py/</id>
		<content type="html">&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;servo.org&quot;&gt;Servo Project&lt;&#x2F;a&gt; is excited to announce that it has found a new home with the Linux Foundation. Servo was incubated inside Mozilla, and served as the proof that important web components such as CSS and rendering could be implemented in Rust, with all its safety, concurrency and speed. Now it‚Äôs time for Servo to leave the nest!&lt;&#x2F;p&gt;
&lt;p&gt;This move comes with a change in project governance: the Servo Project gains a board and a technical steering committee to help guide the project‚Äôs future (see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;project&#x2F;&quot;&gt;github.com&#x2F;servo&#x2F;project&#x2F;&lt;&#x2F;a&gt; for more details).&lt;&#x2F;p&gt;
&lt;p&gt;Servo‚Äôs high-level goals remain unchanged: to provide a high-performance, safe rendering engine for embedding in other applications. It is the responsibility of the technical steering committee to provide direction for these goals and enable the wider Servo community to make meaningful contributions that advance this mission.&lt;&#x2F;p&gt;
&lt;p&gt;As a result of these changes, it is now easier than ever before to contribute to Servo‚Äôs future. Whether by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;&quot;&gt;writing code or documentation&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;testing nightlies&lt;&#x2F;a&gt; and filing issues, or &lt;a href=&quot;https:&#x2F;&#x2F;crowdfunding.lfx.linuxfoundation.org&#x2F;projects&#x2F;servo&quot;&gt;donating&lt;&#x2F;a&gt; to help cover the project‚Äôs new CI and hosting costs, every bit helps. If you know a company that would like to support the Servo Project, please &lt;a href=&quot;mailto:info@servo.org&quot;&gt;get in touch&lt;&#x2F;a&gt; as we will be rolling out a formal membership program to support the future of the project.&lt;&#x2F;p&gt;
&lt;p&gt;We also have a new home for discussions, help and general conversation, at the &lt;a href=&quot;https:&#x2F;&#x2F;servo.zulipchat.com&#x2F;&quot;&gt;Servo Zulip&lt;&#x2F;a&gt;. We hope to see you there, and look forward to building the future of embeddable web rendering engines with you in our new home!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a Recipe Manager - Part 4 - Async-std and Even More Druid</title>
		<published>2020-11-08T15:00:00-06:00</published>
		<updated>2020-11-08T15:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/building-a-recipe-manager-part-4-async-std-and-even-more-druid-wkkephigj9t94oholwv5p/" type="text/html"/>
		<id>https://kitallis.github.io/hades/building-a-recipe-manager-part-4-async-std-and-even-more-druid-wkkephigj9t94oholwv5p/</id>
		<content type="html">&lt;p&gt;Welcome back to my series of posts on the recipe-management software I‚Äôm building. If you haven‚Äôt been following along, you‚Äôll probably want to start at the first post. This isn‚Äôt so much a tutorial series like my posts on raytracing, just me writing about whatever‚Äôs on my mind as I build out my vision of what a recipe manager should be.
Progress In the last post I finished building the ingredient editor itself (at least for now).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a Recipe Manager - Part 3 - Parsing and more Druid</title>
		<published>2020-10-25T15:30:00-06:00</published>
		<updated>2020-10-25T15:30:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/building-a-recipe-manager-part-3-parsing-and-more-druid-yz-o6yxgpsruyvsa-4u4a/" type="text/html"/>
		<id>https://kitallis.github.io/hades/building-a-recipe-manager-part-3-parsing-and-more-druid-yz-o6yxgpsruyvsa-4u4a/</id>
		<content type="html">&lt;p&gt;Hello! This post will likely be a bit shorter than the last. Today‚Äôs topic is a few thoughts about how complex it can be to parse human input, and how that interacts with Druid‚Äôs data model.
Progress I think I‚Äôm nearly finished tweaking the ingredient editor. I‚Äôve spent the better part of a month on just this one view and that might seem like overkill, but for software like this the user experience is the whole point so it‚Äôs important to get it right.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Building a Recipe Manager - Part 2 - Druid Experience Report</title>
		<published>2020-10-18T15:00:00-06:00</published>
		<updated>2020-10-18T15:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/building-a-recipe-manager-part-2-druid-experience-report-jqurdk-inwnasmi2paanr/" type="text/html"/>
		<id>https://kitallis.github.io/hades/building-a-recipe-manager-part-2-druid-experience-report-jqurdk-inwnasmi2paanr/</id>
		<content type="html">&lt;p&gt;It‚Äôs been a couple of weeks since the last post, and as promised I‚Äôm back with some progress on the ingredient editor. The last post talked about my goals for this project, technical design decisions based on those goals, and my philosophy on starting challenging projects. This post is more of an experience report from my first few weeks of working with Druid.
Before we dig into Druid though, the progress in the last two weeks.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Tokio 0.3 and the path to 1.0</title>
		<published>2020-10-15T00:00:00+00:00</published>
		<updated>2020-10-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-tokio-0-3-and-the-path-to-1-0-oz5ozo-wxlf6n-xesvndo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-tokio-0-3-and-the-path-to-1-0-oz5ozo-wxlf6n-xesvndo/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Building a Recipe Manager - Part 1</title>
		<published>2020-10-04T13:00:00-06:00</published>
		<updated>2020-10-04T13:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/building-a-recipe-manager-part-1-gatifpjbp3dlqvaqqwtzh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/building-a-recipe-manager-part-1-gatifpjbp3dlqvaqqwtzh/</id>
		<content type="html">&lt;p&gt;Something you might not know about me is that I‚Äôm an avid home cook. As such, I like to experiment in the kitchen, improvise new recipes, and modify existing ones. I also track my calorie and macronutrient intake. I have software tools for this, but I don‚Äôt like them and eventually I got fed up and decided to write my own.
I also thought it would be interesting to try working with the garage door up and writing more publicly about what I‚Äôm working on, so this is part one of an ongoing series where I do just that.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>the near- and medium-term future of a quiet misdreavus</title>
		<published>2020-09-25T00:00:00-06:00</published>
		<updated>2020-09-25T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/the-near-and-medium-term-future-of-a-quiet-misdreavus-0eb8-fhv-tinaavdbfpci/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-near-and-medium-term-future-of-a-quiet-misdreavus-0eb8-fhv-tinaavdbfpci/</id>
		<content type="html">&lt;p&gt;Here‚Äôs another post where i‚Äôll start with the short version: &lt;strong&gt;Next month, i will be starting a
position at Apple, and cutting back how much i code outside of work hours.&lt;&#x2F;strong&gt; There‚Äôs a short answer
for how these statements are related - the broad reach and corporate policies of Apple make it
cumbersome to publish or contribute to open-source software - but i also want to look at the
situation in a different light.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>it&#x27;s time for some color theory</title>
		<published>2020-09-18T00:00:00-06:00</published>
		<updated>2020-09-18T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/it-s-time-for-some-color-theory-gm9fma2rvhh4k-k8kz9nu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/it-s-time-for-some-color-theory-gm9fma2rvhh4k-k8kz9nu/</id>
		<content type="html">&lt;p&gt;&lt;em&gt;(Meme reference: &lt;a href=&quot;https:&#x2F;&#x2F;knowyourmeme.com&#x2F;memes&#x2F;its-time-for-some-game-theory&quot;&gt;‚ÄúGuys, it‚Äôs time for some game theory.‚Äù&lt;&#x2F;a&gt;)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>GSoC wrap-up - Implementing WebGPU in Servo</title>
		<published>2020-08-30T00:30:00+00:00</published>
		<updated>2020-08-30T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/gsoc-wrap-up-implementing-webgpu-in-servo-dxwn1fawalzrmtginlofe/" type="text/html"/>
		<id>https://kitallis.github.io/hades/gsoc-wrap-up-implementing-webgpu-in-servo-dxwn1fawalzrmtginlofe/</id>
		<content type="html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;Hello everyone! I am Kunal(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kunalmohan&quot;&gt;@kunalmohan&lt;&#x2F;a&gt;), an undergrad student at Indian Institute of Technology Roorkee, India. As a part of Google Summer of Code(GSoC) 2020, I worked on implementing WebGPU in Servo under the mentorship of Mr. Dzmitry Malyshau(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt;). I devoted the past 3 months working on ways to bring the API to fruition in Servo, so that Servo is able to run the existing examples and pass the Conformance Test Suite(CTS). This is going to be a brief account of how I started with the project, what challenges I faced, and how I overcame them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-is-webgpu&quot;&gt;What is WebGPU?&lt;&#x2F;h2&gt;
&lt;p&gt;WebGPU is a future web standard, cross-platform graphics API aimed to make GPU capabilities more accessible on the web. WebGPU is designed from the ground up to efficiently map to the Vulkan, Direct3D 12, and Metal native GPU APIs. A native implementation of the API in Rust is developed in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu project&lt;&#x2F;a&gt;. Servo implementation of the API uses this crate.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-project&quot;&gt;The Project&lt;&#x2F;h2&gt;
&lt;p&gt;At the start of the project the implementation was in a pretty raw state- Servo was only able to accept shaders as SPIRV binary and ran just the compute example. I had the following tasks in front of me:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Implement the various &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;#idl-index&quot;&gt;DOM interfaces&lt;&#x2F;a&gt; that build up the API.&lt;&#x2F;li&gt;
  &lt;li&gt;Setup a proper Id rotation for the GPU resources.&lt;&#x2F;li&gt;
  &lt;li&gt;Integrate WebGPU with WebRender for presenting the rendering to HTML canvas.&lt;&#x2F;li&gt;
  &lt;li&gt;Setup proper model model for async error recording.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The final goal was to be able to run the live examples at https:&#x2F;&#x2F;austineng.github.io&#x2F;webgpu-samples&#x2F; and pass a fair amount of the CTS.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation&quot;&gt;Implementation&lt;&#x2F;h2&gt;
&lt;p&gt;Since Servo is a multi-process browser, GPU is accessed from a different process(server-side) than the one running the page content and scripts(content process). For better performance and asynchronous behaviour, we have a separate wgpu thread for each content process.&lt;&#x2F;p&gt;
&lt;p&gt;Setting up a proper Id rotation for the GPU resources was our first priority. I had to ensure that each Id generated was unique. This meant sharing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;blob&#x2F;a5a21a59addae0df6d9e050f17d44399db04fec3&#x2F;components&#x2F;script&#x2F;dom&#x2F;identityhub.rs#L56-L67&quot;&gt;Identity Hub&lt;&#x2F;a&gt; among all threads via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Arc&lt;&#x2F;code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mutex&lt;&#x2F;code&gt;. For recycling the Ids, wgpu exposes an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IdentityHandler&lt;&#x2F;code&gt; trait that must be implemented on the server-side interface of the browser and wgpu. This facilitates the following: when wgpu detects that an object has been dropped by the user (which is some time after the actual drop&#x2F;garbage collection), wgpu calls the trait methods that are responsible for releasing the Id. In our case they send a message to the content process to free the Id and make it available for reuse.&lt;&#x2F;p&gt;
&lt;p&gt;Implementing the DOM Interfaces was pretty straight forward. A DOM object is just an opaque handle to an actual GPU resource. Whenever a method, that performs an operation, is called on a DOM object there are 2 things to be done- convert the IDL types to wgpu types. And send a message to the server to perform the operation. Most of the validation is done within wgpu.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;presentation&quot;&gt;Presentation&lt;&#x2F;h2&gt;
&lt;p&gt;WebGPU textures can be rendered to HTML canvas via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUCanvasContext&lt;&#x2F;code&gt;, which can be obtained from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;canvas.getContext(&#x27;gpupresent&#x27;)&lt;&#x2F;code&gt;. All rendered images are served to WebRender as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExternalImages&lt;&#x2F;code&gt; for rendering purpose. This is done via an async software presentation path. Each new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUCanvasContext&lt;&#x2F;code&gt; object is assigned a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExternalImageId&lt;&#x2F;code&gt; and a new swap chain is assigned a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ImageKey&lt;&#x2F;code&gt;. Since WebGPU threads are spawned on-demand, an image handler for WebGPU is initialized at startup, stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Constellation&lt;&#x2F;code&gt;, and supplied to threads at the time of spawn. Each time &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUSwapChain.getCurrentTexture()&lt;&#x2F;code&gt; is called the canvas is marked as dirty which is then flushed at the time of reflow. At the time of flush, a message is sent to the wgpu server to update the image data provided to WebRender. The following happens after this:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;The contents of the rendered texture are copied to a buffer.&lt;&#x2F;li&gt;
  &lt;li&gt;Buffer is mapped asynchronously for read.&lt;&#x2F;li&gt;
  &lt;li&gt;The data read from the buffer is copied to a staging area in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;blob&#x2F;669b16f2c054bd038b7a3c69985076607e140b7f&#x2F;components&#x2F;webgpu&#x2F;lib.rs#L1353-L1365&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PresentionData&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PresentationData&lt;&#x2F;code&gt; stores the data and all the required machinery for this async presentation belt.&lt;&#x2F;li&gt;
  &lt;li&gt;When WebRender wants to read the data, it locks on the data to prevent it from being altered during read. Data is served in the form of raw bytes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The above process is not the best one, but the only option available to us for now. This also causes a few empty frames to be rendered at the start.
A good thing, though, is that this works on all platforms and is a great fallback path while we‚Äôll be adding hardware accelerate presentation in the future.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;buffer-mapping&quot;&gt;Buffer Mapping&lt;&#x2F;h2&gt;
&lt;p&gt;When the user issues an async buffer map operation, the operation is queued on the server-side and all devices polled at a regular interval of 100ms for the same. As soon as the map operation is complete, data is read and sent to the content process where it is stored in the Heap. The user can read and edit this data by accessing it‚Äôs subranges via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUBuffer.getMappedRange()&lt;&#x2F;code&gt; which returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExternalArrayBuffer&lt;&#x2F;code&gt; pointing to the data in the Heap. On unmap, all the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ExternalArrayBuffer&lt;&#x2F;code&gt;s are detached, and if the buffer was mapped for write, data sent back to server for write to the actual resource.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;error-reporting&quot;&gt;Error Reporting&lt;&#x2F;h2&gt;
&lt;p&gt;To achieve maximum efficiency, WebGPU supports an asynchronous error model. The implementation keeps a stack of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt;s that are responsible for capturing the errors that occur during operations performed in their scope. The user is responsible for pushing and popping an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; in the stack. Popping an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; returns a promise that is resolved to null if all the operations were successfull, otherwise it resolves to the first error that occurred.&lt;&#x2F;p&gt;
&lt;p&gt;When an operation is issued, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scope_id&lt;&#x2F;code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; on the top of the stack is sent to the server with it and operation-count of the scope is incremented. The result of the operation can be described by the enum-&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;WebGPUOpResult&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;nf&quot;&gt;ValidationError&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;OutOfMemoryError&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;nb&quot;&gt;Success&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;On receiving the result, we decrement the operation-count of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; with the given &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scope_id&lt;&#x2F;code&gt;. We further have 3 cases:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;The result is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Success&lt;&#x2F;code&gt;. Do nothing.&lt;&#x2F;li&gt;
  &lt;li&gt;The result is an error and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorFilter&lt;&#x2F;code&gt; matches the error. We record this error in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;blob&#x2F;669b16f2c054bd038b7a3c69985076607e140b7f&#x2F;components&#x2F;script&#x2F;dom&#x2F;gpudevice.rs#L85-L91&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScopeInfo&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, and if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; has been popped by the user, resolve the promise with it.&lt;&#x2F;li&gt;
  &lt;li&gt;The result is an error but the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorFilter&lt;&#x2F;code&gt; does not match the error. In this case, we find the nearest parent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; with the matching filter and record the error in it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;After the result is processed, we try to remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt; from the stack- the user should have called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;popErrorScope()&lt;&#x2F;code&gt; on the scope and the operation-count of the scope should be 0.&lt;&#x2F;p&gt;
&lt;p&gt;In case there are no error scopes on the stack or if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorFilter&lt;&#x2F;code&gt; of none of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ErrorScope&lt;&#x2F;code&gt;s match the error, the error is fired as an &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;#gpuuncapturederrorevent&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUUncapturedErrorEvent&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conformance-test-suite&quot;&gt;Conformance Test Suite&lt;&#x2F;h2&gt;
&lt;p&gt;Conformance Test Suite is required for checking the accuracy of the implementation of the API and can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gpuweb&#x2F;cts&quot;&gt;here&lt;&#x2F;a&gt;. Servo vendors it‚Äôs own copy of the CTS which, currently, needs to be updated manually for the latest changes. Here are a few statistics of the tests:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;14&#x2F;36 pass completely&lt;&#x2F;li&gt;
  &lt;li&gt;5&#x2F;36 have majority of subtests passing&lt;&#x2F;li&gt;
  &lt;li&gt;17&#x2F;36 fail&#x2F;crash&#x2F;timeout&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The wgpu team is actively working on improving the validation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;unfinished-business&quot;&gt;Unfinished business&lt;&#x2F;h2&gt;
&lt;p&gt;A major portion of the project that was proposed has been completed, but there‚Äôs still work left to do. These are a few things that I was unable to cover under the proposed timeline:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Profiling and benchmarking the implementation against the WebGL implementation of Servo.&lt;&#x2F;li&gt;
  &lt;li&gt;Handle canvas resize event smoothly.&lt;&#x2F;li&gt;
  &lt;li&gt;Support Error recording on Workers.&lt;&#x2F;li&gt;
  &lt;li&gt;Support WGSL shaders.&lt;&#x2F;li&gt;
  &lt;li&gt;Pass the remaining tests in the CTS.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;important-links&quot;&gt;Important Links&lt;&#x2F;h2&gt;
&lt;p&gt;The WebGPU specification can be found &lt;a href=&quot;https:&#x2F;&#x2F;gpuweb.github.io&#x2F;gpuweb&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.
The PRs that I made as a part of the project can be accessed via the following links:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pulls?q=is%3Apr+author%3Akunalmohan+created%3A%3E2020-05-05+merged%3A%3C2020-08-31+&quot;&gt;Servo&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&#x2F;pulls?q=is%3Apr+author%3Akunalmohan+created%3A%3E2020-05-05+merged%3A%3C2020-08-31+&quot;&gt;wgpu&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gpuweb&#x2F;gpuweb&#x2F;pulls?q=is%3Apr+author%3Akunalmohan+created%3A%3E2020-05-05+merged%3A%3C2020-08-31+&quot;&gt;WebGPU Specification&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The progress of the project can be tracked in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;GitHub project&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;WebGPU implementation in Servo supports all of the &lt;a href=&quot;https:&#x2F;&#x2F;austineng.github.io&#x2F;webgpu-samples&#x2F;&quot;&gt;Austin‚Äôs samples&lt;&#x2F;a&gt;. Thanks to CYBAI and Josh, Servo now supports dynamic import of modules and thus accept GLSL shaders. Here are a few samples of what Servo is capable of rendering at 60fps:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;webgpu-fractal-cube.gif&quot; alt=&quot;Fractal Cube&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;webgpu-instanced-cube.gif&quot; alt=&quot;Instanced Cube&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;webgpu-compute-boids.gif&quot; alt=&quot;Compute Boids&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I would like to thank Dzmitry and Josh for guiding me throughout the project and a big shoutout to the WebGPU and Servo community for doing such awesome work! I had a great experience contributing to Servo and WebGPU. I started as a complete beginner to Rust, graphics and browser internals, but learned a lot during the course of this project. I urge all WebGPU users and graphics enthusiasts out there to test their projects on Servo and help us improve the implementation and the API as well :)&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 135</title>
		<published>2020-08-10T00:30:00+00:00</published>
		<updated>2020-08-10T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-135-c8un0649f0ylqsymiazqy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-135-c8un0649f0ylqsymiazqy/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2020-07-27..2020-08-10+user%3Aservo+&quot;&gt;past two weeks&lt;&#x2F;a&gt;,
we merged 108 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;The latest nightly builds for common platforms are available at &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;download.servo.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Last week we released &lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;p&#x2F;firefox-reality&#x2F;9npq78m7nb0r&quot;&gt;Firefox Reality v1.2&lt;&#x2F;a&gt;, which includes a smoother
developer tools experience, along with support for Unity WebXR content and self-signed SSL certificates. See the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Firefox-Reality-release-notes&quot;&gt;full release notes&lt;&#x2F;a&gt; for more information about the new release.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;user-images.githubusercontent.com&#x2F;27658&#x2F;89798375-19568080-dafa-11ea-8bd3-d47a85741ed5.png&quot; alt=&quot;Image of unity webxr content&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2020.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;paulrouget is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27556&quot;&gt;adding&lt;&#x2F;a&gt; bookmarks to Firefox Reality.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27488&quot;&gt;implementing&lt;&#x2F;a&gt; basic table support in the new Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27474&quot;&gt;making&lt;&#x2F;a&gt; it easy to create builds that integrate AddressSanitizer.&lt;&#x2F;li&gt;
  &lt;li&gt;pcwalton is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27539&quot;&gt;implementing&lt;&#x2F;a&gt; support for CSS floats in the new Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing&lt;&#x2F;a&gt; the draft WebGPU specification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;h5 id=&quot;new-layout-engine&quot;&gt;New layout engine&lt;&#x2F;h5&gt;
&lt;ul&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;26447&quot;&gt;made&lt;&#x2F;a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;&#x2F;code&gt; elements break lines.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27388&quot;&gt;implemented&lt;&#x2F;a&gt; support for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clip&lt;&#x2F;code&gt; CSS property.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27399&quot;&gt;fixed&lt;&#x2F;a&gt; the behaviour of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inset&lt;&#x2F;code&gt; CSS property for absolutely positioned elements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;non-layout-changes&quot;&gt;Non-layout changes&lt;&#x2F;h4&gt;
&lt;ul&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27402&quot;&gt;added&lt;&#x2F;a&gt; the WebGPU conformance test suite to Servo‚Äôs automated tests.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27403&quot;&gt;improved&lt;&#x2F;a&gt; the macOS nightly GStreamer packaging.&lt;&#x2F;li&gt;
  &lt;li&gt;nicoabie &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-mozjs&#x2F;pull&#x2F;520&quot;&gt;made&lt;&#x2F;a&gt; a SpiderMonkey Rust binding API more resilient.&lt;&#x2F;li&gt;
  &lt;li&gt;utsavoze &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27413&quot;&gt;added&lt;&#x2F;a&gt; support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mouseenter&lt;&#x2F;code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mouseleave&lt;&#x2F;code&gt; DOM events.&lt;&#x2F;li&gt;
  &lt;li&gt;avr1254 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27420&quot;&gt;removed&lt;&#x2F;a&gt; some unnecessary UTF-8 to UTF-16 conversions when interacting with SpiderMonkey.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27425&quot;&gt;implemented&lt;&#x2F;a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preserveDrawbingBuffer&lt;&#x2F;code&gt; support in WebGL code.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27438&quot;&gt;added&lt;&#x2F;a&gt; a crash reporting UI to Firefox Reality.&lt;&#x2F;li&gt;
  &lt;li&gt;mustafapc19 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27443&quot;&gt;implemented&lt;&#x2F;a&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Console.clear&lt;&#x2F;code&gt; DOM API.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27447&quot;&gt;fixed&lt;&#x2F;a&gt; a WebGPU crash related to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GPUErrorScope&lt;&#x2F;code&gt; API, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27536&quot;&gt;improved&lt;&#x2F;a&gt; the reporting behaviour to match the specification.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27448&quot;&gt;fixed&lt;&#x2F;a&gt; a source of WebGL texture corruption in WebXR.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27456&quot;&gt;added&lt;&#x2F;a&gt; infrastructure to the GStreamer plugin to allow live-streaming 360 degree videos of Hubs rooms to Youtube.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27480&quot;&gt;improved&lt;&#x2F;a&gt; the error reporting behaviour of the WebGPU API.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27487&quot;&gt;update&lt;&#x2F;a&gt; the WebXR Layers implementation to match the latest specification.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27491&quot;&gt;improved&lt;&#x2F;a&gt; the Firefox Reality preferences panel to highlight specific experimental features.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27530&quot;&gt;fixed&lt;&#x2F;a&gt; a crash when playing media in Firefox Reality.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27506&quot;&gt;fixed&lt;&#x2F;a&gt; a source of memory corruption in the C++ embedding layer.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27512&quot;&gt;avoided&lt;&#x2F;a&gt; pancking when a devtools client disconnects unexpectedly.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;webxr&#x2F;pull&#x2F;191&quot;&gt;made&lt;&#x2F;a&gt; it easier to test AR web content in desktop builds.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nosark&quot;&gt;Kyle Nosar&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Monty0045&quot;&gt;Wyatt Turner&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mustafapc19&quot;&gt;mustafapc19&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Efficient Use of Travis-CI&#x27;s Cache For Rust Builds</title>
		<published>2020-08-03T18:00:00-06:00</published>
		<updated>2020-08-03T18:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/efficient-use-of-travis-ci-s-cache-for-rust-builds-hvk1nw0-iacrnotecd4ad/" type="text/html"/>
		<id>https://kitallis.github.io/hades/efficient-use-of-travis-ci-s-cache-for-rust-builds-hvk1nw0-iacrnotecd4ad/</id>
		<content type="html">&lt;p&gt;A while ago, I complained on Reddit about the Travis-CI build times for my Rust crates. Aleksey Kladov, better known in the Rust community as ‚Äúmatklad‚Äù, responded to mention that Travis-CI‚Äôs caching behavior is‚Ä¶ suboptimal for Rust crates and gave me a way to fix it.
I figure there are probably other Rust developers out there who aren‚Äôt aware of this, so I‚Äôm writing a short post to explain it.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 134</title>
		<published>2020-07-27T00:30:00+00:00</published>
		<updated>2020-07-27T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-134-iqxivkhyewhbn8arpeukl/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-134-iqxivkhyewhbn8arpeukl/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2020-07-20..2020-07-27+user%3Aservo+&quot;&gt;past week&lt;&#x2F;a&gt;,
we merged 69 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;The latest nightly builds for common platforms are available at &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;download.servo.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Servo has been successfully &lt;a href=&quot;https:&#x2F;&#x2F;blog.mozvr.com&#x2F;a-browser-plugin-for-unity&#x2F;&quot;&gt;integrated&lt;&#x2F;a&gt; into 3d Unity scenes as a 2d browser plugin.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=NoEzDAYlflE&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;img.youtube.com&#x2F;vi&#x2F;NoEzDAYlflE&#x2F;0.jpg&quot; alt=&quot;Servo in the Unity editor&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Our macOS nightly builds last week panicked on launch due to missing shared libraries. That issue has been fixed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2020.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;philip-lamb is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MozillaReality&#x2F;servo-unity&#x2F;&quot;&gt;creating&lt;&#x2F;a&gt; a Unity embedding for Servo.&lt;&#x2F;li&gt;
  &lt;li&gt;pcwalton is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27216&quot;&gt;implementing&lt;&#x2F;a&gt; support for CSS floats in the new Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing&lt;&#x2F;a&gt; the draft WebGPU specification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;AhibshekSharma102 and gterzian &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;26710&quot;&gt;made&lt;&#x2F;a&gt; large external JS scripts compile on a background thread.&lt;&#x2F;li&gt;
  &lt;li&gt;pcwalton &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27216&quot;&gt;implemented&lt;&#x2F;a&gt; core float layout algorithms in the Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;avr1254 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;272990&quot;&gt;standardized&lt;&#x2F;a&gt; some navigation-related algorithms for forms and anchors.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27304&quot;&gt;made&lt;&#x2F;a&gt; the UWP devtools server use a fixed port instead of a random one.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27313&quot;&gt;updated&lt;&#x2F;a&gt; the XRWebGLLayer interface to match the WebXR specification.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27316&quot;&gt;fixed&lt;&#x2F;a&gt; a WebXR rendering regression on the HoloLens 2 that affected Babylon.js and Unity WebXR content.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27325&quot;&gt;made&lt;&#x2F;a&gt; it possible for WebXR URLs opened via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fxrmin:&#x2F;&#x2F;&lt;&#x2F;code&gt; protocol to launch immersive mode immediately on document load.&lt;&#x2F;li&gt;
  &lt;li&gt;utsavoza &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;mozjs&#x2F;pull&#x2F;256&quot;&gt;allowed&lt;&#x2F;a&gt; SpiderMonkey to build with the most recent macOS SDK.&lt;&#x2F;li&gt;
  &lt;li&gt;SimonSapin &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27385&quot;&gt;added&lt;&#x2F;a&gt; support for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;display: list-item&lt;&#x2F;code&gt; in the Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27389&quot;&gt;implemented&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27329&quot;&gt;multiple&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27348&quot;&gt;missing features&lt;&#x2F;a&gt; of the WebGPU specification.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27368&quot;&gt;fixed&lt;&#x2F;a&gt; a regression reported in the UWP certification process for allowed APIs.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27339&quot;&gt;implemented&lt;&#x2F;a&gt; part of aligning flexboxes in Layout 2020.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;webxr&#x2F;pull&#x2F;186&quot;&gt;fixed&lt;&#x2F;a&gt; a regression in exiting immersive mode.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AbhishekSharma102&quot;&gt;AbhishekSharma102&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 133</title>
		<published>2020-07-20T00:30:00+00:00</published>
		<updated>2020-07-20T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-133-qvtradcb2-c3d-stkompo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-133-qvtradcb2-c3d-stkompo/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2020-07-13..2020-07-20+user%3Aservo+&quot;&gt;past week&lt;&#x2F;a&gt;,
we merged 62 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;The latest nightly builds for common platforms are available at &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;download.servo.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We now have a collection of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;blob&#x2F;master&#x2F;docs&#x2F;hololens.md&quot;&gt;tips &amp;amp; tricks&lt;&#x2F;a&gt; for using Firefox Reality on the HoloLens 2.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2020.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;pcwalton is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27216&quot;&gt;implementing&lt;&#x2F;a&gt; support for CSS floats in the new Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;AbhishekSharma102 and gterzian are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;26710&quot;&gt;making&lt;&#x2F;a&gt; some JS scripts compile off the main thread.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing&lt;&#x2F;a&gt; the draft WebGPU specification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;webxr&#x2F;pull&#x2F;184&quot;&gt;avoided&lt;&#x2F;a&gt; a GL error when exiting immersive mode.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27295&quot;&gt;implemented&lt;&#x2F;a&gt; support for streaming from webxr content to the GStreamer plugin embedding.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27300&quot;&gt;fixed&lt;&#x2F;a&gt; an issue with websocket HTTP requests, enabling Mozilla Hubs to load.&lt;&#x2F;li&gt;
  &lt;li&gt;ferjm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;373&quot;&gt;fixed&lt;&#x2F;a&gt; a regression preventing getUserMedia and other MediaStream APIs from working.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27285&quot;&gt;implemented&lt;&#x2F;a&gt; error scopes for WebGPU.&lt;&#x2F;li&gt;
  &lt;li&gt;avr1254 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27255&quot;&gt;added&lt;&#x2F;a&gt; the missing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relList&lt;&#x2F;code&gt; DOM attribute for HTMLFormElement.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27250&quot;&gt;improved&lt;&#x2F;a&gt; the behaviour of dismissing an on-screen keyboard in Firefox Reality.&lt;&#x2F;li&gt;
  &lt;li&gt;cybai &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27026&quot;&gt;implemented&lt;&#x2F;a&gt; support for dynamic module imports.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;avr1254&quot;&gt;Arjun Ramachandrula&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 132</title>
		<published>2020-07-13T00:30:00+00:00</published>
		<updated>2020-07-13T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-132-b1rk1elnlwcgevyhouxa6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-132-b1rk1elnlwcgevyhouxa6/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2020-07-06..2020-07-13+user%3Aservo+&quot;&gt;past week&lt;&#x2F;a&gt;,
we merged 64 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;The latest nightly builds for common platforms are available at &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;download.servo.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Servo now has the ability to record 360 degree videos of immersive web content like &lt;a href=&quot;http:&#x2F;&#x2F;rawcdn.githack.com&#x2F;mrdoob&#x2F;three.js&#x2F;master&#x2F;examples&#x2F;webxr_vr_rollercoaster.html&quot;&gt;this three.js rollercoaster&lt;&#x2F;a&gt;:
&lt;a href=&quot;http:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=buivCKjTtbk&quot; title=&quot;360 rollercoaster video&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;img.youtube.com&#x2F;vi&#x2F;buivCKjTtbk&#x2F;0.jpg&quot; alt=&quot;360 rollercoaster video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2020.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;pcwalton is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27216&quot;&gt;implementing&lt;&#x2F;a&gt; support for CSS floats in the new Layout 2020 engine.&lt;&#x2F;li&gt;
  &lt;li&gt;AbhishekSharma102 and gterzian are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;26710&quot;&gt;making&lt;&#x2F;a&gt; some JS scripts compile off the main thread.&lt;&#x2F;li&gt;
  &lt;li&gt;cybai and jdm are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27026&quot;&gt;implementing&lt;&#x2F;a&gt; dynamic module script imports.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing&lt;&#x2F;a&gt; the draft WebGPU specification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27229&quot;&gt;updated&lt;&#x2F;a&gt; the developer tools server to support recent nightly Firefox versions.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27227&quot;&gt;fixed&lt;&#x2F;a&gt; a bug preventing some DOM interfaces like XRInputSourceArray from being iterated.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27224&quot;&gt;implemented&lt;&#x2F;a&gt; support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;webxr&#x2F;pull&#x2F;181&quot;&gt;recording&lt;&#x2F;a&gt; immersive WebXR content as 360 degree videos.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-ammonia&#x2F;rust-content-security-policy&#x2F;pull&#x2F;30&quot;&gt;fixed&lt;&#x2F;a&gt; a bug causing over-zealous CSP blocking.&lt;&#x2F;li&gt;
  &lt;li&gt;ferjm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27152&quot;&gt;implemented&lt;&#x2F;a&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MediaDevices.enumerateDevices&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;368&quot;&gt;media&lt;&#x2F;a&gt; API.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;370&quot;&gt;removed&lt;&#x2F;a&gt; a panic when HRTF audio is requested.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27177&quot;&gt;fixed&lt;&#x2F;a&gt; a bug preventing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fxr:&#x2F;&#x2F;&lt;&#x2F;code&gt; protocol handler from working in Firefox Reality.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;font-kit&#x2F;pull&#x2F;156&quot;&gt;worked around&lt;&#x2F;a&gt; a permission error when requesting system fonts under UWP, also avoiding a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27184&quot;&gt;panic&lt;&#x2F;a&gt; when using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fillText&lt;&#x2F;code&gt; API.&lt;&#x2F;li&gt;
  &lt;li&gt;asajeffrey &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27142&quot;&gt;fixed&lt;&#x2F;a&gt; a bug in GL context initialization for the gstreamer plugin that renders Servo content.&lt;&#x2F;li&gt;
  &lt;li&gt;mbrubeck &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-smallvec&#x2F;pull&#x2F;213&quot;&gt;avoided&lt;&#x2F;a&gt; leaking memory in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smallvec&lt;&#x2F;code&gt; crate when panicking during &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insert_many&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27164&quot;&gt;replaced&lt;&#x2F;a&gt; the websocket backend, allowing SSL websockets to work on Windows as a result.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;No new contributors this week.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 131</title>
		<published>2020-07-06T00:30:00+00:00</published>
		<updated>2020-07-06T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-131-rs8fx-tcketqshft5x0r/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-131-rs8fx-tcketqshft5x0r/</id>
		<content type="html">&lt;p&gt;Welcome back everyone - it‚Äôs been a year without written updates, but we‚Äôre getting this train back on track! Servo hasn‚Äôt been
dormant in that time; the biggest news was the public release of &lt;a href=&quot;https:&#x2F;&#x2F;www.microsoft.com&#x2F;en-ca&#x2F;p&#x2F;firefox-reality&#x2F;9npq78m7nb0r?rtc=1&amp;amp;activetab=pivot:overviewtab&quot;&gt;Firefox Reality&lt;&#x2F;a&gt;
(built on Servo technology) in the Microsoft store.&lt;&#x2F;p&gt;
&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2020-06-30..2020-07-06+user%3Aservo+&quot;&gt;past week&lt;&#x2F;a&gt;,
we merged 44 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;The latest nightly builds for common platforms are available at &lt;a href=&quot;https:&#x2F;&#x2F;download.servo.org&#x2F;&quot;&gt;download.servo.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2020.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;jdm is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27164&quot;&gt;replacing&lt;&#x2F;a&gt; the websocket backend.&lt;&#x2F;li&gt;
  &lt;li&gt;cybai and jdm are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27026&quot;&gt;implementing&lt;&#x2F;a&gt; dynamic module script imports.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;projects&#x2F;24&quot;&gt;implementing&lt;&#x2F;a&gt; the draft WebGPU specification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;SimonSapin &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-smallvec&#x2F;pull&#x2F;228&quot;&gt;fixed&lt;&#x2F;a&gt; a source of Undefined Behaviour in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smallvec&lt;&#x2F;code&gt; crate.&lt;&#x2F;li&gt;
  &lt;li&gt;muodov &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27174&quot;&gt;improved&lt;&#x2F;a&gt; the compatibility of invalid form elements with the HTML specification, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27100&quot;&gt;added&lt;&#x2F;a&gt;
the missing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requestSubmit&lt;&#x2F;code&gt; API.&lt;&#x2F;li&gt;
  &lt;li&gt;kunalmohan &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27173&quot;&gt;implemented&lt;&#x2F;a&gt; GPUQueue APIs for WebGPU, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27154&quot;&gt;avoided&lt;&#x2F;a&gt;
synchronous updates, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27126&quot;&gt;implemented&lt;&#x2F;a&gt; the getMappedRange API for GPUBuffer.&lt;&#x2F;li&gt;
  &lt;li&gt;alaryso &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27169&quot;&gt;fixed&lt;&#x2F;a&gt; a bug preventing running tests when using rust-analyzer.&lt;&#x2F;li&gt;
  &lt;li&gt;alaryso &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27163&quot;&gt;avoided&lt;&#x2F;a&gt; a panic in pages that perform layout queries on disconnected iframes.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27149&quot;&gt;integrated&lt;&#x2F;a&gt; virtual keyboard support for text inputs into Firefox Reality, as well as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27114&quot;&gt;added&lt;&#x2F;a&gt;
support for keyboard events.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27143&quot;&gt;implemented&lt;&#x2F;a&gt; WebAudio node types for reading and writing MediaStreams.&lt;&#x2F;li&gt;
  &lt;li&gt;gterzian &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27016&quot;&gt;improved&lt;&#x2F;a&gt; the responsiveness of the browser when shutting down.&lt;&#x2F;li&gt;
  &lt;li&gt;utsavoza &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;27104&quot;&gt;updated&lt;&#x2F;a&gt; the referrer policy implementation to match the updated specification.&lt;&#x2F;li&gt;
  &lt;li&gt;ferjm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;26752&quot;&gt;implemented&lt;&#x2F;a&gt; support for WebRTC data channels.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;muodov&quot;&gt;Maxim Tsoy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Access MySQL from Rust Part IV</title>
		<published>2020-06-10T21:09:08+00:00</published>
		<updated>2020-06-10T21:09:08+00:00</updated>
		<link href="https://kitallis.github.io/hades/access-mysql-from-rust-part-iv-09qya7eau-ef5h6dqxf1f/" type="text/html"/>
		<id>https://kitallis.github.io/hades/access-mysql-from-rust-part-iv-09qya7eau-ef5h6dqxf1f/</id>
		<content type="html">&lt;p&gt;In Part III we built a module for database access. In this post we will bring the whole series to its conclusion. We will build a web service layer to expose the data access layer to the outside world. We will use the actix web framework. Add Dependencies Open Cargo.toml. Add actix-web, actix-rt and serde [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Access MySQL from Rust Part III</title>
		<published>2020-06-09T01:44:50+00:00</published>
		<updated>2020-06-09T01:44:50+00:00</updated>
		<link href="https://kitallis.github.io/hades/access-mysql-from-rust-part-iii-rvxsji6p3ivnkisfvmn3y/" type="text/html"/>
		<id>https://kitallis.github.io/hades/access-mysql-from-rust-part-iii-rvxsji6p3ivnkisfvmn3y/</id>
		<content type="html">&lt;p&gt;In Part II we explored how to insert, update and delete rows. In this part we will build a database access layer. It will be a set of functions that perform database access. We will continue to work with the PRODUCT table we created earlier. Create a Data Layer Module In the src folder of [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Accessing MySQL from Rust Part II</title>
		<published>2020-06-02T19:02:26+00:00</published>
		<updated>2020-06-02T19:02:26+00:00</updated>
		<link href="https://kitallis.github.io/hades/accessing-mysql-from-rust-part-ii-ej46vzyiqim-boqqcdfcv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/accessing-mysql-from-rust-part-ii-ej46vzyiqim-boqqcdfcv/</id>
		<content type="html">&lt;p&gt;In part 1 I discussed how to do basic query. In this article we will learn to do inserts and updates. We will continue to work with the PRODUCT table. Inserting Data We can insert data like this. The params macro makes it easy to supply named parameter values. Here drop in exec_drop() means no [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Access MySQL from Rust Part I</title>
		<published>2020-06-02T15:38:11+00:00</published>
		<updated>2020-06-02T15:38:11+00:00</updated>
		<link href="https://kitallis.github.io/hades/access-mysql-from-rust-part-i-s4ivudseqzzo7xt0pan9k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/access-mysql-from-rust-part-i-s4ivudseqzzo7xt0pan9k/</id>
		<content type="html">&lt;p&gt;In this series of posts I will explore how to access MySQL from Rust. We will start simple and in later parts finish with developing a web service API. The Schema In this article I will use a PRODUCT table with the following schema. Feel free to create it and try out the code here. [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My content has moved</title>
		<published>2020-06-01T00:00:00+00:00</published>
		<updated>2020-06-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/my-content-has-moved-asww47xkuoimzcach1vwy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/my-content-has-moved-asww47xkuoimzcach1vwy/</id>
		<content type="html">&lt;p&gt;My content has moved permanently to https:&#x2F;&#x2F;without.boats&#x2F;blog&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Ringbahn: a safe, ergonomic API for io-uring in Rust</title>
		<published>2020-05-27T00:00:00+00:00</published>
		<updated>2020-05-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/ringbahn-a-safe-ergonomic-api-for-io-uring-in-rust-vpodpnzr1lbdqfgo-h8lc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ringbahn-a-safe-ergonomic-api-for-io-uring-in-rust-vpodpnzr1lbdqfgo-h8lc/</id>
		<content type="html">&lt;p&gt;In my previous post, I discussed the new io-uring interface for Linux, and how to create a safe API for using io-uring from Rust. In the time since that post, I have implemented a prototype of such an API. The crate is called ringbahn, and it is intended to enable users to perform IO on io-uring without any risk of memory unsafety.
io-uring is going to be majorly important to the development of async IO on Linux in the future, and Linux is the most used platform for the kinds of high performance network services that are a major user of Rust.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Notes on io-uring</title>
		<published>2020-05-06T00:00:00+00:00</published>
		<updated>2020-05-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/notes-on-io-uring-hyiiqgp9vunrfhzumdc4x/" type="text/html"/>
		<id>https://kitallis.github.io/hades/notes-on-io-uring-hyiiqgp9vunrfhzumdc4x/</id>
		<content type="html">&lt;p&gt;Last fall I was working on a library to make a safe API for driving futures on top of an an io-uring instance. Though I released bindings to liburing called iou, the futures integration, called ostkreuz, was never released. I don‚Äôt know if I will pick this work up again in the future but several different people have started writing other libraries with similar goals, so I wanted to write up some notes on what I learned working with io-uring and Rust‚Äôs futures model.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Next Up: AWS</title>
		<published>2020-05-04T12:29:39-07:00</published>
		<updated>2020-05-04T12:29:39-07:00</updated>
		<link href="https://kitallis.github.io/hades/next-up-aws-cqttnqasx5etklpwfenai/" type="text/html"/>
		<id>https://kitallis.github.io/hades/next-up-aws-cqttnqasx5etklpwfenai/</id>
		<content type="html">&lt;p&gt;Today I start something new. This is my first day at &lt;a href=&quot;https:&#x2F;&#x2F;aws.amazon.com&#x2F;&quot;&gt;AWS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;AWS is choosing Rust more and more. It&amp;rsquo;s an especially excellent choice for problems that require extreme performance, while not sacrificing safety. As more servers are being written in Rust, more people are making use of &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; and other related libraries.&lt;&#x2F;p&gt;
&lt;p&gt;At AWS, I&amp;rsquo;ll be continuing to work on and foster the Rust networking open source ecosystem, such as with &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;reqwest&quot;&gt;reqwest&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&quot;&gt;Tokio&lt;&#x2F;a&gt;, and others. I&amp;rsquo;ll be able to help different teams that are adopting these technologies, advising and teaching, and learning how we can continue to improve the ecosystem. And I&amp;rsquo;ll be surrounded by extremely smart folk that will be stretching these tools in completely unexpected ways. I can&amp;rsquo;t wait to see what we can accomplish!&lt;&#x2F;p&gt;
&lt;p&gt;The hope is that the wonderful ecosystem around &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; will continue growing, will receive more attention and contributions, and all will benefit from the journey.&lt;&#x2F;p&gt;
&lt;p&gt;I&amp;rsquo;m very much looking forward to this new chapter!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>you can call me victoria</title>
		<published>2020-05-02T00:00:00-06:00</published>
		<updated>2020-05-02T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/you-can-call-me-victoria-qeejwl-x4xmalbesb4d9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/you-can-call-me-victoria-qeejwl-x4xmalbesb4d9/</id>
		<content type="html">&lt;p&gt;The short version of this post is ‚Äúi‚Äôm changing my chosen name; please start calling me Victoria
now.‚Äù&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>The problem of effects in Rust</title>
		<published>2020-04-13T00:00:00+00:00</published>
		<updated>2020-04-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/the-problem-of-effects-in-rust-flwguw7ybjswqejbmbpjm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-problem-of-effects-in-rust-flwguw7ybjswqejbmbpjm/</id>
		<content type="html">&lt;p&gt;In a previous post, I shortly discussed the concept of ‚Äúeffects‚Äù and the parallels between them. In an unrelated post since then, Yosh Wuyts writes about the problem of trying to write fallible code inside of an iterator adapter that doesn‚Äôt support it. In a previous discussion, the users of the Rust Internals forum hotly discuss the notion of closures which would maintain the so-called ‚ÄúTennant‚Äôs Correspondence Principle‚Äù - that is, closures which support breaking to scopes outside of the closure, inside of the function they are in (you can think of this is closures capturing their control flow environment in addition to capturing variables).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>A brief apology of Ok-Wrapping</title>
		<published>2020-04-07T00:00:00+00:00</published>
		<updated>2020-04-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/a-brief-apology-of-ok-wrapping-z5mg8bboasugrjtkpt6y1/" type="text/html"/>
		<id>https://kitallis.github.io/hades/a-brief-apology-of-ok-wrapping-z5mg8bboasugrjtkpt6y1/</id>
		<content type="html">&lt;p&gt;I‚Äôve long been a proponent of having some sort of syntax in Rust for writing functions which return results which ‚Äúok-wrap‚Äù the happy path. This is has also always been a feature with very vocal, immediate, and even emotional opposition from many of our most enthusiastic users. I want to write, in one place, why I think this feature would be awesome and make Rust much better.
I don‚Äôt want to get into the details too much of the specific proposal, but here‚Äôs a sketch of one way this could work (there are a number of variables).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>From failure to Fehler</title>
		<published>2020-04-06T00:00:00+00:00</published>
		<updated>2020-04-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/from-failure-to-fehler-vk-gngsg5akipqbmyg3-o/" type="text/html"/>
		<id>https://kitallis.github.io/hades/from-failure-to-fehler-vk-gngsg5akipqbmyg3-o/</id>
		<content type="html">&lt;p&gt;About two and a half years ago I wrote a Rust library called failure, which quickly became one of the most popular error handling libraries in Rust. This week, its current maintainer decided to deprecate it, a decision I strongly support. This week, I also released a new and very different error-handling library, called fehler. I wanted to discuss these two libraries briefly.
A brief history of failure When I released failure, the most popular error handling library by far was error-chain.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Reducing tail latencies with automatic cooperative task yielding</title>
		<published>2020-04-01T00:00:00+00:00</published>
		<updated>2020-04-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/reducing-tail-latencies-with-automatic-cooperative-task-yielding-f1uaxmmmfuvqmz-p8u5w9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/reducing-tail-latencies-with-automatic-cooperative-task-yielding-f1uaxmmmfuvqmz-p8u5w9/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>What constitutes a vulnerability?</title>
		<published>2020-04-01T00:00:00+00:00</published>
		<updated>2020-04-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/what-constitutes-a-vulnerability-xb3risku-fwvkxjlaqyni/" type="text/html"/>
		<id>https://kitallis.github.io/hades/what-constitutes-a-vulnerability-xb3risku-fwvkxjlaqyni/</id>
		<content type="html">&lt;p&gt;This is just a post about something that grinds my gears a bit more than it reasonably should: I think the habit of applying for CVEs for Rust (and Rust ecosystem libraries) is silly at best and harmful at worst. I think it muddies the waters about what a vulnerability is, and paints an overly negative picture of Rust‚Äôs security situation that can only lead people to make inaccurate evaluations when contrasting it with other languages like C&#x2F;C++.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>waitmap - an async awaitable map</title>
		<published>2020-03-12T00:00:00+00:00</published>
		<updated>2020-03-12T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/waitmap-an-async-awaitable-map-lot8yvzutee6hjurvikzd/" type="text/html"/>
		<id>https://kitallis.github.io/hades/waitmap-an-async-awaitable-map-lot8yvzutee6hjurvikzd/</id>
		<content type="html">&lt;p&gt;I‚Äôve just released a new crate called waitmap. This is a concurrent hash map (built on top of dashmap) intended for use as a concurrency primitive with async&#x2F;await. It extends the API of dashmap by having an additional wait method.
The wait future looks up an entry in the map and suspends this task if the entry was not present when wait was called. The task will be woken whenever a value is inserted under that key.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>rust ghost, signing off</title>
		<published>2020-02-17T00:00:00-07:00</published>
		<updated>2020-02-17T00:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/rust-ghost-signing-off-q1xjr4bsktkmpuo3zlppi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-ghost-signing-off-q1xjr4bsktkmpuo3zlppi/</id>
		<content type="html">&lt;p&gt;To keep my usual long-windedness from obscuring the point of this post, i‚Äôll put the summary up
front: &lt;em&gt;I‚Äôm stepping down from my positions as lead of the Docs.rs Team, and member of the Rustdoc
and Documentation Teams, and ceasing my contributions for the immediate future.&lt;&#x2F;em&gt; The Docs.rs Team
will be co-led by Pietro Albini (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@pietroalbini&lt;&#x2F;code&gt;) and Joshua Nelson (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@jyn514&lt;&#x2F;code&gt;). The Rustdoc Team
continues to be led by Guillaume Gomez (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@GuillaumeGomez&lt;&#x2F;code&gt;), and the Docs Team by Steve Klabnik
(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@steveklabnik&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Archlinux on the System76 Darter Pro</title>
		<published>2020-01-27T17:55:00-05:00</published>
		<updated>2020-01-27T17:55:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/archlinux-on-the-system76-darter-pro-gstx5lwbpyekgh2mzw-c0/" type="text/html"/>
		<id>https://kitallis.github.io/hades/archlinux-on-the-system76-darter-pro-gstx5lwbpyekgh2mzw-c0/</id>
		<content type="html">&lt;p&gt;This is a quick post reviewing my Archlinux setup on a System76 Darter Pro
(model: darp6) with Coreboot, along with some thoughts about the laptop in
general. This is my first laptop upgrade since I
&lt;a href=&quot;https:&#x2F;&#x2F;blog.burntsushi.net&#x2F;lenovo-thinkpad-t430-archlinux&quot;&gt;purchased a ThinkPad T430 in July 2012&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Target audience: Archlinux users looking for a compatible Linux laptop.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>My FOSS Story</title>
		<published>2020-01-19T17:15:00-05:00</published>
		<updated>2020-01-19T17:15:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/my-foss-story-ewj0lcck41ejhgjlpvkru/" type="text/html"/>
		<id>https://kitallis.github.io/hades/my-foss-story-ewj0lcck41ejhgjlpvkru/</id>
		<content type="html">&lt;p&gt;I&amp;rsquo;d like to break from my normal tradition of focusing almost strictly on
technical content and share a bit of my own personal relationship with Free
and Open Source Software (FOSS). While everyone is different, my hope is that
sharing my perspective will help build understanding, empathy and trust.&lt;&#x2F;p&gt;
&lt;p&gt;This is not meant to be a direct response to the behavior of any other
maintainer. Nor should it be read as a prescription on the ideal behavior of
someone in FOSS. This is meant more as a personal reflection with the hope that
others will use it to reflect on their own relationship with FOSS. There is no
one true path to being a good FOSS maintainer. We all have our own coping
mechanisms.&lt;&#x2F;p&gt;
&lt;p&gt;This is also emphatically not meant as a call for help. This is about
understanding. This is not about a plea to change the economics of FOSS. This
is not about brainstorming ways to improve my mental health. This is not about
bringing on more maintainers. It&amp;rsquo;s about sharing my story and attempting to
increase empathy among the denizens of FOSS.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Target audience&lt;&#x2F;strong&gt;: Anyone involved in FOSS.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>warp v0.2</title>
		<published>2020-01-16T11:23:28-08:00</published>
		<updated>2020-01-16T11:23:28-08:00</updated>
		<link href="https://kitallis.github.io/hades/warp-v0-2-iobvi1a-i61dvyljebxgy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/warp-v0-2-iobvi1a-i61dvyljebxgy/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;warp&quot;&gt;Warp&lt;&#x2F;a&gt; is a Rust web server framework focusing on composability and strongly-typed APIs.&lt;&#x2F;p&gt;
&lt;p&gt;Today sees the release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;v0.2&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3&gt;Async and Await&lt;&#x2F;h3&gt;
&lt;p&gt;The most exciting part of this release is the upgrade to &lt;code&gt;std::future&lt;&#x2F;code&gt;, so you can now use &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; for cleaner flow control. Due to how warp encourages composition of filters, this is most noticeable at the &amp;ldquo;ends&amp;rdquo; of a filter chain, where an application is doing its &amp;ldquo;business logic&amp;rdquo;, converting input into actions and replies. And that&amp;rsquo;s where most of the app code is!&lt;&#x2F;p&gt;
&lt;h3&gt;Services&lt;&#x2F;h3&gt;
&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;176530511587&#x2F;warp&quot;&gt;original release of warp&lt;&#x2F;a&gt;, I wrote:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We‚Äôd like for warp to be able to make use of all the great &lt;code&gt;tower&lt;&#x2F;code&gt; middleware that already exists.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;As part of this release, that is now possible! Any &lt;code&gt;Filter&lt;&#x2F;code&gt; which returns a &lt;code&gt;Reply&lt;&#x2F;code&gt; can now be converted into a &lt;code&gt;Service&lt;&#x2F;code&gt; using &lt;code&gt;warp::service(filter)&lt;&#x2F;code&gt;. This means you can wrap your filters with any of the growing middlewares, as described in the &lt;a href=&quot;https:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;189594157852&#x2F;hyper-v013&quot;&gt;hyper v0.13 announcement&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3&gt;Thanks&lt;&#x2F;h3&gt;
&lt;p&gt;This was a lot of work by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;graphs&#x2F;contributors&quot;&gt;over 60 new contributors&lt;&#x2F;a&gt;, including the massive &lt;code&gt;std::future&lt;&#x2F;code&gt; refactor by new collaborator &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jxs&quot;&gt;@jxs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Be sure to check the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;changelog&lt;&#x2F;a&gt; for all the goodies!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>reqwest v0.10</title>
		<published>2019-12-30T10:38:35-08:00</published>
		<updated>2019-12-30T10:38:35-08:00</updated>
		<link href="https://kitallis.github.io/hades/reqwest-v0-10-ggrjibkwsu5i3ssvmlb0z/" type="text/html"/>
		<id>https://kitallis.github.io/hades/reqwest-v0-10-ggrjibkwsu5i3ssvmlb0z/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;reqwest&quot;&gt;reqwest&lt;&#x2F;a&gt; is a higher-level HTTP client for Rust. Let me introduce you the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;reqwest&#x2F;releases&#x2F;tag&#x2F;v0.10.0&quot;&gt;v0.10&lt;&#x2F;a&gt; release that adds &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; support!&lt;&#x2F;p&gt;
&lt;p&gt;Some headline features are:&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;std::future::Future&lt;&#x2F;code&gt; support (hello &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;Add experimental WASM support.&lt;&#x2F;li&gt;
&lt;li&gt;Change the default client API to async, moving the previous synchronous API to &lt;code&gt;reqwest::blocking&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Make many &amp;ldquo;extra&amp;rdquo; features optional to reduce unnecessary dependencies (&lt;code&gt;blocking&lt;&#x2F;code&gt;, &lt;code&gt;cookies&lt;&#x2F;code&gt;, &lt;code&gt;gzip&lt;&#x2F;code&gt;, &lt;code&gt;json&lt;&#x2F;code&gt;, etc).&lt;&#x2F;li&gt;
&lt;li&gt;Enable automatic &amp;ldquo;system&amp;rdquo; proxy detection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;p&gt;Here&amp;rsquo;s a simple streaming example using the new syntax:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;async fn example() -&amp;gt; Result&amp;lt;(), Box&amp;lt;dyn std::error::Error&amp;gt;&amp;gt; {
    let mut resp = reqwest::get(&quot;https:&#x2F;&#x2F;hyper.rs&quot;).await?;

    while let Some(chunk) = resp.chunk().await? {
        stdout().write_all(&amp;amp;chunk).await?;
    }

    Ok(())
} 
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I want to thank all those contributing to make the best Rust HTTP client even better!&lt;&#x2F;p&gt;
&lt;p&gt;Take a look at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;reqwest&#x2F;releases&#x2F;tag&#x2F;v0.10.0&quot;&gt;changelog&lt;&#x2F;a&gt; for all the details.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Tokio-Compat</title>
		<published>2019-12-18T00:00:00+00:00</published>
		<updated>2019-12-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-tokio-compat-thflfij5hqtzywdoq8hhm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-tokio-compat-thflfij5hqtzywdoq8hhm/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Mio 0.7-alpha.1</title>
		<published>2019-12-17T00:00:00+00:00</published>
		<updated>2019-12-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-mio-0-7-alpha-1-k2c319i28m3holdyleio/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-mio-0-7-alpha-1-k2c319i28m3holdyleio/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>hyper v0.13</title>
		<published>2019-12-10T09:48:08-08:00</published>
		<updated>2019-12-10T09:48:08-08:00</updated>
		<link href="https://kitallis.github.io/hades/hyper-v0-13-c5vrlvqwrjhbqccw0-5mw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/hyper-v0-13-c5vrlvqwrjhbqccw0-5mw/</id>
		<content type="html">&lt;p&gt;After a few months of &lt;a href=&quot;https:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;187493499882&#x2F;hyper-alpha-supports-asyncawait&quot;&gt;alpha development&lt;&#x2F;a&gt;, the final release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.13.0&quot;&gt;hyper v0.13.0&lt;&#x2F;a&gt; is now ready! &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; is a maturing HTTP library written in Rust, already one of the &lt;a href=&quot;https:&#x2F;&#x2F;www.techempower.com&#x2F;benchmarks&#x2F;#section=data-r18&amp;amp;hw=ph&amp;amp;test=plaintext&quot;&gt;fastest out there&lt;&#x2F;a&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote-ref&quot; role=&quot;doc-noteref&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;, and trusted by many for its correctness.&lt;&#x2F;p&gt;
&lt;p&gt;The highlights of this release:&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;Full &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; support.&lt;&#x2F;li&gt;
&lt;li&gt;Tokio v0.2 upgrade.&lt;&#x2F;li&gt;
&lt;li&gt;Adopting &lt;code&gt;tower::Service&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;h3&gt;async &#x2F; await&lt;&#x2F;h3&gt;
&lt;p&gt;The premise of &lt;code&gt;async&lt;&#x2F;code&gt; and &lt;code&gt;await&lt;&#x2F;code&gt; in Rust is to allow writing code that uses &lt;code&gt;Future&lt;&#x2F;code&gt;s in a similar style to &amp;ldquo;blocking&amp;rdquo; code. No more combinators, no more &amp;ldquo;callbacks&amp;rdquo;, just slap &lt;code&gt;.await&lt;&#x2F;code&gt; on the end of the expression. For instance, here&amp;rsquo;s how we can use the &lt;code&gt;Client&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;#[tokio::main]
async fn main() -&amp;gt; Result {
    let client = Client::new();

    let mut resp = client.get(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;ip&quot;.parse()?).await?;
    println!(&quot;Status: {}&quot;, resp.status());
    println!(&quot;Headers: {:#?}\n&quot;, resp.headers());

    while let Some(chunk) = resp.body_mut().data().await {
        stdout().write_all(&amp;amp;chunk?).await?;
    }

    Ok(())
}
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Connecting, writing the request, receiving the response, streaming the body, and writing to stdout can all be done without &amp;ldquo;blocking&amp;rdquo; the thread. Instead, with the use of &lt;code&gt;await&lt;&#x2F;code&gt;, just &lt;em&gt;that&lt;&#x2F;em&gt; future will make as much progress as it can without blocking, and then go to a pending state and register a notification when more progress could be made. And yet, it looks just like regular &amp;ldquo;blocking&amp;rdquo; code. This should &lt;em&gt;hugely&lt;&#x2F;em&gt; improve the ergonomics of writing server code that scales under load.&lt;&#x2F;p&gt;
&lt;h3&gt;Tokio v0.2&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&quot;&gt;Tokio&lt;&#x2F;a&gt; is a phenomenal async IO runtime for Rust, and hyper has built-in support by default. The &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;blog&#x2F;2019-11-tokio-0-2&#x2F;&quot;&gt;Tokio v0.2 upgrade&lt;&#x2F;a&gt; includes &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; support, a &lt;a href=&quot;https:&#x2F;&#x2F;tokio.rs&#x2F;blog&#x2F;2019-10-scheduler&#x2F;&quot;&gt;significant scheduler improvement&lt;&#x2F;a&gt;, and even faster compile times.&lt;&#x2F;p&gt;
&lt;h3&gt;Tower Services&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tower-rs&#x2F;tower&quot;&gt;Tower&lt;&#x2F;a&gt; is an RPC design that builds off Twitter&amp;rsquo;s &amp;ldquo;your server as a function&amp;rdquo;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote-ref&quot; role=&quot;doc-noteref&quot;&gt;2&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;. It defines the base &lt;code&gt;Service&lt;&#x2F;code&gt; trait, which handles some request-like value, and asynchronously returns a response-like value. The &lt;code&gt;tower-service&lt;&#x2F;code&gt; crate is minimal, and protocol-agnostic. Our hope is others in the ecosystem can be just use &lt;code&gt;Service&lt;&#x2F;code&gt; and &lt;code&gt;http&lt;&#x2F;code&gt;, and not have to depend directly on hyper&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote-ref&quot; role=&quot;doc-noteref&quot;&gt;3&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;An additional benefit of integrating with Tower is being able to make use of many of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tower-rs&#x2F;tower&quot;&gt;middleware&lt;&#x2F;a&gt; we&amp;rsquo;ve already developed.&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;&lt;p&gt;Server middleware:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;let svc = ServiceBuilder::new()
  &#x2F;&#x2F; Reject the request early if concurrency limit is hit
  .load_shed()
  &#x2F;&#x2F; Only allow 1,000 requests in flight at a time
  .concurrency_limit(1_000)
  &#x2F;&#x2F; Cancel requests that hang too long
  .timeout(Duration::from_secs(30))
  &#x2F;&#x2F; All wrapped around your application logic
  .service(your_app_service);
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Or wrapping a Client:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;let svc = ServiceBuilder::new()
  &#x2F;&#x2F; Retry requests depending on the responses or errors
  .retry(your_retry_policy)
  &#x2F;&#x2F; Cancel when the server takes too long
  .timeout(Duration::from_secs(5)
  &#x2F;&#x2F; Load balance using P2C
  .layer(p2c::peak_ewma(dns_resolver))
  &#x2F;&#x2F; Wrapping a hyper::Client
  .service(hyper_client);
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;p&gt;Additionally, most &lt;code&gt;async fn(In) -&amp;gt; Out&lt;&#x2F;code&gt; things in hyper are now just a &lt;code&gt;Service&lt;&#x2F;code&gt;. This means you can easily add these middleware to custom resolvers or connectors, for instance. Uses include adding a timeout or whitelist to a resolver.&lt;&#x2F;p&gt;
&lt;h3&gt;v0.13.0&lt;&#x2F;h3&gt;
&lt;p&gt;This probably the most exciting release of hyper yet. It&amp;rsquo;s all thanks to the 30+ contributors tireless efforts this release that we&amp;rsquo;ve gotten this far. Our production users continue to help us improve hyper&amp;rsquo;s correctness, performance, and features. The current goal is that we can finish up the remaining design questions and release hyper 1.0 in the middle of 2020.&lt;&#x2F;p&gt;
&lt;p&gt;To see even more details, check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.13.0&quot;&gt;v0.13.0 changelog&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
&lt;hr&gt;&lt;ol&gt;&lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
&lt;p&gt;Always take benchmarks with a carton of salt.¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;footnote-backref&quot; role=&quot;doc-backlink&quot;&gt;‚Ü©Ô∏é&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;monkey.org&#x2F;~marius&#x2F;funsrv.pdf&quot;&gt;&amp;ldquo;Your Server as a Function&amp;rdquo; (PDF)&lt;&#x2F;a&gt;¬†&lt;a href=&quot;#fnref:2&quot; class=&quot;footnote-backref&quot; role=&quot;doc-backlink&quot;&gt;‚Ü©Ô∏é&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
&lt;p&gt;This is similar to Python&amp;rsquo;s WSGI, Ruby&amp;rsquo;s Rack, and Java&amp;rsquo;s Servlet.¬†&lt;a href=&quot;#fnref:3&quot; class=&quot;footnote-backref&quot; role=&quot;doc-backlink&quot;&gt;‚Ü©Ô∏é&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>home: unknown</title>
		<published>2019-12-08T00:00:00-07:00</published>
		<updated>2019-12-08T00:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/home-unknown-subceo-f0ee7yijhicazi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/home-unknown-subceo-f0ee7yijhicazi/</id>
		<content type="html">&lt;p&gt;I‚Äôm nearing the end of my batch at the Recurse Center, and i want to remark on some thoughts that
have persisted in my head during my time here. This is bound to be a bit rambly and fairly personal;
it‚Äôs mainly meant as a kind of journalling exercise more than an information broadcast of any kind.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>http v0.2</title>
		<published>2019-12-02T14:05:38-08:00</published>
		<updated>2019-12-02T14:05:38-08:00</updated>
		<link href="https://kitallis.github.io/hades/http-v0-2-o6fmvdaedzwsq2bwingtc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/http-v0-2-o6fmvdaedzwsq2bwingtc/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;announcing-the-http-crate&#x2F;12123&quot;&gt;A couple years ago&lt;&#x2F;a&gt;, we released the beginning of the &lt;code&gt;http&lt;&#x2F;code&gt; crate. It&amp;rsquo;s purpose was to allow a common API for the ecosystem to interact with HTTP types, without those types referring to a specific implementation. We&amp;rsquo;ve seen great things sprout up since then!&lt;&#x2F;p&gt;
&lt;p&gt;Today marks the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;http&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;0.2 release&lt;&#x2F;a&gt;, a chance to make some minor breaking changes, with the hopes that this 0.2 version can soon just be promoted to 1.0. So, what has changed?&lt;&#x2F;p&gt;
&lt;h4&gt;HTTP&#x2F;3&lt;&#x2F;h4&gt;
&lt;p&gt;A seemingly simple change is adding the &lt;code&gt;Version::HTTP_3&lt;&#x2F;code&gt; constant. However, we couldn&amp;rsquo;t add it in 0.1 due to an unexpected compiler behavior that allowed exhaustive matching on the &lt;code&gt;Version&lt;&#x2F;code&gt; constants even though the internal &lt;code&gt;enum&lt;&#x2F;code&gt; wasn&amp;rsquo;t exposed. This time, we&amp;rsquo;ve made sure to prevent exhaustive matches, so we can add new versions in the future.&lt;&#x2F;p&gt;
&lt;h4&gt;Builders are now by-value&lt;&#x2F;h4&gt;
&lt;p&gt;There are some pretty useful builders to construct a &lt;code&gt;Request&lt;&#x2F;code&gt;, &lt;code&gt;Response&lt;&#x2F;code&gt;, or &lt;code&gt;Uri&lt;&#x2F;code&gt;. In 0.1, they were &amp;ldquo;by-reference&amp;rdquo; builders, meaning that each builder method took &lt;code&gt;&amp;amp;mut self&lt;&#x2F;code&gt; and returned &lt;code&gt;&amp;amp;mut Builder&lt;&#x2F;code&gt;. Now, they take &lt;code&gt;self&lt;&#x2F;code&gt; and return &lt;code&gt;Builder&lt;&#x2F;code&gt;. There&amp;rsquo;s pros and cons for each pattern, but the weightiest one that made us change was the nature of &amp;ldquo;consuming&amp;rdquo; the builder once finished. To &amp;ldquo;build&amp;rdquo; a &amp;ldquo;by-ref&amp;rdquo; builder requires that either the data inside be cloned, or the builder be left in a &amp;ldquo;don&amp;rsquo;t build me again&amp;rdquo; state. This change now makes it clearer that a builder cannot used again, as it will now be a compiler error.&lt;&#x2F;p&gt;
&lt;h4&gt;Reduced public dependencies&lt;&#x2F;h4&gt;
&lt;p&gt;To help meet the goal of promoting to &lt;code&gt;http&lt;&#x2F;code&gt; v1.0, we&amp;rsquo;ve reduced the number of public dependencies to 0. There&amp;rsquo;s still a way to make use of &lt;code&gt;bytes&lt;&#x2F;code&gt; to reduce copies, but it&amp;rsquo;s now exposed in a way that there&amp;rsquo;s no API contract. This allows &lt;code&gt;http&lt;&#x2F;code&gt; to reach 1.0 even if &lt;code&gt;bytes&lt;&#x2F;code&gt; takes longer.&lt;&#x2F;p&gt;
&lt;h3&gt;Next&lt;&#x2F;h3&gt;
&lt;p&gt;We expect the ecosystem to start updating to &lt;code&gt;http&lt;&#x2F;code&gt; 0.2 so you all can have the improvements as soon as possible. For example, &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; should also be ready hopefully this week. Check the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;http&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;changelog&lt;&#x2F;a&gt; for the full details!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>On porting code</title>
		<published>2019-11-26T22:51:55+05:30</published>
		<updated>2019-11-26T22:51:55+05:30</updated>
		<link href="https://kitallis.github.io/hades/on-porting-code-orskqasjeq2slzmlcpvo3/" type="text/html"/>
		<id>https://kitallis.github.io/hades/on-porting-code-orskqasjeq2slzmlcpvo3/</id>
		<content type="html">&lt;p&gt;Of late, my main side project has been rug, a stripped-down Git implementation which I‚Äôm building in Rust. I‚Äôm following along James Coglan‚Äôs excellent book Building Git where he lays out how he went about building the same project, in Ruby.
In essence, my project boils down to porting James‚Äôs code1 into Rust. But why bother with this at all? After all, porting code from one language to another is probably not on your top ten list of cool project ideas.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Tokio 0.2 and a Roadmap to 1.0</title>
		<published>2019-11-26T00:00:00+00:00</published>
		<updated>2019-11-26T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-tokio-0-2-and-a-roadmap-to-1-0-eh1vw8c-dom4jq60opuxe/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-tokio-0-2-and-a-roadmap-to-1-0-eh1vw8c-dom4jq60opuxe/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Global Executors</title>
		<published>2019-11-14T00:00:00+00:00</published>
		<updated>2019-11-14T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/global-executors-c4-vxhqk4rd8syfz-d6pg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/global-executors-c4-vxhqk4rd8syfz-d6pg/</id>
		<content type="html">&lt;p&gt;One of the big sources of difficulty on the async ecosystem is spawning tasks. Because there is no API in std for spawning tasks, library authors who want their library to spawn tasks have to depend on one of the multiple executors in the ecosystem to spawn a task, coupling the library to that executor in undesirable ways.
Ideally, many of these library authors would not need to spawn tasks at all.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>iou: Rust bindings for liburing</title>
		<published>2019-11-08T00:00:00+00:00</published>
		<updated>2019-11-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/iou-rust-bindings-for-liburing-yk6hpewb0d5qwjsntbpkg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/iou-rust-bindings-for-liburing-yk6hpewb0d5qwjsntbpkg/</id>
		<content type="html">&lt;p&gt;Today I‚Äôm releasing a library called iou. This library provides idiomatic Rust bindings to the C library called liburing, which itself is a higher interface for interacting with the io_uring Linux kernel interface. Here are the answers to some questions I expect that may provoke.
What is io_uring? io_uring is an interface added to the Linux kernel in version 5.1. Concurrent with that, the primary maintainer of that interface has also been publishing a library for interacting with it called liburing.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Asynchronous Destructors</title>
		<published>2019-10-16T00:00:00+00:00</published>
		<updated>2019-10-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/asynchronous-destructors-6hd4ia6rq28rpl42ycd7s/" type="text/html"/>
		<id>https://kitallis.github.io/hades/asynchronous-destructors-6hd4ia6rq28rpl42ycd7s/</id>
		<content type="html">&lt;p&gt;The first version of async&#x2F;await syntax is in the beta release, set to be shipped to stable in 1.39 on November 7, next month. There are a wide variety of additional features we could add to async&#x2F;await in Rust beyond what we‚Äôre shipping in that release, but speaking for myself I know that I‚Äôd like to pump the breaks on pushing forward big ticket items in this space. Let‚Äôs let the ecosystem develop around what we have now before we start sprinting toward more big additions to the language.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Making the Tokio scheduler 10x faster</title>
		<published>2019-10-13T00:00:00+00:00</published>
		<updated>2019-10-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/making-the-tokio-scheduler-10x-faster-mxclijf26ydjcs3qiubgi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/making-the-tokio-scheduler-10x-faster-mxclijf26ydjcs3qiubgi/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>reqwest alpha.await</title>
		<published>2019-10-08T14:05:02-07:00</published>
		<updated>2019-10-08T14:05:02-07:00</updated>
		<link href="https://kitallis.github.io/hades/reqwest-alpha-await-9ulnhgeq4q4w4eiobdowp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/reqwest-alpha-await-9ulnhgeq4q4w4eiobdowp/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;reqwest&quot;&gt;reqwest&lt;&#x2F;a&gt; is a higher-level HTTP client for Rust. I&amp;rsquo;m delighted to announce the first &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;reqwest&#x2F;releases&#x2F;tag&#x2F;v0.10.0-alpha.1&quot;&gt;alpha&lt;&#x2F;a&gt; release that brings &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; support!&lt;&#x2F;p&gt;
&lt;p&gt;Some headline features are:&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;std::future::Future&lt;&#x2F;code&gt; support (hello &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;Add experimental WASM support.&lt;&#x2F;li&gt;
&lt;li&gt;Change the default client API to async, moving the previous synchronous API to &lt;code&gt;reqwest::blocking&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Make many &amp;ldquo;extra&amp;rdquo; features optional to reduce unnecessary dependencies (&lt;code&gt;blocking&lt;&#x2F;code&gt;, &lt;code&gt;cookies&lt;&#x2F;code&gt;, &lt;code&gt;gzip&lt;&#x2F;code&gt;, &lt;code&gt;json&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;p&gt;Hey look, a cute example using the new &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; syntax with &lt;code&gt;reqwest&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;dbg!(reqwest::get(&quot;https:&#x2F;&#x2F;hyper.rs&quot;).await?.text().await?);
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;These alpha versions are depending on Rust 1.39, which (as of this post) aren&amp;rsquo;t stable yet. Some other things may change in &lt;code&gt;reqwest&lt;&#x2F;code&gt; before the full release (can other features be made optional?), but the alphas allow others to experiment &lt;em&gt;now&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;My sincere thanks to all that help contribute to &lt;code&gt;reqwest&lt;&#x2F;code&gt;! Enjoy &lt;code&gt;&amp;amp;lt;3&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>hyper alpha supports async&#x2F;await</title>
		<published>2019-09-04T11:53:52-07:00</published>
		<updated>2019-09-04T11:53:52-07:00</updated>
		<link href="https://kitallis.github.io/hades/hyper-alpha-supports-async-await-dxa8yflkt40nmigzkrtjt/" type="text/html"/>
		<id>https://kitallis.github.io/hades/hyper-alpha-supports-async-await-dxa8yflkt40nmigzkrtjt/</id>
		<content type="html">&lt;p&gt;I&amp;rsquo;m excited to announce the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.13.0-alpha.1&quot;&gt;first alpha&lt;&#x2F;a&gt; of hyper 0.13. &lt;a href=&quot;https:&#x2F;&#x2F;hyper.rs&quot;&gt;hyper&lt;&#x2F;a&gt; is a maturing HTTP library written in Rust, already one of the fastest out there, and trusted by many for its correctness.&lt;&#x2F;p&gt;
&lt;p&gt;This alpha release brings support for the new &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;future&#x2F;trait.Future.html&quot;&gt;&lt;code&gt;std::future::Future&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. The reason this is so exciting is that this allows using the new &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; syntax that will be stabilizing in Rust 1.39.&lt;&#x2F;p&gt;
&lt;h3&gt;Example&lt;&#x2F;h3&gt;
&lt;p&gt;The follow example shows how one can use &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; to dump a response to the console:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;#[tokio::main]
async fn main() -&amp;gt; Result&amp;lt;(), Error&amp;gt; {
    let client = Client::new();

    let resp = client.get(&quot;http:&#x2F;&#x2F;httpbin.org&#x2F;ip&quot;.parse()?).await?;
    println!(&quot;Status: {}&quot;, resp.status());
    println!(&quot;Headers: {:#?}\n&quot;, resp.headers());

    while let Some(chunk) = resp.body_mut().next().await {
        stdout().write_all(&amp;amp;chunk?)?;
    }

    Ok(())
}
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The same &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; style can be used for writing servers as well!&lt;&#x2F;p&gt;
&lt;h3&gt;Changes to come&lt;&#x2F;h3&gt;
&lt;p&gt;Besides the change from &lt;code&gt;futures&lt;&#x2F;code&gt; 0.1 to &lt;code&gt;std::future::Future&lt;&#x2F;code&gt; and how writing code with &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt;, much of hyper&amp;rsquo;s API will feel very similar. Still, there a some technically breaking changes that will be included in the 0.13 as well.&lt;&#x2F;p&gt;
&lt;h3&gt;Embracing &lt;code&gt;tower::Service&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;During hyper 0.12, servers were defined via the &lt;code&gt;hyper::service::Service&lt;&#x2F;code&gt; trait. Since then, we&amp;rsquo;ve been working hard on a general &lt;code&gt;Service&lt;&#x2F;code&gt; interface, and building &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tower-rs&#x2F;tower&quot;&gt;powerful middleware&lt;&#x2F;a&gt; that can utilize it. Our hope is that eventually, applications can be generic over &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;tower-service&#x2F;0.3.0-alpha.1&#x2F;tower_service&#x2F;trait.Service.html&quot;&gt;&lt;code&gt;Service&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and the &lt;code&gt;http&lt;&#x2F;code&gt; types, and a user could choose their backend that plugs right in (such as hyper).&lt;&#x2F;p&gt;
&lt;p&gt;Consider a small example that handles many mundane things for you:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;let svc = ServiceBuilder::new()
    &#x2F;&#x2F; Reject the request early if concurrency limit is hit
    .load_shed()
    &#x2F;&#x2F; Only allow 1,000 requests in flight at a time
    .concurrency_limit(1_000)
    &#x2F;&#x2F; Cancel requests that hang too long
    .timeout(Duration::from_secs(30))
    &#x2F;&#x2F; All wrapped around your application logic
    .service(your_app_service);
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;tower::Service&lt;&#x2F;code&gt; trait easily allows everyone to power up their servers and clients!&lt;&#x2F;p&gt;
&lt;h3&gt;Alpha One&lt;&#x2F;h3&gt;
&lt;p&gt;This first alpha is to allow people to try out writing HTTP servers and clients using the new &lt;code&gt;async&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;await&lt;&#x2F;code&gt; syntax. All the features from 0.12 work in this release. However, not all the API changes have been finalized, so as with other alphas, there will likely be breakage between alpha releases as we fine tune things.&lt;&#x2F;p&gt;
&lt;p&gt;But for now, get your fresh copy of hyper &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperium&#x2F;hyper&#x2F;releases&#x2F;tag&#x2F;v0.13.0-alpha.1&quot;&gt;v0.13.0-alpha.1 here&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;toml&quot;&gt;[dependencies]
hyper = &quot;=0.13.0-alpha.1&quot;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Criterion.rs v0.3 - Custom Measurements, Profiling Hooks, Custom Test Framework, API Changes</title>
		<published>2019-08-25T10:30:00-06:00</published>
		<updated>2019-08-25T10:30:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/criterion-rs-v0-3-custom-measurements-profiling-hooks-custom-test-framework-api-changes-glvmcqcusuz62bmdcskgi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/criterion-rs-v0-3-custom-measurements-profiling-hooks-custom-test-framework-api-changes-glvmcqcusuz62bmdcskgi/</id>
		<content type="html">&lt;p&gt;I‚Äôm pleased to announce the release of Criterion.rs v0.3, available today. Version 0.3 provides a number of new features including preliminary support for plugging in custom measurements (eg. hardware timers or POSIX CPU time), hooks to start&#x2F;stop profilers, a new BenchmarkGroup struct that provides more flexibility than the older Benchmark and ParameterizedBenchmark structs, and an implementation of a #[criterion] custom-test-framework macro for those on Nightly.
What is Criterion.rs? Criterion.rs is a statistics-driven benchmarking library for Rust.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Is This Magic!? Ferris Explores Rustc!</title>
		<published>2019-08-23T00:00:00-06:00</published>
		<updated>2019-08-23T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/is-this-magic-ferris-explores-rustc-z6nyl-vhbedaiav3bzbb6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/is-this-magic-ferris-explores-rustc-z6nyl-vhbedaiav3bzbb6/</id>
		<content type="html">&lt;p&gt;This is the companion guide to the ‚ÄúIs This Magic!? Ferris Explores
rustc‚Äù talk presented at RustConf 2019 by QuietMisdreavus and J Haigh.
We‚Äôve published this on both of our sites! J‚Äôs version is &lt;a href=&quot;https:&#x2F;&#x2F;optimistictypes.com&#x2F;is-this-magic-ferris-explores-rustc&#x2F;&quot;&gt;over here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Diagnostics with Tracing</title>
		<published>2019-08-14T00:00:00+00:00</published>
		<updated>2019-08-14T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/diagnostics-with-tracing-rtfgvcytnkuuadaxbiqpb/" type="text/html"/>
		<id>https://kitallis.github.io/hades/diagnostics-with-tracing-rtfgvcytnkuuadaxbiqpb/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Tokio alpha release with async &amp; await</title>
		<published>2019-08-08T00:00:00+00:00</published>
		<updated>2019-08-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/tokio-alpha-release-with-async-await-99299om36gyzqbxrnmxly/" type="text/html"/>
		<id>https://kitallis.github.io/hades/tokio-alpha-release-with-async-await-99299om36gyzqbxrnmxly/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Notes on a smaller Rust</title>
		<published>2019-07-17T00:00:00+00:00</published>
		<updated>2019-07-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/notes-on-a-smaller-rust-g6bc8xojwol4zcnro5igk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/notes-on-a-smaller-rust-g6bc8xojwol4zcnro5igk/</id>
		<content type="html">&lt;p&gt;Many people who use Rust for a bit - especially those who like the language but do not fall in love with it - feel a sense that there must be a smaller, simpler variation on the same theme which would maybe be a little less powerful, but would also be much easier to use. I agree with them, but I think they are almost always wrong about what would need to change.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Media stack Mid-Year review</title>
		<published>2019-07-09T00:00:00+00:00</published>
		<updated>2019-07-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/media-stack-mid-year-review-dumlerp7-0z9ddqohgqjf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/media-stack-mid-year-review-dumlerp7-0z9ddqohgqjf/</id>
		<content type="html">&lt;p&gt;We recently closed the first half of 2019 and with that it is time to look back and do a quick summary of what the media team has achieved during this 6 months period.&lt;&#x2F;p&gt;
&lt;p&gt;Looking at some stats, we merged 87 Pull Requests, we opened 56 issues, we closed 42 issues and we welcomed 13 new amazing contributors to the media stack.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;av-playback&quot;&gt;A&#x2F;V playback&lt;&#x2F;h3&gt;
&lt;p&gt;These are some of the selected A&#x2F;V playback related H1 acomplishments&lt;&#x2F;p&gt;
&lt;h4 id=&quot;media-cache-and-improved-seeking&quot;&gt;Media cache and improved seeking&lt;&#x2F;h4&gt;
&lt;p&gt;We significally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22692&quot;&gt;improved&lt;&#x2F;a&gt; the seeking experience of audio and video files by implementing preloading and buffering support and a media cache.&lt;&#x2F;p&gt;
&lt;iframe title=&quot;vimeo-player&quot; src=&quot;https:&#x2F;&#x2F;player.vimeo.com&#x2F;video&#x2F;311414154&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h4 id=&quot;basic-media-controls&quot;&gt;Basic media controls&lt;&#x2F;h4&gt;
&lt;p&gt;After a few months of work we got &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22743&quot;&gt;partial support for the Shadow DOM API&lt;&#x2F;a&gt;, which gave us the opportunity to implement our first basic set of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23208&quot;&gt;media controls&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;s3.amazonaws.com&#x2F;media-p.slid.es&#x2F;uploads&#x2F;105177&#x2F;images&#x2F;6275339&#x2F;Jun-19-2019_17-11-57.gif&quot; alt=&quot;media controls&quot; width=&quot;640&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The UI is not perfect, among other things, because we still have no way to render a progress or volume bar properly, as that depends on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input type=&quot;range&quot;&amp;gt;&lt;&#x2F;code&gt; layout, which so far is rendered as a simple text box instead of the usual slider with a thumb.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;gstreamer-backend-for-magicleap&quot;&gt;GStreamer backend for MagicLeap&lt;&#x2F;h4&gt;
&lt;p&gt;Another great achievement by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xclaesse&quot;&gt;Xavier Claessens&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;www.collabora.com&#x2F;&quot;&gt;Collabora&lt;&#x2F;a&gt; has been the GStreamer backend for &lt;a href=&quot;https:&#x2F;&#x2F;www.magicleap.com&#x2F;&quot;&gt;Magic Leap&lt;&#x2F;a&gt;. The work is not completely done yet, but as you can see on the animation below, he already managed to paint a full screen video on the Magic Leap device.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;s3.amazonaws.com&#x2F;media-p.slid.es&#x2F;uploads&#x2F;105177&#x2F;images&#x2F;6274304&#x2F;Jun-19-2019_13-12-31.gif&quot; alt=&quot;magic leap video&quot; width=&quot;640&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;hardware-accelerated-decoding&quot;&gt;Hardware accelerated decoding&lt;&#x2F;h4&gt;
&lt;p&gt;One of the most wanted features that we have been working on for almost a year and that has recently landed is hardware accelerated decoding.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to the excellent and constant work from the &lt;a href=&quot;https:&#x2F;&#x2F;www.igalia.com&#x2F;&quot;&gt;Igalian&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ceyusa&quot;&gt;V√≠ctor J√°quez&lt;&#x2F;a&gt;, Servo recently gained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23483&quot;&gt;support for hardware-accelerated media playback&lt;&#x2F;a&gt;, which means lower CPU usage, better battery life and better thermal behaviour, among other goodies.&lt;&#x2F;p&gt;
&lt;p&gt;We only have support on Linux and Android (EGL and Wayland) so far. Support for other platforms is on the roadmap.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;video src=&quot;https:&#x2F;&#x2F;s3.amazonaws.com&#x2F;media-p.slid.es&#x2F;videos&#x2F;105177&#x2F;rzteE40V&#x2F;hwacceleration.mp4&quot; width=&quot;640&quot; controls=&quot;&quot;&gt;&lt;&#x2F;video&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The numbers we are getting are already pretty nice. You might not be able to see it clearly on the video, but the renderer CPU time for the non hardware accelerated playback is ~8ms, compared to the ~1ms of CPU time that we get with the accelerated version.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;improved-web-compatibility-of-our-media-elements-implementation&quot;&gt;Improved web compatibility of our media elements implementation&lt;&#x2F;h4&gt;
&lt;p&gt;We also got a bunch of other smaller features that significantly improved the web compatibility of our media elements.&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;ferjm&quot;&gt;ferjm&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22399&quot;&gt;added&lt;&#x2F;a&gt; support for the HTMLMediaElement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;poster&lt;&#x2F;code&gt; frame attribute&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;swarnimarun&quot;&gt;swarnimarun&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23236&quot;&gt;implemented&lt;&#x2F;a&gt; support for the HTMLMediaElement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loop&lt;&#x2F;code&gt; attribute&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jackxbritton&quot;&gt;jackxbritton&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23188&quot;&gt;implemented&lt;&#x2F;a&gt; the HTMLMediaElement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crossorigin&lt;&#x2F;code&gt; attribute logic.&lt;&#x2F;li&gt;
  &lt;li&gt;Servo got the ability to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22347&quot;&gt;mute and unmute&lt;&#x2F;a&gt; as well as controlling the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22324&quot;&gt;volume&lt;&#x2F;a&gt; of audio and video playback thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stevesweetney&quot;&gt;stevesweetney&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucasfantacuci&quot;&gt;lucasfantacuci&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sreeise&quot;&gt;sreeise&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22622&quot;&gt;implemented&lt;&#x2F;a&gt; the AudioTrack, VideoTrack, AudioTrackList and VideoTrackList interfaces.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;georgeroman&quot;&gt;georgeroman&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22449&quot;&gt;coded&lt;&#x2F;a&gt; the required changes to allow changing the playback rate of audio and video files.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;georgeroman&quot;&gt;georgeroman&lt;&#x2F;a&gt;, again, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;232&quot;&gt;implemented&lt;&#x2F;a&gt; support for the HTMLMediaElement &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;canPlayType&lt;&#x2F;code&gt; function.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dlrobertson&quot;&gt;dlrobertson&lt;&#x2F;a&gt; paved the way for timed text tracks support by implementing the basics of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22392&quot;&gt;TextTrack API&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22563&quot;&gt;HTMLTrackElement interface&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;webaudio&quot;&gt;WebAudio&lt;&#x2F;h3&gt;
&lt;p&gt;We also got a few additions on the WebAudio land.&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PurpleHairEngineer&quot;&gt;PurpleHairEngineer&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;243&quot;&gt;implemented&lt;&#x2F;a&gt; the StereoPannerNode backend.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;collares&quot;&gt;collares&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22648&quot;&gt;implemented&lt;&#x2F;a&gt; the DOM side of the ChannelSplitterNode.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Akhilesh1996&quot;&gt;Akhilesh1996&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23259&quot;&gt;implemented&lt;&#x2F;a&gt; the AudioParam setValueCurveAtTime function.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snarasi6&quot;&gt;snarasi6&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23279&quot;&gt;implemented&lt;&#x2F;a&gt; the deprecated setPosition and setOrientation AudioListener methods.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;webrtc&quot;&gt;WebRTC&lt;&#x2F;h3&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jdm&quot;&gt;jdm&lt;&#x2F;a&gt;‚Äôs and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jdm&quot;&gt;Manishearth&lt;&#x2F;a&gt;‚Äôs work, Servo has now the foundations of a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23377&quot;&gt;WebRTC implementation&lt;&#x2F;a&gt; and it is able to perform a 2-way calling with audio and video playback coming from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22780&quot;&gt;getUserMedia API&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;player.vimeo.com&#x2F;video&#x2F;328247783&quot; width=&quot;640&quot; height=&quot;392&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; fullscreen&quot; allowfullscreen=&quot;&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;em&gt;That‚Äôs &lt;strong&gt;not&lt;&#x2F;strong&gt; all folks!&lt;&#x2F;em&gt; We have exciting plans for the second half of 2019.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;av-playback-1&quot;&gt;A&#x2F;V playback&lt;&#x2F;h4&gt;
&lt;p&gt;On the A&#x2F;V playback land, we want to:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Focus on adding hardware accelerated playback on Windows and OSX.&lt;&#x2F;li&gt;
  &lt;li&gt;Add support for fullscreen playback.&lt;&#x2F;li&gt;
  &lt;li&gt;Add support for 360 video.&lt;&#x2F;li&gt;
  &lt;li&gt;Improve the existing media controls by, for instance, implementing a nicer layout for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;input type=&quot;range&quot;&amp;gt;&lt;&#x2F;code&gt; element, with a proper slider and a thumb, so we can have progress and volume bars.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;webaudio-1&quot;&gt;WebAudio&lt;&#x2F;h4&gt;
&lt;p&gt;For WebAudio there are plans to make some architectural improvements related to the timeline and the graph traversals.&lt;&#x2F;p&gt;
&lt;p&gt;We would also love to work on the MediaElementAudioSourceNode implementation.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;webrtc-1&quot;&gt;WebRTC&lt;&#x2F;h4&gt;
&lt;p&gt;For WebRTC, data channels are on the roadmap for the second half.&lt;&#x2F;p&gt;
&lt;p&gt;We currently support the playback of a single stream of audio and video simultaneously, so allowing the playback of multiple simulatenous streams of each type is also something that we would like to get during the following months.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;others&quot;&gt;Others&lt;&#x2F;h4&gt;
&lt;p&gt;There were also plans to implement support for a global mute feature, and I am happy to say, that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;khodzha&quot;&gt;khodza&lt;&#x2F;a&gt; already &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;271&quot;&gt;got this done&lt;&#x2F;a&gt; right at the start of the second half.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we have been trying to get Youtube to work on Servo, but it turned out to be a difficult task because of non-media related issues (i.e. layout or web compatibility issues), so we decided to adjust the goal and focus on embedded Youtube support instead.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 130</title>
		<published>2019-06-03T00:30:00+00:00</published>
		<updated>2019-06-03T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-130-r2nlz4l0nvzuzl1lreq9e/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-130-r2nlz4l0nvzuzl1lreq9e/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2019-04-30..2019-06-03+user%3Aservo+&quot;&gt;past month&lt;&#x2F;a&gt;,
we merged 208 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;p&gt;Windows nightlies are temporarily &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;issues&#x2F;23348&quot;&gt;broken&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2019.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;ferjm is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23208&quot;&gt;adding media controls&lt;&#x2F;a&gt; to video elements.&lt;&#x2F;li&gt;
  &lt;li&gt;ceyusa is implementing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23483&quot;&gt;hardware accelerated video playback&lt;&#x2F;a&gt; for Linux.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm is adding &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23468&quot;&gt;Windows arm64 support&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;georgeroman is enabling &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23443&quot;&gt;automated tests for WebDriver&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;paul is embedding Servo inside &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulrouget&#x2F;HLServo&quot;&gt;a HoloLens app&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;figure&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;irccloud.mozilla.com&#x2F;file&#x2F;TfDvjrCP&#x2F;s.jpg&quot; &#x2F;&gt;
&lt;figcaption&gt;An early success rendering a website in the HoloLens emulator.&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;Manish &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;234850&quot;&gt;added&lt;&#x2F;a&gt; foundations of automated testing of WebXR.&lt;&#x2F;li&gt;
  &lt;li&gt;Eijebong &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23459&quot;&gt;implemented&lt;&#x2F;a&gt; type-safe DOM APIs that interact with JS Promises.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm and paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23457&quot;&gt;upgraded&lt;&#x2F;a&gt; glutin to 0.21.&lt;&#x2F;li&gt;
  &lt;li&gt;maharsh312 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23381&quot;&gt;implemented&lt;&#x2F;a&gt; most of the missing OffscreenCanvas APIs.&lt;&#x2F;li&gt;
  &lt;li&gt;ferjm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;260&quot;&gt;added&lt;&#x2F;a&gt; support for simultaneous playback of audio and video streams.&lt;&#x2F;li&gt;
  &lt;li&gt;Darkspirit &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23347&quot;&gt;updated&lt;&#x2F;a&gt; various network security data files (HSTS, PSL, CAs).&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22856&quot;&gt;added&lt;&#x2F;a&gt; support for running Servo on Windows via ANGLE.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23342&quot;&gt;made&lt;&#x2F;a&gt; receiving streams through WebRTC possible.&lt;&#x2F;li&gt;
  &lt;li&gt;pylbrecht &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23322&quot;&gt;implemented&lt;&#x2F;a&gt; resource timing for synchronous network requests.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;rust-webvr&#x2F;pull&#x2F;74&quot;&gt;fixed&lt;&#x2F;a&gt; a problem preventing transitioning into Daydream VR.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23300&quot;&gt;improved&lt;&#x2F;a&gt; the ergonomics of testing Magic Leap builds.&lt;&#x2F;li&gt;
  &lt;li&gt;codehag &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23296&quot;&gt;implemented&lt;&#x2F;a&gt; support for using a remote web console from Firefox with Servo‚Äôs content.&lt;&#x2F;li&gt;
  &lt;li&gt;PurpleHairEngineer &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23281&quot;&gt;implemented&lt;&#x2F;a&gt; the StereoPannerNode WebAudio API.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23163&quot;&gt;upgraded&lt;&#x2F;a&gt; the JavaScript engine.&lt;&#x2F;li&gt;
  &lt;li&gt;tdelacour &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23272&quot;&gt;improved&lt;&#x2F;a&gt; the type-safety of text input code that switches between UTF-8 and UTF-16 strings.&lt;&#x2F;li&gt;
  &lt;li&gt;ceyusa &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;media&#x2F;pull&#x2F;241&quot;&gt;created&lt;&#x2F;a&gt; an API for providing hardware-accelerated GL video playback.&lt;&#x2F;li&gt;
  &lt;li&gt;mmatyas &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23226&quot;&gt;implemented&lt;&#x2F;a&gt; support for compressed textures in WebGL.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;21780&quot;&gt;upgraded&lt;&#x2F;a&gt; the NDK in use for Android builds.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jeremy-ir&quot;&gt;Jeremy Ir&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;marcinwiacek&quot;&gt;Marcin WiƒÖcek&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PurpleHairEngineer&quot;&gt;Maria Sable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mboros1&quot;&gt;Martin Boros&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petemoore&quot;&gt;Pete Moore&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nehalem501&quot;&gt;Tomek LECOCQ&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;will-bartlett&quot;&gt;William Bartlett&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ffwff&quot;&gt;ffwff&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Update on await syntax</title>
		<published>2019-05-28T00:00:00+00:00</published>
		<updated>2019-05-28T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/update-on-await-syntax-jhw9qvu2zp8y1fo-aqo7k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/update-on-await-syntax-jhw9qvu2zp8y1fo-aqo7k/</id>
		<content type="html">&lt;p&gt;In my previous post I said that the lang team would be making our final decision about the syntax of the await operator in the May 23 meeting. That was last Thursday, and we did reach a decision. In brief, we decided to go forward with the preliminary proposal I outlined earlier: a postfix dot syntax, future.await. For more background, in addition the previous post on my blog, you can read this write up about some of the trade offs from April.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Zero Cost Abstractions</title>
		<published>2019-05-16T00:00:00+00:00</published>
		<updated>2019-05-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/zero-cost-abstractions-j4zfhe-d86nel8grox9-5/" type="text/html"/>
		<id>https://kitallis.github.io/hades/zero-cost-abstractions-j4zfhe-d86nel8grox9-5/</id>
		<content type="html">&lt;p&gt;The idea of a zero cost abstraction is very important to certain programming languages, like Rust and C++, which intend to enable users to write programs with excellent performance profiles with relatively little effort. Since this idea is fundamental to the design of Rust and my work, I want to investigate, for a moment, what exactly a zero cost abstraction even is.
The idea is summarized in its original by Bjarne Stroustrup, the original developer of C++:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>A final proposal for await syntax</title>
		<published>2019-05-06T00:00:00+00:00</published>
		<updated>2019-05-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/a-final-proposal-for-await-syntax-baeoiikkzck8dctokiols/" type="text/html"/>
		<id>https://kitallis.github.io/hades/a-final-proposal-for-await-syntax-baeoiikkzck8dctokiols/</id>
		<content type="html">&lt;p&gt;This is an announcement regarding the resolution of the syntax for the await operator in Rust. This is one of the last major unresolved questions blocking the stabilization of the async&#x2F;await feature, a feature which will enable many more people to write non-blocking network services in Rust. This post contains information about the timeline for the final decision, a proposal from the language team which is the most likely syntax to be adopted, and the justification for this decision.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week In Servo 129</title>
		<published>2019-04-30T00:30:00+00:00</published>
		<updated>2019-04-30T00:30:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-servo-129-bu4jbqwmdm-a42oy-yoks/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-servo-129-bu4jbqwmdm-a42oy-yoks/</id>
		<content type="html">&lt;p&gt;In the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Amerged+closed%3A2019-04-22..2019-04-30
+user%3Aservo+&quot;&gt;past week&lt;&#x2F;a&gt;,
we merged 68 PRs in the Servo organization‚Äôs repositories.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;planning-and-status&quot;&gt;Planning and Status&lt;&#x2F;h3&gt;
&lt;p&gt;Our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;wiki&#x2F;Roadmap&quot;&gt;roadmap&lt;&#x2F;a&gt; is available online, including the team‚Äôs plans for 2019.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs status updates are &lt;a href=&quot;https:&#x2F;&#x2F;build.servo.org&#x2F;standups&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;exciting-works-in-progress&quot;&gt;Exciting works in progress&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;ferjm is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23208&quot;&gt;adding media controls&lt;&#x2F;a&gt; to video elements.&lt;&#x2F;li&gt;
  &lt;li&gt;Manishearth is implementing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23292&quot;&gt;WebXR input APIs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;mmatyas is adding support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23226&quot;&gt;compressed WebGL textures&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;notable-additions&quot;&gt;Notable Additions&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;ferjm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;22743&quot;&gt;implemented&lt;&#x2F;a&gt; enough Shadow DOM support to build user agent widgets include media controls.&lt;&#x2F;li&gt;
  &lt;li&gt;miller-time &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23090&quot;&gt;standardized&lt;&#x2F;a&gt; the use of referrers in fetch requests.&lt;&#x2F;li&gt;
  &lt;li&gt;krk &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23200&quot;&gt;added&lt;&#x2F;a&gt; a build-time validation that the DOM inheritance hierarchy matches the WebIDL hierarchy.&lt;&#x2F;li&gt;
  &lt;li&gt;paulrouget &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23233&quot;&gt;redesigned&lt;&#x2F;a&gt; part of the embedding API to separate per-window from per-application APIs.&lt;&#x2F;li&gt;
  &lt;li&gt;AZWN &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23253&quot;&gt;created&lt;&#x2F;a&gt; an API for using the type system to represent important properties of the JS engine.&lt;&#x2F;li&gt;
  &lt;li&gt;Akhilesh1996 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23259&quot;&gt;implemented&lt;&#x2F;a&gt; the setValueCurveAtTime Web Audio API.&lt;&#x2F;li&gt;
  &lt;li&gt;jdm &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23256&quot;&gt;transitioned&lt;&#x2F;a&gt; the Windows build to rely on clang-cl instead of the MSVC compiler.&lt;&#x2F;li&gt;
  &lt;li&gt;snarasi6 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;servo&#x2F;servo&#x2F;pull&#x2F;23279&quot;&gt;implemented&lt;&#x2F;a&gt; the setPosition and setOrientation Web Audio APIs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;new-contributors&quot;&gt;New Contributors&lt;&#x2F;h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Akhilesh1996&quot;&gt;Akhilesh V&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;swarnimarun&quot;&gt;Swarnim Arun&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;snarasi6&quot;&gt;snarasi6&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Interested in helping build a web browser? Take a look at our &lt;a href=&quot;https:&#x2F;&#x2F;starters.servo.org&#x2F;&quot;&gt;curated list&lt;&#x2F;a&gt; of issues that are good for new contributors!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>for await loops (Part I)</title>
		<published>2019-04-15T00:00:00+00:00</published>
		<updated>2019-04-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/for-await-loops-part-i-rk6ms-izkf2v89gesf2ra/" type="text/html"/>
		<id>https://kitallis.github.io/hades/for-await-loops-part-i-rk6ms-izkf2v89gesf2ra/</id>
		<content type="html">&lt;p&gt;The biggest unresolved question regarding the async&#x2F;await syntax is the final syntax for the await operator. There‚Äôs been an enormous amount of discussion on this question so far; a summary of the present status of that discussion and the positions within the language team is coming soon. Right now I want to separately focus on one question which impacts that decision but hasn‚Äôt been considered very much yet: for loops which process streams.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Red Hat Enterprise Linux compiler toolset updates: Clang&#x2F;LLVM 7.0, Go 1.11, Rust 1.31</title>
		<published>2019-03-29T07:03:33+00:00</published>
		<updated>2019-03-29T07:03:33+00:00</updated>
		<link href="https://kitallis.github.io/hades/red-hat-enterprise-linux-compiler-toolset-updates-clang-llvm-7-0-go-1-11-rust-1-31-g-u89bpnlkas6zwzzipma/" type="text/html"/>
		<id>https://kitallis.github.io/hades/red-hat-enterprise-linux-compiler-toolset-updates-clang-llvm-7-0-go-1-11-rust-1-31-g-u89bpnlkas6zwzzipma/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>rustdoc in 2019</title>
		<published>2019-02-19T00:00:00-07:00</published>
		<updated>2019-02-19T00:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/rustdoc-in-2019-o6ddqgvibfve2-ga0vkhi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rustdoc-in-2019-o6ddqgvibfve2-ga0vkhi/</id>
		<content type="html">&lt;p&gt;A couple weeks ago, the 2019 Rust All-Hands occured in Berlin. This was an opportunity to get a
whole bunch of Rust contributors in the same place for a week, and get decisions done a lot faster
than in a GitHub issue thread or a chatroom. Hard problems were discussed, plans were made, and
serindipitous chance encounters occured that helped propel the project forward in new and exciting
directions.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Generators II: The Question Mark Problem</title>
		<published>2019-02-18T00:00:00+00:00</published>
		<updated>2019-02-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/generators-ii-the-question-mark-problem-ctd2pkzkqsxfiyf8z9y70/" type="text/html"/>
		<id>https://kitallis.github.io/hades/generators-ii-the-question-mark-problem-ctd2pkzkqsxfiyf8z9y70/</id>
		<content type="html">&lt;p&gt;This is my second post on the design of generators. In the first post, I outlined what an MVP of the feature would look like. In this post, I want to take a look at the first design issue for the feature: how it integrates with the ? operator.
To explain exactly what I mean, let‚Äôs start with a specific motivating example:
&#x2F;&#x2F; This generator yields the number of alphanumeric characters in every line &#x2F;&#x2F; in some io::Read&#x27;able data &#x2F;&#x2F; exact sign function declaration syntax left unspecified on purpose |data| { let mut buffered_data = BufReader::new(data); let mut string = String::new(); while buffered_data.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Generators I: Toward a minimum viable product</title>
		<published>2019-02-11T00:00:00+00:00</published>
		<updated>2019-02-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/generators-i-toward-a-minimum-viable-product-3caljkwbmzoig0jaudbod/" type="text/html"/>
		<id>https://kitallis.github.io/hades/generators-i-toward-a-minimum-viable-product-3caljkwbmzoig0jaudbod/</id>
		<content type="html">&lt;p&gt;We‚Äôre still not finished with the design of async&#x2F;await, but it‚Äôs already become clear that it‚Äôs time to get the next phases of the feature into the pipeline. There are two extensions to the minimal async&#x2F;await feature we‚Äôve currently got that seem like the clear high priority:
Async methods: allowing async fn to be used in traits. Generators: allowing imperative control flow to create Iterators and Streams the same way async fn allows imperative control flow to create a Future.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Reinforcement Learning for Control of Nonlinear Active Dampers</title>
		<published>2019-01-31T00:00:00+00:00</published>
		<updated>2019-01-31T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/reinforcement-learning-for-control-of-nonlinear-active-dampers-znmsnds2lulrfaju5i5ey/" type="text/html"/>
		<id>https://kitallis.github.io/hades/reinforcement-learning-for-control-of-nonlinear-active-dampers-znmsnds2lulrfaju5i5ey/</id>
		<content type="html">&lt;h2 id=&quot;publication&quot;&gt;Publication&lt;&#x2F;h2&gt;
&lt;p&gt;Turner, J. D., L. H. Manring, and B. P. Mann. ‚ÄúReinforcement learning for
active damping of harmonically excited pendulum with highly nonlinear
actuator‚Äù. &lt;em&gt;Nonlinear Structures and Systems, Volume 1: Proceedings of the 37th
IMAC, Jan.¬†2019,&lt;&#x2F;em&gt; (2020), pp.¬†119‚Äì123. (&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;IMAC_37i_4257_tur.pdf&quot;&gt;extended
abstract¬†(PDF)&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1007&#x2F;978-3-030-12391-8_15&quot;&gt;publisher
webpage&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Active vibration dampers can reduce or eliminate unwanted vibrations, but
determining a good control policy can be challenging for highly nonlinear
systems. For these types of systems, reinforcement learning is one method to
optimize a control policy with only limited prior knowledge of the system
dynamics. An experimental system was constructed by attaching a permanent
magnet to the end of a pendulum and positioning an electromagnetic actuator
below the resting position of the pendulum. The pendulum was excited with a
sinusoidal force applied horizontally at the pivot point, and the control
input was the applied voltage across the electromagnet. Due to the geometric
arrangement and the strong dependence of magnetic force on distance, the
relationship between the position of the pendulum and the actuation torque
for any control input was highly nonlinear. A generalized version of the
PILCO reinforcement learning algorithm was used to optimize a control policy
for the electromagnet with the objective of minimizing the distance between
the end of the pendulum and the downward position. After 16‚Äâs of interaction
with the experimental system, the resulting learned policy was able to
substantially reduce the amplitude of oscillation. This experiment
illustrates the applicability of reinforcement learning to highly nonlinear
active vibration damping problems.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;cite&gt;Turner, J.‚ÄâD., et al., Society for Experimental Mechanics, Inc., 2020.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>The Waker API II: waking across threads</title>
		<published>2019-01-11T00:00:00+00:00</published>
		<updated>2019-01-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/the-waker-api-ii-waking-across-threads-mxxw7pdi868-ntvfyx8oa/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-waker-api-ii-waking-across-threads-mxxw7pdi868-ntvfyx8oa/</id>
		<content type="html">&lt;p&gt;In the previous post, I provided a lot of background on what the waker API is trying to solve. Toward the end, I touched on one of the tricky problems the waker API has: how do we handle thread safety for the dynamic Waker type? In this post, I want to look at that in greater detail: what we‚Äôve been doing so far, and what I think we should do.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>The Waker API I: what does a waker do?</title>
		<published>2019-01-07T00:00:00+00:00</published>
		<updated>2019-01-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/the-waker-api-i-what-does-a-waker-do-lzgpm1plp2unzuyxs-j2r/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-waker-api-i-what-does-a-waker-do-lzgpm1plp2unzuyxs-j2r/</id>
		<content type="html">&lt;p&gt;Work on supporting async&#x2F;await in Rust continues to progress rapidly. I‚Äôm hoping to write a retrospective on everything that happened in 2018 in a few weeks. Right now we‚Äôre closing in on an important milestone: stabilizing the futures API that will be used to interact programmatically with asynchronous computations. The biggest remaining area of work is the design of the waker API, an essential but somewhat opaque part of how our asynchronous programming system works.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>A great 2018, an even better 2019</title>
		<published>2018-12-19T00:00:00+00:00</published>
		<updated>2018-12-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/a-great-2018-an-even-better-2019-reb8jxzea-xw-po8r3y2k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/a-great-2018-an-even-better-2019-reb8jxzea-xw-po8r3y2k/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>warp v0.1.10</title>
		<published>2018-12-18T09:28:15-08:00</published>
		<updated>2018-12-18T09:28:15-08:00</updated>
		<link href="https://kitallis.github.io/hades/warp-v0-1-10-4hqaqsatahdc0kxdm7ywh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/warp-v0-1-10-4hqaqsatahdc0kxdm7ywh/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;176530511587&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt; is a breakthrough server web framework for the Rust language.&lt;&#x2F;p&gt;
&lt;p&gt;Today sees the 11th release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt;, v0.1.10! I wanted to show off the new features, and highlight some of the amazing work that has appeared since the initial announcement.&lt;&#x2F;p&gt;
&lt;h3&gt;v0.1.10&lt;&#x2F;h3&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;TLS Support&lt;&#x2F;strong&gt;: there is now optional support TLS, enabled via the &lt;code&gt;tls&lt;&#x2F;code&gt; feature.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;CORS&lt;&#x2F;strong&gt;: There is a &amp;ldquo;wrapping&amp;rdquo; filter (warp&amp;rsquo;s idea of middleware) that can provide CORS to any existing &lt;code&gt;Filter&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Retrieving the remote address.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Websocket test helpers&lt;&#x2F;strong&gt;: testing filters has always been easy thanks to &lt;code&gt;warp::test&lt;&#x2F;code&gt;, and now, &lt;code&gt;warp::test::ws&lt;&#x2F;code&gt; allows for easy testing of Websocket routes specifically.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;h3&gt;Previously&lt;&#x2F;h3&gt;
&lt;p&gt;In case you missed it, some highlights of work that has landed before v0.1.10:&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;Rejection system clarity: warp initially had a rejection system that would try to automatically translate rejections into HTTP responses. It wasn&amp;rsquo;t that scalable. The rejection system now is simply errors for why a request failed, and &lt;code&gt;Filter::recover&lt;&#x2F;code&gt; can be used to translate those into specific HTTP responses.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;warp::fs&lt;&#x2F;code&gt; filters automatically support Conditional and Range requests, and try to use the OS blocksize for improved performance all around.&lt;&#x2F;li&gt;
&lt;li&gt;Streaming request and response bodies.&lt;&#x2F;li&gt;
&lt;li&gt;Support for custom transports besides the default TCP.&lt;&#x2F;li&gt;
&lt;li&gt;And many smaller improvements and new filters.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;h3&gt;Next Focus: &lt;code&gt;Service&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;When I &lt;a href=&quot;https:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;176530511587&#x2F;warp&quot;&gt;announced warp initially&lt;&#x2F;a&gt;, I had mentioned the &lt;code&gt;Service&lt;&#x2F;code&gt; trait, and the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@carllerche&#x2F;tower-web-a-new-web-framework-for-rust-e2912856851b&quot;&gt;tower-web&lt;&#x2F;a&gt; framework. There are still plans to see warp and tower-web merge, and current efforts have been around solidifying the &lt;code&gt;Service&lt;&#x2F;code&gt; trait itself.&lt;&#x2F;p&gt;
&lt;p&gt;As a recap, the &lt;code&gt;Service&lt;&#x2F;code&gt; trait is essentially some extra pieces on top of an &lt;code&gt;async fn(Request) -&amp;gt; Response&lt;&#x2F;code&gt;. &lt;strong&gt;Our aim is that &lt;code&gt;Service&lt;&#x2F;code&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;http&quot;&gt;http crate&lt;&#x2F;a&gt; are the most basic interface that the ecosystem can gather behind.&lt;&#x2F;strong&gt; Server implementations and frameworks could be compatible with each other, as long they both just knew about &lt;code&gt;Service&lt;&#x2F;code&gt; and &lt;code&gt;http&lt;&#x2F;code&gt;.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote-ref&quot; role=&quot;doc-noteref&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Being the common interface, it then becomes easier for frameworks and users to add in &amp;ldquo;tower middleware&amp;rdquo;, since a wrapped &lt;code&gt;Service&lt;&#x2F;code&gt; is still a &lt;code&gt;Service&lt;&#x2F;code&gt;. There are already several &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tower-rs&#x2F;tower&quot;&gt;tower&lt;&#x2F;a&gt; middlewares that have been developed in support of &lt;a href=&quot;https:&#x2F;&#x2F;linkerd.io&#x2F;2&quot;&gt;Linkerd2&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We recently published a new release of &lt;code&gt;tower-service&lt;&#x2F;code&gt;. A prototype now exists for warp to be able to convert a &lt;code&gt;Filter&lt;&#x2F;code&gt; directly into an HTTP &lt;code&gt;Service&lt;&#x2F;code&gt;. From there, we could simply run it directly via &lt;code&gt;hyper::Server&lt;&#x2F;code&gt;. Other HTTP server implementations that supported &lt;code&gt;Service&lt;&#x2F;code&gt; could theoretically also just run it, and the user would still just deal with &lt;code&gt;warp&lt;&#x2F;code&gt; types.&lt;&#x2F;p&gt;
&lt;p&gt;The future of webdev in Rust looks bright!&lt;&#x2F;p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
&lt;hr&gt;&lt;ol&gt;&lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
&lt;p&gt;This is similar to other languages, like WSGI, Rack, Servlet, WAI, and the like.¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;footnote-backref&quot; role=&quot;doc-backlink&quot;&gt;‚Ü©Ô∏é&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Organizational Debt</title>
		<published>2018-12-16T00:00:00+00:00</published>
		<updated>2018-12-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/organizational-debt-33ig8pskf99glekeswwp3/" type="text/html"/>
		<id>https://kitallis.github.io/hades/organizational-debt-33ig8pskf99glekeswwp3/</id>
		<content type="html">&lt;p&gt;We all know that classic aphorism: Year comes to an end, Rust blog post press send. This is mine.
There are lots of cool technical improvements to Rust that I want the project to achieve this year, and a few in particular that I‚Äôm definitely going to be putting a lot of time into. But this blog post is going to talk about none of them. Instead, I want to talk about organizational debt, and how badly the Rust project needs to deal with it in 2019.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>rust in the new age</title>
		<published>2018-12-07T00:00:00-07:00</published>
		<updated>2018-12-07T00:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/rust-in-the-new-age-0jptdpabb32ywswqhxy3p/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-in-the-new-age-0jptdpabb32ywswqhxy3p/</id>
		<content type="html">&lt;p&gt;With the end of a year comes a new call for reflection, and a new chance to orient ourselves for the
coming year. As with previous years, the Rust Teams have called for &lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2018&#x2F;12&#x2F;06&#x2F;call-for-rust-2019-roadmap-blogposts.html&quot;&gt;a new set of roadmap
posts&lt;&#x2F;a&gt; to help guide the teams‚Äô priorities in 2019. I‚Äôve been doing a little prepwork
myself, and have a few ideas for where to take my own work. Consider this less of a request for the
organization as a whole, and more of a preview for what i‚Äôm considering for focusing the Rustdoc
Team on.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Wherefore art thou Romio?</title>
		<published>2018-12-05T00:00:00+00:00</published>
		<updated>2018-12-05T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/wherefore-art-thou-romio-cvqczpl4yitsamowuuehs/" type="text/html"/>
		<id>https://kitallis.github.io/hades/wherefore-art-thou-romio-cvqczpl4yitsamowuuehs/</id>
		<content type="html">&lt;p&gt;This blog post is about a project called Romio that I‚Äôve been working on over the past two or three weeks. Romio is a port of a small part of the Tokio project to the newer futures APIs.
I started the project to get some experience porting code from the old futures API to the new API. However, we realized that this code could also be useful to other people who want to experiment with networking code using the new async&#x2F;await syntax, so with the help of others we polished it up during the RustFest Rome ‚Äúimpl days‚Äù and now its being released for people to experiment with.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing RustaCUDA v0.1.0</title>
		<published>2018-12-01T15:00:00-06:00</published>
		<updated>2018-12-01T15:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-rustacuda-v0-1-0-obsrc74jagf3euldmsbfi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-rustacuda-v0-1-0-obsrc74jagf3euldmsbfi/</id>
		<content type="html">&lt;p&gt;In my post on GPGPU in Rust, I declared that I intended to work on improving the state of CUDA support in Rust. Since then, I‚Äôve been mostly radio-silent. I‚Äôm pleased to announce that I have actually been working on something, and I‚Äôve finally published that something.
RustaCUDA RustaCUDA is a new wrapper crate for the CUDA driver API. It allows the programmer to allocate and free GPU memory, copy data to and from the GPU, load CUDA modules and launch kernels, all with a mostly-safe, programmer-friendly, Rust-y interface.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Support Lifecycle for Clang&#x2F;LLVM, Go, and Rust</title>
		<published>2018-11-20T12:00:18+00:00</published>
		<updated>2018-11-20T12:00:18+00:00</updated>
		<link href="https://kitallis.github.io/hades/support-lifecycle-for-clang-llvm-go-and-rust-ji4d8l6ok5e-oapscbu80/" type="text/html"/>
		<id>https://kitallis.github.io/hades/support-lifecycle-for-clang-llvm-go-and-rust-ji4d8l6ok5e-oapscbu80/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Making progress in await syntax</title>
		<published>2018-11-08T00:00:00+00:00</published>
		<updated>2018-11-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/making-progress-in-await-syntax-3m0sank1vsl6nujp6q4vn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/making-progress-in-await-syntax-3m0sank1vsl6nujp6q4vn/</id>
		<content type="html">&lt;p&gt;One thing we‚Äôve left as an unresolved question so far in the matter of async&#x2F;await syntax is the exact final syntax for the await operation. In the current implementation, awaits are written using a compiler plugin:
async fn foo() { await!(bar()); }  This is not because of any technical limitation: the reason we have done this is that we have not decided on the precise, final syntax for the await operation.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Anchored and Uniform Paths</title>
		<published>2018-11-02T00:00:00+00:00</published>
		<updated>2018-11-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/anchored-and-uniform-paths-lsif-dbzs-y5euxsr5ffv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/anchored-and-uniform-paths-lsif-dbzs-y5euxsr5ffv/</id>
		<content type="html">&lt;p&gt;Rust 2018 is almost out the door, but there is one big decision the language team has yet to make. It has to do with the modules and paths system, so of course it is a very easy decision that no one has a strong opinion about. ;-)
In Rust 2018, we‚Äôll be making some big changes to how paths work to try to create a more consistent experience. The ‚Äúlodestar‚Äù (if you will) of these changes is an idea we call ‚Äú1path:‚Äù the idea no matter where you are in your project, whether in a use statement or normal code, a path is interpreted the same way.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Shifgrethor IV: Tracing</title>
		<published>2018-10-31T00:00:00+00:00</published>
		<updated>2018-10-31T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/shifgrethor-iv-tracing-rh-gq5hoo4g-pqyu1yrnn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/shifgrethor-iv-tracing-rh-gq5hoo4g-pqyu1yrnn/</id>
		<content type="html">&lt;p&gt;The post before this one covered how shifgrethor handles rooting: how we track for the garbage collector that this object is alive. That isn‚Äôt sufficient for implementing a tracing garbage collector though: the idea of a tracing garbage collector is that we can trace from rooted objects through all of the objects they reference. That way, instead of having to root everything you use, you can only root a few objects from which all of the live objects can be traced.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Shifgrethor III: Rooting</title>
		<published>2018-10-24T00:00:00+00:00</published>
		<updated>2018-10-24T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/shifgrethor-iii-rooting-tlnq0djifcxacbta80fsy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/shifgrethor-iii-rooting-tlnq0djifcxacbta80fsy/</id>
		<content type="html">&lt;p&gt;After the digression in the previous post, it‚Äôs time to get back to what I promised in the first post: a look at how shifgrethor handles rooting. Shifgrethor‚Äôs solution is somewhat novel and takes advantage of some of Rust‚Äôs specific features, so I want to start by looking briefly at some of the other options.
How to root a GC‚Äôd object There are two broad categories of rooting strategies that are common among precise, tracing garbage collectors:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Shifgrethor II: Notes on tracing garbage collectors</title>
		<published>2018-10-22T00:00:00+00:00</published>
		<updated>2018-10-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/shifgrethor-ii-notes-on-tracing-garbage-collectors-z2ozgfg-zon3rtsfkrlkf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/shifgrethor-ii-notes-on-tracing-garbage-collectors-z2ozgfg-zon3rtsfkrlkf/</id>
		<content type="html">&lt;p&gt;In the previous post I said that in the second post in the series we‚Äôd talk about how rooting works. However, as I sat down to write that post, I realized that it would be a good idea to back up and give an initial overview of how a tracing garbage collector works - and in particular, how the underlying garbage collector in shifgrethor is implemented.
In the abstract, we can think of the memory of a Rust program with garbage collection as being divided into three sections: the stack, the ‚Äúunmanaged‚Äù heap, and the ‚Äúmanaged‚Äù heap.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Shifgrethor I: Garbage collection as a Rust library</title>
		<published>2018-10-16T00:00:00+00:00</published>
		<updated>2018-10-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/shifgrethor-i-garbage-collection-as-a-rust-library-qsb6ezs804j97gtgx-oe7/" type="text/html"/>
		<id>https://kitallis.github.io/hades/shifgrethor-i-garbage-collection-as-a-rust-library-qsb6ezs804j97gtgx-oe7/</id>
		<content type="html">&lt;p&gt;I‚Äôm really excited to share with you an experiment that I‚Äôve been working on for the past 5 or 6 weeks. It‚Äôs a Rust library called shifgrethor. shifgrethor implements a garbage collector in Rust with an API I believe to be properly memory safe.
I‚Äôll be going through all of the technical details in future blog posts, so I want to kick this series off with a high level overview of the project‚Äôs purpose and design decisions.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>The hard parts of talking about open source</title>
		<published>2018-10-16T00:00:00+00:00</published>
		<updated>2018-10-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/the-hard-parts-of-talking-about-open-source-xaf-nukyiccxzw01ic4qq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-hard-parts-of-talking-about-open-source-xaf-nukyiccxzw01ic4qq/</id>
		<content type="html">&lt;p&gt;Evan Czaplicki, the creator and maintainer of the Elm project (a project that I love by the way) gave a great talk at Strange Loop last month called ‚ÄúThe Hard Parts of Open Source.‚Äù I really enjoyed and valued this talk, and I encourage everyone who is involved in open source to watch it. You can find on YouTube here.
In particular, I got a lot of value out of his identification of three specific harmful patterns of behavior in the open source community, and of his geneological work tracing the origins of those behaviors through the history of the ‚Äúhacker‚Äù subculture.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>New crate: pin-cell</title>
		<published>2018-10-09T00:00:00+00:00</published>
		<updated>2018-10-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/new-crate-pin-cell-lgr3ssaxvddqoci7j64c7/" type="text/html"/>
		<id>https://kitallis.github.io/hades/new-crate-pin-cell-lgr3ssaxvddqoci7j64c7/</id>
		<content type="html">&lt;p&gt;Today I realized a new crate called pin-cell. This crate contains a type called PinCell, which is a kind of cell that is similar to RefCell, but only can allow pinned mutable references into its interior. Right now, the crate is nightly only and no-std compatible.
How is the API of PinCell different from RefCell? When you call borrow_mut on a RefCell, you get a type back that implements DerefMut, allowing you to mutate the interior value.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing the Tokio Doc Push (we need you!)</title>
		<published>2018-10-04T00:00:00+00:00</published>
		<updated>2018-10-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-the-tokio-doc-push-we-need-you-ebo21dsf7sbnjyw7vej2z/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-the-tokio-doc-push-we-need-you-ebo21dsf7sbnjyw7vej2z/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Porting My CUDA Path Tracer to ptx-builder&#x2F;linker</title>
		<published>2018-10-01T19:00:00-06:00</published>
		<updated>2018-10-01T19:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/porting-my-cuda-path-tracer-to-ptx-builder-linker-psrbffxbpnudrsq3rqw2p/" type="text/html"/>
		<id>https://kitallis.github.io/hades/porting-my-cuda-path-tracer-to-ptx-builder-linker-psrbffxbpnudrsq3rqw2p/</id>
		<content type="html">&lt;p&gt;A bunch of stuff has happened since I published my post on The State of GPGPU in Rust. Most importantly, Denys Zariaiev (@denzp) released his work on a custom linker for Rust CUDA kernels, and a build.rs helper crate to make it easier to use.
These two crates eliminate many of the problems I referred to in my previous post. The linker solves most of the ‚Äúinvalid PTX file‚Äù problems, while the ptx-builder crate does all of the magic that Accel was doing behind the scenes.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Thinking about names, as well as scuba diving</title>
		<published>2018-09-10T00:00:00+00:00</published>
		<updated>2018-09-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/thinking-about-names-as-well-as-scuba-diving-k1qcv4qvtmnpr5hvev5ux/" type="text/html"/>
		<id>https://kitallis.github.io/hades/thinking-about-names-as-well-as-scuba-diving-k1qcv4qvtmnpr5hvev5ux/</id>
		<content type="html">&lt;p&gt;There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors.
Naming a project, tool, or concept that you want other people to use is a very hard problem. The most important thing, of course, is that the name sounds cool. Then, significantly less important, but still quite important, is that the name convey useful information to your users. This is where things get tricky.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Experimental async &#x2F; await support for Tokio</title>
		<published>2018-08-27T00:00:00+00:00</published>
		<updated>2018-08-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/experimental-async-await-support-for-tokio-bppm4qmtmvkgwhgfjgdlt/" type="text/html"/>
		<id>https://kitallis.github.io/hades/experimental-async-await-support-for-tokio-bppm4qmtmvkgwhgfjgdlt/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Tokio 0.1.8 with many incremental improvements</title>
		<published>2018-08-24T00:00:00+00:00</published>
		<updated>2018-08-24T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/tokio-0-1-8-with-many-incremental-improvements-qqij-qoshbivke0amqhrs/" type="text/html"/>
		<id>https://kitallis.github.io/hades/tokio-0-1-8-with-many-incremental-improvements-qqij-qoshbivke0amqhrs/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Another look at the pinning API</title>
		<published>2018-08-22T00:00:00+00:00</published>
		<updated>2018-08-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/another-look-at-the-pinning-api-pbuuknrwmy2bzdariftob/" type="text/html"/>
		<id>https://kitallis.github.io/hades/another-look-at-the-pinning-api-pbuuknrwmy2bzdariftob/</id>
		<content type="html">&lt;p&gt;A few months ago we introduced the concept of ‚Äúpinned‚Äù references - pointers which ‚Äúpin‚Äù the data they refer to in a particular memory location, guaranteeing that it will never move again. These are an important building block for certain patterns that had previously been hard for Rust to handle, like self-referential structs and intrusive lists, and we‚Äôve in the process of considering stabilizing the API.
One thing has always nagged about the API we have right now though: the proliferation of different reference types that it implies.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>The State of GPGPU in Rust</title>
		<published>2018-08-08T20:00:00-06:00</published>
		<updated>2018-08-08T20:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/the-state-of-gpgpu-in-rust-7s7rr72rmcy6rpzsn9dqq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-state-of-gpgpu-in-rust-7s7rr72rmcy6rpzsn9dqq/</id>
		<content type="html">&lt;p&gt;At work a few months ago, we started experimenting with GPU-acceleration. My boss asked if I was interested. I didn‚Äôt know anything about programming GPUs, so of course I said ‚ÄúHeck yes, I‚Äôm interested!‚Äú. I needed to learn about GPUs in a hurry, and that led to my GPU Path Tracer series. That was a lot of fun, but it showed me that CUDA support in Rust is pretty poor.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>warp</title>
		<published>2018-08-01T14:42:07-07:00</published>
		<updated>2018-08-01T14:42:07-07:00</updated>
		<link href="https://kitallis.github.io/hades/warp-yydvxyscius6clomonjo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/warp-yydvxyscius6clomonjo/</id>
		<content type="html">&lt;p&gt;Over the past several months, I&amp;rsquo;ve been working a web framework in Rust. I wanted to make use of the &lt;a href=&quot;http:&#x2F;&#x2F;seanmonstar.com&#x2F;post&#x2F;174480374517&#x2F;hyper-v012&quot;&gt;new hyper 0.12 changes&lt;&#x2F;a&gt;, so the framework is just as fast, is asynchronous, and benefits from all the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seanmonstar&#x2F;status&#x2F;1024370108137857031&quot;&gt;improvements found&lt;&#x2F;a&gt; powering &lt;a href=&quot;https:&#x2F;&#x2F;linkerd.io&quot;&gt;Linkerd&lt;&#x2F;a&gt;. More importantly, I wanted there to be a reason for making a new framework; it couldn&amp;rsquo;t just be &lt;em&gt;yet another&lt;&#x2F;em&gt; framework with the only difference being I&amp;rsquo;ve written it. Instead, the way this framework is used is quite different than many that exist. In doing so, it expresses a strong opinion, which might not match your previous experiences, but I believe it manages to do something really special.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;I&amp;rsquo;m super excited to reveal &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, a joint project with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carllerche&quot;&gt;@carllerche&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3&gt;Background&lt;&#x2F;h3&gt;
&lt;p&gt;What makes warp different?&lt;&#x2F;p&gt;
&lt;p&gt;I&amp;rsquo;ve been working on web servers for years. Before coming to Rust, I did several things in PHP, moved over to Python, and then shifted again to Nodejs. I&amp;rsquo;ve tried &lt;em&gt;many&lt;&#x2F;em&gt; frameworks. I found that I often times need to configure predicates, like certain headers required, query parameters needed, etc, and sometimes, I need to configure that a set of routes should be &amp;ldquo;mounted&amp;rdquo; at a different path, and possibly want certain predicates there too. I noticed the concept of mounting or sub-routes or sub-resources or whatever the framework calls them didn&amp;rsquo;t feel&amp;hellip; natural, at least to me. It frequently felt like a secondary concept, occasionally not having all the power that a standard route does.&lt;&#x2F;p&gt;
&lt;p&gt;I&amp;rsquo;ve also been working in Rust for several years now, and what kept using the language was its powerful type system&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote-ref&quot; role=&quot;doc-noteref&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;. The more I wrote Rust, and learned how amazing the &amp;ldquo;fearless refactoring&amp;rdquo; is, the more I hated working in dynamic languages (in my case, it was a large Nodejs server), as trying to refactor pieces inevitably would remind us (in production) that our supposedly comprehensive test suite still had holes in it. I wanted app-specific types to save me from shipping bugs.&lt;&#x2F;p&gt;
&lt;p&gt;A few months ago, I found the &lt;a href=&quot;https:&#x2F;&#x2F;finagle.github.io&#x2F;finch&#x2F;&quot;&gt;Finch&lt;&#x2F;a&gt; library in Scala, and shortly after, &lt;a href=&quot;https:&#x2F;&#x2F;akka.io&quot;&gt;Akka&lt;&#x2F;a&gt;, both of which instead just treat everything as a sort of function converting from input to output, and from there, you just chain together these different pieces, and they compose and reuse really well. Scala also has a powerful type system, and those frameworks embrace converting information from HTTP messages into app-specific types. I fell in &lt;em&gt;love&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The thing that makes warp special is its &lt;code&gt;Filter&lt;&#x2F;code&gt; system.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3&gt;Filters&lt;&#x2F;h3&gt;
&lt;p&gt;A &lt;code&gt;Filter&lt;&#x2F;code&gt; in warp is essentially a function that can operate on some input, either something from a request, or something from a previous &lt;code&gt;Filter&lt;&#x2F;code&gt;, and returns some output, which could be some app-specific type you wish to pass around, or can be some reply to send back as an HTTP response. That might sound simple, but the exciting part is the combinators that exist on the &lt;code&gt;Filter&lt;&#x2F;code&gt; trait. These allow composing smaller &lt;code&gt;Filter&lt;&#x2F;code&gt;s into larger ones, allowing you modularize, and reuse any part of your web server.&lt;&#x2F;p&gt;
&lt;p&gt;Let me show you what I mean. Suppose you need to piece together data from several different places of a request before your have your domain object. Maybe an ID is a path segment, some verification is in a header, and other data is in the body.&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;let id = warp::path::param();
let verify = warp::header(&quot;my-app-header&quot;);
let body = warp::body::json();
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Each of these is a single &lt;code&gt;Filter&lt;&#x2F;code&gt;. We can combine them together with &lt;code&gt;and&lt;&#x2F;code&gt;, and then &lt;code&gt;map&lt;&#x2F;code&gt; the combined result to get a really natural feeling handler:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code class=&quot;rust&quot;&gt;let route = id
    .and(verify)
    .and(body)
    .map(|id: u64, ver: MyVerification, body: MyAppThingy| {
        &#x2F;&#x2F; ...
    });
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The above &lt;code&gt;route&lt;&#x2F;code&gt; is a &lt;em&gt;new&lt;&#x2F;em&gt; &lt;code&gt;Filter&lt;&#x2F;code&gt;. It has combined the results of the others, and provided their results naturally to the supplied function for &lt;code&gt;map&lt;&#x2F;code&gt;. Additionally, the types are enforced, cause well yea, this is Rust! If you were to change around one of the filters such that it returned a different type, the compiler would let you know that you need to adjust for that change.&lt;&#x2F;p&gt;
&lt;p&gt;This combining of results is &lt;strong&gt;smart&lt;&#x2F;strong&gt;: it is able to automatically toss results that are nothing (well, unit, so &lt;code&gt;()&lt;&#x2F;code&gt;), instead of passing worthless unit arguments to your handlers. So if you needed to combine a new &lt;code&gt;Filter&lt;&#x2F;code&gt; into this route that &lt;strong&gt;only&lt;&#x2F;strong&gt; checks some request values to determine if the request is valid, and otherwise returns nothing, your handler doesn&amp;rsquo;t need to change.&lt;&#x2F;p&gt;
&lt;p&gt;Besides dropping units, did you notice how even though multiple results were combined together, the &lt;code&gt;map&lt;&#x2F;code&gt; closure received each as individual arguments? This greatly improves development, since that means that &lt;code&gt;id.and(verify).and(body)&lt;&#x2F;code&gt; is actually exactly the same as &lt;code&gt;id.and(verify.and(body))&lt;&#x2F;code&gt;, but using just tuples would have changed around the signature of the results. The &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;warp&#x2F;0.1.*&#x2F;warp&#x2F;filters&#x2F;path&#x2F;&quot;&gt;routing documentation&lt;&#x2F;a&gt; shows more ways this is useful.&lt;&#x2F;p&gt;
&lt;p&gt;This concept powers everything in warp. Once you know you can match a single path segment via &lt;code&gt;warp::path(&quot;foo&quot;)&lt;&#x2F;code&gt;, then the idea of mounting doesn&amp;rsquo;t need to be something special. You just have your filter chain for a set of endpoints, and simply &amp;ldquo;and&amp;rdquo; it with a new path filter. If your &amp;ldquo;mount&amp;rdquo; location needs to also gate on headers, or something else, you can just &lt;code&gt;and&lt;&#x2F;code&gt; those &lt;code&gt;Filter&lt;&#x2F;code&gt;s as well.&lt;&#x2F;p&gt;
&lt;h3&gt;Built-in functionality&lt;&#x2F;h3&gt;
&lt;p&gt;As awesome as the &lt;code&gt;Filter&lt;&#x2F;code&gt; system is, if warp didn&amp;rsquo;t provide common web server features, it&amp;rsquo;d still be annoying to work with. Thus, warp provides a bunch of built-in &lt;code&gt;Filter&lt;&#x2F;code&gt;s, allowing you compose the functionality you need to descibe each route or resource or sub-whatever.&lt;&#x2F;p&gt;
&lt;ul&gt;&lt;li&gt;Path routing and parameter extraction&lt;&#x2F;li&gt;
&lt;li&gt;Header requirements and extraction&lt;&#x2F;li&gt;
&lt;li&gt;Query string deserialization&lt;&#x2F;li&gt;
&lt;li&gt;JSON and Form bodies&lt;&#x2F;li&gt;
&lt;li&gt;Static Files and Directories&lt;&#x2F;li&gt;
&lt;li&gt;Websockets&lt;&#x2F;li&gt;
&lt;li&gt;Access logging&lt;&#x2F;li&gt;
&lt;li&gt;And others, and more being added.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;warp&#x2F;0.1.*&#x2F;warp&#x2F;filters&#x2F;&quot;&gt;docs&lt;&#x2F;a&gt; explains how to use each, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;blob&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; go more in-depth on how to combine them to make actual web servers.&lt;&#x2F;p&gt;
&lt;h3&gt;tower-web&lt;&#x2F;h3&gt;
&lt;p&gt;A few months ago, there was mention of a web framework, &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@carllerche&#x2F;announcing-tower-a-library-for-writing-robust-network-services-with-rust-67273f052c40&quot;&gt;tower-web&lt;&#x2F;a&gt;, that&amp;rsquo;d be coming soon. The concept behind it is to provide a web framework built around &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tower-rs&#x2F;tower&quot;&gt;tower&amp;rsquo;s&lt;&#x2F;a&gt; &lt;code&gt;Service&lt;&#x2F;code&gt; trait. That is still coming. warp is being released right now for a couple reasons:&lt;&#x2F;p&gt;
&lt;ol&gt;&lt;li&gt;The &lt;code&gt;Filter&lt;&#x2F;code&gt; system is really awesome, as touched on above.&lt;&#x2F;li&gt;
&lt;li&gt;To explore some ideas before solidifying &lt;code&gt;tower&lt;&#x2F;code&gt; and &lt;code&gt;tower-web&lt;&#x2F;code&gt;. We&amp;rsquo;d like for warp to be able to make use of all the great &lt;code&gt;tower&lt;&#x2F;code&gt; middleware that already exists.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;&lt;p&gt;Expect to hear more about it, and how it fits with warp, soon!&lt;&#x2F;p&gt;
&lt;h3&gt;warp&lt;&#x2F;h3&gt;
&lt;p&gt;This is &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;warp&quot;&gt;warp&lt;&#x2F;a&gt; v0.1. It&amp;rsquo;s awesome. It&amp;rsquo;s fast. It&amp;rsquo;s safe. It&amp;rsquo;s correct. There&amp;rsquo;s &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;warp&quot;&gt;documentation&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;blob&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt;, and an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seanmonstar&#x2F;warp&#x2F;issues&quot;&gt;issue tracker&lt;&#x2F;a&gt; to file bugs and track progress of new &lt;code&gt;Filter&lt;&#x2F;code&gt;s that are coming (CORS almost ready). I want to thank those of you who tried warp out privately and sent feedback in, it was super valuable!&lt;&#x2F;p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
&lt;hr&gt;&lt;ol&gt;&lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
&lt;p&gt;I realize other languages also have nice type systems, but I didn&amp;rsquo;t usually want to pay the cost associated with those languages. Rust just gives me what I want.¬†&lt;a href=&quot;#fnref:1&quot; class=&quot;footnote-backref&quot; role=&quot;doc-backlink&quot;&gt;‚Ü©Ô∏é&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>My experience with the Rust 2018 preview</title>
		<published>2018-07-24T00:00:00+00:00</published>
		<updated>2018-07-24T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/my-experience-with-the-rust-2018-preview-9ac9ihh90bs6xrcalrflh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/my-experience-with-the-rust-2018-preview-9ac9ihh90bs6xrcalrflh/</id>
		<content type="html">&lt;p&gt;Recently, I wrote a little a side project to sign git commits without gpg. When I did this, I decided to use the Rust 2018 edition. I also transitioned an existing library from Rust 2015 to Rust 2018 to see how that tooling worked. I thought I‚Äôd write a blog post about my experience using the Rust 2018 preview and the state of things right now.
Module changes The main thing I noticed vividly was the new experience of the module system.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Signing my git commits without GPG</title>
		<published>2018-07-23T00:00:00+00:00</published>
		<updated>2018-07-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/signing-my-git-commits-without-gpg-0a2gryhnbnry6re3cj3zg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/signing-my-git-commits-without-gpg-0a2gryhnbnry6re3cj3zg/</id>
		<content type="html">&lt;p&gt;Unlike most git users, I try to sign my commits. Unfortunately, the only way to do this right now is to use PGP signatures, because that is all that git is able to integrate with. This has meant that in practice I have to use GPG if I want to sign my commits, an experience I do not relish. Last week, I wrote a program to replace GPG for that purpose.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a GPU-Accelerated Path Tracer in Rust - Part 3</title>
		<published>2018-07-19T18:30:00-06:00</published>
		<updated>2018-07-19T18:30:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-3-hpwycrltah9g8qvpavnga/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-3-hpwycrltah9g8qvpavnga/</id>
		<content type="html">&lt;p&gt;Hello! Welcome to my third and final post on my GPU-accelerated Path Tracer in Rust. In the last post, we implemented all of the logic necessary to build a true path tracer. Problem is, even on the GPU it‚Äôs terrifically slow. This post is (mostly) about fixing that.
But first, we need to fix a bug or two, because I goofed. &lt;em&gt;sad trombone&lt;&#x2F;em&gt;
Step -1: Fixing Bugs &#x2F;u&#x2F;anderslanglands on Reddit pointed out that, since I‚Äôm using Cosine-weighted Importance Sampling, I need to do some extra math to avoid biasing the results.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing updated Red Hat Developer Studio and Container Development Kit</title>
		<published>2018-07-18T16:14:21+00:00</published>
		<updated>2018-07-18T16:14:21+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-updated-red-hat-developer-studio-and-container-development-kit-c2onl28mxv2m1ik6wkoce/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-updated-red-hat-developer-studio-and-container-development-kit-c2onl28mxv2m1ik6wkoce/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Artifact 2.0 Rust Full Stack Web And Cli Application</title>
		<published>2018-07-16T00:00:00+00:00</published>
		<updated>2018-07-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/artifact-2-0-rust-full-stack-web-and-cli-application-sszqwryepa9bwxkptbxzk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/artifact-2-0-rust-full-stack-web-and-cli-application-sszqwryepa9bwxkptbxzk/</id>
		<content type="html">&lt;p&gt;After at least 6 months of effort (and interruptions‚Ä¶ so many interruptions)
I have finally completed the complete rewrite of artifact ‚Äì including
rewriting the Web UI to be in rust compiled into web assembly. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&#x2F;releases&quot;&gt;2.0 is
complete and you can download it here (for linux only
ATM&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;p&gt;This release spans a huge amount of effort. The TLDR version:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;I felt like I needed a cohesive CLI SDK and so I created the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-crates&#x2F;ergo&quot;&gt;ergo&lt;&#x2F;a&gt; crate. This included several
other crates created by me:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;path_abs&quot;&gt;path_abs&lt;&#x2F;a&gt; for better path handling.&lt;&#x2F;li&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;std_prelude&quot;&gt;std_prelude&lt;&#x2F;a&gt; for glob importing what I need.&lt;&#x2F;li&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;termstyle&quot;&gt;termstyle&lt;&#x2F;a&gt; for cleaner terminal styles.&lt;&#x2F;li&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;taken&quot;&gt;taken&lt;&#x2F;a&gt; for taking ownership.&lt;&#x2F;li&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;stfu8&quot;&gt;stfu8&lt;&#x2F;a&gt; for serializing&#x2F;deserializing
arbitrary bytes that are ‚Äúmostly‚Äù utf8 compliant (i.e. paths).&lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
  &lt;&#x2F;li&gt;
  &lt;li&gt;I used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DenisKolodin&#x2F;yew&quot;&gt;yew&lt;&#x2F;a&gt; for developing the frontend. I ended up
contributing a fair amount to both yew and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;koute&#x2F;stdweb&quot;&gt;stdweb&lt;&#x2F;a&gt; but
these frameworks were &lt;em&gt;surprisingly stable&lt;&#x2F;em&gt;. I also made a few crates:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;jrpc&quot;&gt;jrpc&lt;&#x2F;a&gt;: for easily creating JSON-RPC
requests and handling responses.&lt;&#x2F;li&gt;
      &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;yew_simple&quot;&gt;yew_simple&lt;&#x2F;a&gt;: a simpler (in my
opinion) imlementation of several yew services. It is important to note
that yew is flexible enough that this is even possible :)&lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
  &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;What I ended up with is the first (to my knowledge) full stack application in
rust that is more than a toy. Artifact is a reasonably complex piece of software,
and rust delivers its promises of speed and stability even at the cutting edge of
the web.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-rewrite-everything&quot;&gt;Why Rewrite Everything?&lt;&#x2F;h2&gt;
&lt;p&gt;The first question is probly why I decided a complete rewrite was necessary.
There are two answers: for fun and because I initially wrote artifact when I
was just learning rust for the first time and it &lt;em&gt;showed&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I wanted to write artifact ‚Äúthe right way‚Äù ‚Äì using standardized libraries and
split into several reusable crates. However, the standardized those libraries
didn‚Äôt really exist yet (or at least they weren‚Äôt cohesive) so I went about
building ergo. It was my way of giving back to the fantastic rust
community :)&lt;&#x2F;p&gt;
&lt;p&gt;The other reasons to rewrite were:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Speed: I wanted to make the implementation completely parallel, and I did.
It is &lt;em&gt;blazingly&lt;&#x2F;em&gt; fast now.&lt;&#x2F;li&gt;
  &lt;li&gt;Simplicity: the filesystem interface now has an API which acts like a CRUD
database. You simply give it a list of operations (create&#x2F;modify&#x2F;delete) and
it makes sure they are valid and consistent and performs them. This made
implementing the CLI and Server layers trivial, as they could both use this
simple interface.&lt;&#x2F;li&gt;
  &lt;li&gt;New Features: I added several new features that the old library made
difficult to add and test.
    &lt;ul&gt;
      &lt;li&gt;Sub Artifacts: you can add sub-artifacts using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[[.subart]]&lt;&#x2F;code&gt; syntax in the
text of any artifact, making it possible to split up the definition
of how to implement the artifact in source code. This also includes
test subarts (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[[.tst-subart]]&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
      &lt;li&gt;Markdown format: the default way to specify artifacts is now using
an extended form of commonmark markdown.&lt;&#x2F;li&gt;
      &lt;li&gt;The docs (including the Simple Quality book) are now distributed directly
with the web app.&lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;
  &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;how-was-wasm--yew&quot;&gt;How was WASM &#x2F; yew?&lt;&#x2F;h2&gt;
&lt;p&gt;Rewriting the frontend in rust using yew (and compiling to webassembly) was
truly fun and exciting. There was definitely a few areas that needed
improvement; and being willing to contribute to fix your own issues was
&lt;em&gt;critical&lt;&#x2F;em&gt; with the ecosystem where it is at now ‚Äì but the responsiveness of
the rust developers has never ceased to amaze me.&lt;&#x2F;p&gt;
&lt;p&gt;Probably the most amazing thing about writing your whole stack in a single
langauge is code reuse. I have a single crate, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;artifact-ser&lt;&#x2F;code&gt; with the
serialization datatypes and logic that can be used anywhere in the stack.
This allows me to implement code once and use it anywhere ‚Äì a benefit
that can seriously not be overstated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;I love rust, it is definitely my favorite language at the moment. Writing
a full stack application in pure rust has been an amazing experience.&lt;&#x2F;p&gt;
&lt;p&gt;The highlights however are definitely my interactions with the community. After
my &lt;a href=&quot;https:&#x2F;&#x2F;vitiral.github.io&#x2F;2018&#x2F;01&#x2F;17&#x2F;rust2018-and-the-great-cli-awakening.htm&quot;&gt;Rust and the Great CLI
Awakening&lt;&#x2F;a&gt;
blog post I was invited to be on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;cli-wg&quot;&gt;CLI Working
Group&lt;&#x2F;a&gt;. Unfortunately, that
pulled too much of my time away from rewriting artifact so I had to drop out.
However, my experience there and with the WASM folks has been nothing but
positive. Its been said before and I‚Äôll say it again: Rust has a great
community!&lt;&#x2F;p&gt;
&lt;p&gt;There is still much work to be done for artifact. For one thing I need to
figure out how to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo-web&lt;&#x2F;code&gt; in CI for mac and windows so that I can
distrubute artifact for those platforms. I also need to finish end to end
testing (including using frontend testing using rust, more on that later!).&lt;&#x2F;p&gt;
&lt;p&gt;However, one of the primary distractions over the last several months has
been interviewing at Google‚Ä¶ and the distractions paid off! I will be
starting as a Test Engineer at Google working on &lt;a href=&quot;http:&#x2F;&#x2F;fortune.com&#x2F;2018&#x2F;05&#x2F;07&#x2F;volvo-google-assistant-cars&#x2F;&quot;&gt;Android
Auto&lt;&#x2F;a&gt;. This is
super exciting, but will not leave a lot of time for working on artifact.
Therefore this blog post is basically also a notice that I will be on haitus
for the next several months as I get up to speed on everything Googly.&lt;&#x2F;p&gt;
&lt;p&gt;If you find artifact valuable, please leave
&lt;a href=&quot;https:&#x2F;&#x2F;vitiral.github.io&#x2F;artifact&#x2F;docs&#x2F;Feedback.html&quot;&gt;feedback&lt;&#x2F;a&gt;. Help
in maintaining it would also be much appreciated :).&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a GPU-Accelerated Path Tracer in Rust - Part 2</title>
		<published>2018-07-12T19:00:00-06:00</published>
		<updated>2018-07-12T19:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-2-0ngo4m1jcug5krzeoyawh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-2-0ngo4m1jcug5krzeoyawh/</id>
		<content type="html">&lt;p&gt;Hello, and welcome to part two of my series on writing a GPU-accelerated path tracer in Rust. I‚Äôd meant to have this post up sooner, but nothing ruins my productivity quite like Games Done Quick. I‚Äôm back now, though, so it‚Äôs time to turn the GPU ray-tracer from the last post into a real path tracer.
Tracing Paths As mentioned last time, Path Tracing is an extension to Ray Tracing which attempts to simulate global illumination.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a GPU-Accelerated Path Tracer in Rust - Part 1</title>
		<published>2018-06-21T19:00:00-06:00</published>
		<updated>2018-06-21T19:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-1-fqdgige-axgdbhnbs2-tx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-gpu-accelerated-path-tracer-in-rust-part-1-fqdgige-axgdbhnbs2-tx/</id>
		<content type="html">&lt;p&gt;Well, it‚Äôs that time again. This is the start of a second series of articles on raytracing in Rust following on from my previous series. This time, I‚Äôll be doing all of the rendering on a GPU using Accel - see my previous post on Accel. I thought this would be a good project for learning about GPU programming, see.
Second, this time I want to write a path tracer, rather than a raytracer.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Running Rust on the GPU with Accel</title>
		<published>2018-06-14T19:00:00-06:00</published>
		<updated>2018-06-14T19:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/running-rust-on-the-gpu-with-accel-oqvpx0j8s2g1bbouli3jw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/running-rust-on-the-gpu-with-accel-oqvpx0j8s2g1bbouli3jw/</id>
		<content type="html">&lt;p&gt;NOTE: Much of what I discuss below is no longer accurate.
For the past month or so, I‚Äôve been working on a follow-up to my series on Writing a Raytracer in Rust. This time around, I‚Äôll be talking about writing a GPU-accelerated Path Tracer. As always, I‚Äôm writing it in Rust - including the GPU kernel code. Compiling Rust for GPUs at this point is difficult and error-prone, so I thought it would be good to start with some documentation on that aspect of the problem before diving into path tracing.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Async Methods II: object safety</title>
		<published>2018-06-04T00:00:00+00:00</published>
		<updated>2018-06-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-methods-ii-object-safety-wjzqwkdkp11ylapf8a8wc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-methods-ii-object-safety-wjzqwkdkp11ylapf8a8wc/</id>
		<content type="html">&lt;p&gt;Last time, we introduced the idea of async methods, and talked about how they would be implemented: as a kind of anonymous associated type on the trait that declares the method, which corresponds to a different, anonymous future type for each implementation of that method. Starting this week we‚Äôre going to look at some of the implications of that. The first one we‚Äôre going to look at is object safety.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 107</title>
		<published>2018-06-03T00:00:00+00:00</published>
		<updated>2018-06-03T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-107-ujipbalbjmzot2kpaszno/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-107-ujipbalbjmzot2kpaszno/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing important enough.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;projects&#x2F;1&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fkjogu&quot;&gt;@fkjogu&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50342&quot;&gt;round-off error in &lt;code class=&quot;highlighter-rouge&quot;&gt;.mod_euc()&lt;&#x2F;code&gt;-method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50143&quot;&gt;deprecation lint for duplicated &lt;code class=&quot;highlighter-rouge&quot;&gt;macro_export&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt; and stabilize &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50911&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;use_extern_macros&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50852&quot;&gt;doc comment to hiding portions of code example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ogham&quot;&gt;@ogham&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51156&quot;&gt;Vec‚Äôs particular IntoIter behaviour&lt;&#x2F;a&gt;, mentioned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51158&quot;&gt;spec and indented blocks in doctest docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51111&quot;&gt;to the rustdoc attribute where intralink resolution failed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;teiesti&quot;&gt;@teiesti&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51183&quot;&gt;rustdoc book to suggest using Termination trait instead of hidden ‚Äòfoo‚Äô function&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;@kornelski&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51081&quot;&gt;String, not &amp;amp;str in some collection examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;avdv&quot;&gt;@avdv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51255&quot;&gt;confusing error message for sub_instant&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51261&quot;&gt;RELEASES.md for 1.27.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cmdd&quot;&gt;@cmdd&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50296&quot;&gt;error message for using &amp;gt;= 65535 hashes for raw string literal escapes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50617&quot;&gt;extern prelude failure in rustdoc&lt;&#x2F;a&gt;, introduce &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51140&quot;&gt;the #[doc(keyword=‚Äù‚Äù)] attribute for documenting keywords&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51256&quot;&gt;crate-name option in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50682&quot;&gt;lint for multiple associated types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50919&quot;&gt;more context for what the {f32,f64}::EPSILON values represent&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51312&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;, reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51124&quot;&gt;{ptr,mem}::replace docs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51127&quot;&gt;doc link from discriminant struct to function&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidtwco&quot;&gt;@davidtwco&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50892&quot;&gt;rustdoc documentation to compiler docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simartin&quot;&gt;@simartin&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50914&quot;&gt;error diagnostic with missing commas after struct fields&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;d-e-s-o&quot;&gt;@d-e-s-o&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50913&quot;&gt;typo in cell.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50875&quot;&gt;‚Äúshort form‚Äù doc(cfg) printing even when combined with other conditionals in rustdoc&lt;&#x2F;a&gt; and hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51011&quot;&gt;macro export statements from docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51313&quot;&gt;type name in E0599 enum variant suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;evincarofautumn&quot;&gt;@evincarofautumn&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51291&quot;&gt;typos of ‚Äòambiguous‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51272&quot;&gt;feature flag from fs::read_to_string example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50879&quot;&gt;naming conventions for new lints&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crlf0710&quot;&gt;@crlf0710&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51152&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;if and only if&lt;&#x2F;code&gt; in the definition dox of &lt;code class=&quot;highlighter-rouge&quot;&gt;Sync&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51135&quot;&gt;output on E0599 for assoc fn used as method&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51100&quot;&gt;using &lt;code class=&quot;highlighter-rouge&quot;&gt;as_ref&lt;&#x2F;code&gt; on some borrow errors [hack]&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;akoserwal&quot;&gt;@akoserwal&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51123&quot;&gt;build instructions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51134&quot;&gt;from_raw_parts docs for slices and strs to mention alignment requirement&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nickbabcock&quot;&gt;@nickbabcock&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51142&quot;&gt;additional use case for iter::inspect&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50846&quot;&gt;E0665&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51297&quot;&gt;run button style&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50953&quot;&gt;attributes for trait and methods as well&lt;&#x2F;a&gt;, stabilize &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51078&quot;&gt;Formatter alignment&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51262&quot;&gt;missing whitespace in num example&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;51193&quot;&gt;some style issues in rustdoc ‚Äúimplementations on Foreign types‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 5th of June 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Async Methods I: generic associated types</title>
		<published>2018-05-31T00:00:00+00:00</published>
		<updated>2018-05-31T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-methods-i-generic-associated-types-ybvm56xzunwgubcwltdqo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-methods-i-generic-associated-types-ybvm56xzunwgubcwltdqo/</id>
		<content type="html">&lt;p&gt;Async&#x2F;await continues to move along swimmingly. We‚Äôve accepted an RFC describing how the async&#x2F;await syntax will work in Rust, and work is underway on implementing support for it in the compiler. We‚Äôre hopeful that users will be able to start experimenting with the syntax on nightly by early July.
The RFC for async&#x2F;await didn‚Äôt address one important thing: async methods. It is very important for people defining libraries to be able to define traits that contain async functions, like this:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>for_each, map, and compiler warnings</title>
		<published>2018-05-30T13:09:14+00:00</published>
		<updated>2018-05-30T13:09:14+00:00</updated>
		<link href="https://kitallis.github.io/hades/for-each-map-and-compiler-warnings-chfq7ddeempmsxeooeass/" type="text/html"/>
		<id>https://kitallis.github.io/hades/for-each-map-and-compiler-warnings-chfq7ddeempmsxeooeass/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 106</title>
		<published>2018-05-21T00:00:00+00:00</published>
		<updated>2018-05-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-106-rz3bmlqcp9udrt7pvg4k8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-106-rz3bmlqcp9udrt7pvg4k8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Some improvements on JS size are being worked on. More to come soon!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;projects&#x2F;1&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mulkieran&quot;&gt;@mulkieran&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50255&quot;&gt;some documentation fixes for the Write trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fkjogu&quot;&gt;@fkjogu&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50342&quot;&gt;round-off error in &lt;code class=&quot;highlighter-rouge&quot;&gt;.mod_euc()&lt;&#x2F;code&gt;-method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50143&quot;&gt;deprecation lint for duplicated &lt;code class=&quot;highlighter-rouge&quot;&gt;macro_export&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50682&quot;&gt;lint for multiple associated types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50919&quot;&gt;more context for what the {f32,f64}::EPSILON values represent&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidtwco&quot;&gt;@davidtwco&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50892&quot;&gt;rustdoc documentation to compiler docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50852&quot;&gt;doc comment to hiding portions of code example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;simartin&quot;&gt;@simartin&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50914&quot;&gt;error diagnostic with missing commas after struct fields&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;d-e-s-o&quot;&gt;@d-e-s-o&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50913&quot;&gt;typo in cell.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50875&quot;&gt;‚Äúshort form‚Äù doc(cfg) printing even when combined with other conditionals in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50617&quot;&gt;extern prelude failure in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50846&quot;&gt;E0665&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50669&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#![doc(passes, plugins, no_default_passes)]&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50541&quot;&gt;most (e)println! statements with structured warnings&#x2F;errors in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50691&quot;&gt;support for pub(restricted) in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adevore&quot;&gt;@adevore&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50624&quot;&gt;example writing a &amp;amp;str for fs::write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanxiyn&quot;&gt;@sanxiyn&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50594&quot;&gt;the man page with additional ‚Äìprint options&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50898&quot;&gt;UnsafeCell doc typos and minor flow improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50719&quot;&gt;incorrect statement about return value for Iterator::zip&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robinkrahl&quot;&gt;@robinkrahl&lt;&#x2F;a&gt; reordered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50858&quot;&gt;description for snippets in rustdoc documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shamiao&quot;&gt;@shamiao&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50797&quot;&gt;a typo in signed-integer::from_str_radix()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50728&quot;&gt;rustdoc panic with &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;&#x2F;code&gt; in type parameters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50259&quot;&gt;some rustdoc improvements&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50632&quot;&gt;minification process&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50533&quot;&gt;auto-impl for primitive type&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50752&quot;&gt;missing error codes in libsyntax-ext asm&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 22nd of May 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Post. 5: What I‚Äôve Been Up To</title>
		<published>2018-05-15T14:49:31+00:00</published>
		<updated>2018-05-15T14:49:31+00:00</updated>
		<link href="https://kitallis.github.io/hades/post-5-what-i-ve-been-up-to-4e0dzwdxsixl-ohcnld8m/" type="text/html"/>
		<id>https://kitallis.github.io/hades/post-5-what-i-ve-been-up-to-4e0dzwdxsixl-ohcnld8m/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 105</title>
		<published>2018-05-13T00:00:00+00:00</published>
		<updated>2018-05-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-105-04cocbollmv4g4ciulekc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-105-04cocbollmv4g4ciulekc/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Some improvements on JS size are being worked on. More to come soon!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;projects&#x2F;1&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;da-x&quot;&gt;@da-x&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49898&quot;&gt;scope names in diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mulkieran&quot;&gt;@mulkieran&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50255&quot;&gt;some documentation fixes for the Write trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fkjogu&quot;&gt;@fkjogu&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50342&quot;&gt;round-off error in &lt;code class=&quot;highlighter-rouge&quot;&gt;.mod_euc()&lt;&#x2F;code&gt;-method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50143&quot;&gt;deprecation lint for duplicated &lt;code class=&quot;highlighter-rouge&quot;&gt;macro_export&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50669&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#![doc(passes, plugins, no_default_passes)]&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50541&quot;&gt;most (e)println! statements with structured warnings&#x2F;errors in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50682&quot;&gt;lint for multiple associated types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50691&quot;&gt;support for pub(restricted) in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adevore&quot;&gt;@adevore&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50624&quot;&gt;example writing a &amp;amp;str for fs::write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanxiyn&quot;&gt;@sanxiyn&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50594&quot;&gt;the man page with additional ‚Äìprint options&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50259&quot;&gt;some rustdoc improvements&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50617&quot;&gt;extern prelude failure in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50632&quot;&gt;minification process&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ibabushkin&quot;&gt;@ibabushkin&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49711&quot;&gt;auto trait handling in librustdoc to be accessible from librustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rizakrko&quot;&gt;@rizakrko&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50161&quot;&gt;missing implementation hint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49988&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Result&amp;lt;!, E&amp;gt;&lt;&#x2F;code&gt; in never docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50476&quot;&gt;crazy suggestion for unreachable braced pub-use&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leodasvacas&quot;&gt;@leodasvacas&lt;&#x2F;a&gt; improve &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50536&quot;&gt;error reporting in Copy derive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Screwtapello&quot;&gt;@Screwtapello&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50602&quot;&gt;canonicalize docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glandium&quot;&gt;@glandium&lt;&#x2F;a&gt; restored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50591&quot;&gt;RawVec::reserve* documentation&lt;&#x2F;a&gt; and cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50527&quot;&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; in a raw_vec test&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ExpHP&quot;&gt;@ExpHP&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50588&quot;&gt;‚ÄúSee also‚Äù disambiguation links for primitive types to top&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50572&quot;&gt;in the docs that &lt;code class=&quot;highlighter-rouge&quot;&gt;mul_add&lt;&#x2F;code&gt; is not always faster&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50511&quot;&gt;some explanations for #[must_use]&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49523&quot;&gt;RELEASES.md for 1.26.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; prevented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50305&quot;&gt;infinite recursion of modules in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50432&quot;&gt;rustdoc pathes search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 15th of May 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>on the origin of rustaceans</title>
		<published>2018-05-11T00:00:00-06:00</published>
		<updated>2018-05-11T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/on-the-origin-of-rustaceans-cyc-zpqfrddfeyxck9xno/" type="text/html"/>
		<id>https://kitallis.github.io/hades/on-the-origin-of-rustaceans-cyc-zpqfrddfeyxck9xno/</id>
		<content type="html">&lt;p&gt;(full title: &lt;em&gt;‚Äúon the origin of rustaceans by means of viral community, or the preservation of
contributor growth in the struggle for maintenance‚Äù&lt;&#x2F;em&gt;)&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 104</title>
		<published>2018-05-06T00:00:00+00:00</published>
		<updated>2018-05-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-104-mckrl7ztvbkw01dffhg0k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-104-mckrl7ztvbkw01dffhg0k/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Some improvements on JS size are being worked on. More to come soon!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;da-x&quot;&gt;@da-x&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49898&quot;&gt;scope names in diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ibabushkin&quot;&gt;@ibabushkin&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49711&quot;&gt;auto trait handling in librustdoc to be accessible from librustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rizakrko&quot;&gt;@rizakrko&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50161&quot;&gt;missing implementation hint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mulkieran&quot;&gt;@mulkieran&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50255&quot;&gt;some documentation fixes for the Write trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50465&quot;&gt;missing Wrapping methods&lt;&#x2F;a&gt; and mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49988&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Result&amp;lt;!, E&amp;gt;&lt;&#x2F;code&gt; in never docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;@nikomatsakis&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50440&quot;&gt;single-use and zero-use lifetime lints&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50476&quot;&gt;crazy suggestion for unreachable braced pub-use&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fkjogu&quot;&gt;@fkjogu&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50342&quot;&gt;round-off error in &lt;code class=&quot;highlighter-rouge&quot;&gt;.mod_euc()&lt;&#x2F;code&gt;-method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, prevented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50305&quot;&gt;infinite recursion of modules in rustdoc&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50259&quot;&gt;some rustdoc improvements&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50432&quot;&gt;rustdoc pathes search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50204&quot;&gt;enum for approximate suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;z4v1er&quot;&gt;@z4v1er&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50217&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;@kornelski&lt;&#x2F;a&gt; buried &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50163&quot;&gt;Error::description()&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50441&quot;&gt;more helpful formatting string&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50360&quot;&gt;wordings of the &lt;code class=&quot;highlighter-rouge&quot;&gt;unstable_name_collision&lt;&#x2F;code&gt; lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50470&quot;&gt;books for the next release&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50419&quot;&gt;nested &lt;code class=&quot;highlighter-rouge&quot;&gt;impl Trait&lt;&#x2F;code&gt;s in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50327&quot;&gt;correct unused field suggestion for nested struct patterns&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50317&quot;&gt;error message for #[repr(align=x)]&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehuss&quot;&gt;@ehuss&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50316&quot;&gt;some broken links in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pazzaz&quot;&gt;@Pazzaz&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50312&quot;&gt;more links in panic docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50326&quot;&gt;links to constants in external crates in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50302&quot;&gt;query search order check&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50320&quot;&gt;invalid path generation in rustdoc search&lt;&#x2F;a&gt; and renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50349&quot;&gt;‚Äúshow type declaration‚Äù to ‚Äúshow declaration‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 8th of May 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing GA for latest Software Collections, Developer Toolset, Compilers</title>
		<published>2018-05-03T13:00:41+00:00</published>
		<updated>2018-05-03T13:00:41+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-ga-for-latest-software-collections-developer-toolset-compilers-veu61hgrg5biagwg3tjyz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-ga-for-latest-software-collections-developer-toolset-compilers-veu61hgrg5biagwg3tjyz/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>New Tokio release, now with filesystem support</title>
		<published>2018-05-02T00:00:00+00:00</published>
		<updated>2018-05-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/new-tokio-release-now-with-filesystem-support-iwdf3h1muy4j6cxvtxq5c/" type="text/html"/>
		<id>https://kitallis.github.io/hades/new-tokio-release-now-with-filesystem-support-iwdf3h1muy4j6cxvtxq5c/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 103</title>
		<published>2018-04-29T00:00:00+00:00</published>
		<updated>2018-04-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-103-0z70-qnwbgyenuf0vrzp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-103-0z70-qnwbgyenuf0vrzp/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;We added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;settings into generated documentation&lt;&#x2F;a&gt; so you can have your own setup. We‚Äôll add more options soon to make rust documentation browsing more personal and comfortable for everyone!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;da-x&quot;&gt;@da-x&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49898&quot;&gt;scope names in diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ibabushkin&quot;&gt;@ibabushkin&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49711&quot;&gt;auto trait handling in librustdoc to be accessible from librustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49611&quot;&gt;edition-gated keywords&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50204&quot;&gt;enum for approximate suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;z4v1er&quot;&gt;@z4v1er&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50217&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rizakrko&quot;&gt;@rizakrko&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50161&quot;&gt;missing implementation hint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mulkieran&quot;&gt;@mulkieran&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50255&quot;&gt;some documentation fixes for the Write trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kornelski&quot;&gt;@kornelski&lt;&#x2F;a&gt; buried &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50163&quot;&gt;Error::description()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, prevented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50305&quot;&gt;infinite recursion of modules in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50302&quot;&gt;query search order check&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50259&quot;&gt;some rustdoc improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49829&quot;&gt;doc links to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::os&lt;&#x2F;code&gt; extension traits&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49707&quot;&gt;‚Äúthe Rustc book‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andjo403&quot;&gt;@andjo403&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50134&quot;&gt;rustdoc tests follow the jobserver limit of threads&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dmizuk&quot;&gt;@dmizuk&lt;&#x2F;a&gt; marked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49858&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ptr::Unique&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;#[doc(hidden)]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ralfbiedert&quot;&gt;@ralfbiedert&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50219&quot;&gt;missing &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;&#x2F;code&gt; in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;rustdoc settings menu&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50118&quot;&gt;search bar bug&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50284&quot;&gt;search load page failure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50229&quot;&gt;setting to go to item if there is only one result&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50231&quot;&gt;more doc aliases&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50214&quot;&gt;js improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 1st of May 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Fixing a Simple Lifetime Error in Rust</title>
		<published>2018-04-25T11:28:05+00:00</published>
		<updated>2018-04-25T11:28:05+00:00</updated>
		<link href="https://kitallis.github.io/hades/fixing-a-simple-lifetime-error-in-rust-j0l3jsqrbxf05-qvfe8ae/" type="text/html"/>
		<id>https://kitallis.github.io/hades/fixing-a-simple-lifetime-error-in-rust-j0l3jsqrbxf05-qvfe8ae/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>JARVIS - Notes on Rust Crates From Writing an RSS Reader</title>
		<published>2018-04-22T16:00:00-06:00</published>
		<updated>2018-04-22T16:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/jarvis-notes-on-rust-crates-from-writing-an-rss-reader-vm7gngbp-g-r27y-letks/" type="text/html"/>
		<id>https://kitallis.github.io/hades/jarvis-notes-on-rust-crates-from-writing-an-rss-reader-vm7gngbp-g-r27y-letks/</id>
		<content type="html">&lt;p&gt;Way back in the dim mists of history (back in university) I wrote myself a custom RSS reader in Java and called it JARVIS1. You see, I read a lot of webcomics. Like, a lot. Some webcomics provide RSS feeds, but some don‚Äôt, and as my collection grew it started to become a hassle to use Firefox‚Äôs live bookmarks to manage it all. Ultimately, I wrote up a quick Swing GUI to use as a single interface for keeping up with blogs and tracking which comics had published updates since the last time I‚Äôd checked2.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 102</title>
		<published>2018-04-22T00:00:00+00:00</published>
		<updated>2018-04-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-102-k-jiumi571e-gfuhmi3eh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-102-k-jiumi571e-gfuhmi3eh/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;We added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;settings into generated documentation&lt;&#x2F;a&gt; so you can have your own setup. We‚Äôll add more options soon to make rust documentation browsing more personal and comfortable for everyone!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49197&quot;&gt;to value in ‚Äúvalue assigned is never read‚Äù lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49829&quot;&gt;doc links to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::os&lt;&#x2F;code&gt; extension traits&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49707&quot;&gt;‚Äúthe Rustc book‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;da-x&quot;&gt;@da-x&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49898&quot;&gt;scope names in diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ibabushkin&quot;&gt;@ibabushkin&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49711&quot;&gt;auto trait handling in librustdoc to be accessible from librustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50147&quot;&gt;mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andjo403&quot;&gt;@andjo403&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50134&quot;&gt;rustdoc tests follow the jobserver limit of threads&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt;, stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;rustdoc settings menu&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50118&quot;&gt;search bar bug&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; ported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49956&quot;&gt;the -C option from rustc into rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49931&quot;&gt;incorrect span in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;mut&lt;&#x2F;code&gt; suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krk&quot;&gt;@krk&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50031&quot;&gt;E0015 message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50062&quot;&gt;rustdoc to x.py check&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Zoxc&quot;&gt;@Zoxc&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49950&quot;&gt;query cycle error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;50032&quot;&gt;private paths in all.html in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49542&quot;&gt;warning if a resolution failed&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49757&quot;&gt;specific never search&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49966&quot;&gt;multiple query search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 24th of April 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 101</title>
		<published>2018-04-15T00:00:00+00:00</published>
		<updated>2018-04-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-101-zberd6oozogp6rltvzzev/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-101-zberd6oozogp6rltvzzev/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;A(n) (super ultra giga incredibly) old issue has now a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;fix PR&lt;&#x2F;a&gt;: https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;18167&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt; and ported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49956&quot;&gt;the -C option from rustc into rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49197&quot;&gt;to value in ‚Äúvalue assigned is never read‚Äù lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; soft-deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49536&quot;&gt;the description() method of the Error trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49523&quot;&gt;RELEASES.md for 1.26.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49829&quot;&gt;doc links to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::os&lt;&#x2F;code&gt; extension traits&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49707&quot;&gt;‚Äúthe Rustc book‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;da-x&quot;&gt;@da-x&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49898&quot;&gt;scope names in diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49931&quot;&gt;incorrect span in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;mut&lt;&#x2F;code&gt; suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49743&quot;&gt;the difference between get_mut and into_mut for OccupiedEntry&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt;, stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49542&quot;&gt;warning if a resolution failed&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49757&quot;&gt;specific never search&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49966&quot;&gt;multiple query search&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49954&quot;&gt;rustdoc settings menu&lt;&#x2F;a&gt; and fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49670&quot;&gt;example indent&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49258&quot;&gt;suggestion of &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; for erroneous identifier &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49465&quot;&gt;docs for the test crate with the std docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48914&quot;&gt;compile-fail&#x2F;E0389 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;llogiq&quot;&gt;@llogiq&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49916&quot;&gt;Atomic::fetch_update docs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49915&quot;&gt;note for the special type inference handling for shift ops&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;memoryleak47&quot;&gt;@memoryleak47&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49863&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49504&quot;&gt;page to list all crate‚Äôs items&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 17th of April 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 100</title>
		<published>2018-04-08T00:00:00+00:00</published>
		<updated>2018-04-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-100-2w6nka87v2mftbaidaocu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-100-2w6nka87v2mftbaidaocu/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;üéâ It‚Äôs the hundredth post! üéâ&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49258&quot;&gt;suggestion of &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; for erroneous identifier &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49197&quot;&gt;to value in ‚Äúvalue assigned is never read‚Äù lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; soft-deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49536&quot;&gt;the description() method of the Error trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49523&quot;&gt;RELEASES.md for 1.26.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49465&quot;&gt;docs for the test crate with the std docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ecstatic-morse&quot;&gt;@ecstatic-morse&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49767&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48914&quot;&gt;compile-fail&#x2F;E0389 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49707&quot;&gt;‚Äúthe Rustc book‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt;, stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49504&quot;&gt;page to list all crate‚Äôs items&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49542&quot;&gt;warning if a resolution failed&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49757&quot;&gt;specific never search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; suppressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49064&quot;&gt;the default allow(unused) under ‚Äìdisplay-warnings in rustdoctest&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49451&quot;&gt;an ‚Äìedition flag to compile docs&#x2F;doctests with a certain edition in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49418&quot;&gt;network byte order conversions for integer &#x2F; IP address conversions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49532&quot;&gt;test for rustdoc ignore test&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49478&quot;&gt;escaped backslash in windows file not found message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49623&quot;&gt;mdbook&lt;&#x2F;a&gt; and re-wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49628&quot;&gt;the documentation index&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rolfvandekrol&quot;&gt;@rolfvandekrol&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49599&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49594&quot;&gt;some performance guidance to std::fs and std::io docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49335&quot;&gt;unneeded trait implementations titles&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49512&quot;&gt;support for variant and types fields for intra links&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49516&quot;&gt;missing anchor for union type fields&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49515&quot;&gt;targetted value background&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49510&quot;&gt;anchor position on fields&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49652&quot;&gt;anchors issue when everything is collapsed&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49603&quot;&gt;url for intra link provided method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 10th of April 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>New Red Hat compilers toolsets in beta: Clang and LLVM, GCC, Go, Rust</title>
		<published>2018-04-06T13:02:41+00:00</published>
		<updated>2018-04-06T13:02:41+00:00</updated>
		<link href="https://kitallis.github.io/hades/new-red-hat-compilers-toolsets-in-beta-clang-and-llvm-gcc-go-rust-g8d8ndsrbj-hr5l4p-5po/" type="text/html"/>
		<id>https://kitallis.github.io/hades/new-red-hat-compilers-toolsets-in-beta-clang-and-llvm-gcc-go-rust-g8d8ndsrbj-hr5l4p-5po/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Async &amp; Await in Rust: a full proposal</title>
		<published>2018-04-06T00:00:00+00:00</published>
		<updated>2018-04-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-in-rust-a-full-proposal-8qnhdq8h8n8gib8leslxr/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-in-rust-a-full-proposal-8qnhdq8h8n8gib8leslxr/</id>
		<content type="html">&lt;p&gt;I‚Äôm really excited to announce the culmination of much of our work over the last four months: a pair of RFCs for supporting async &amp;amp; await notation in Rust. This will be very impactful for Rust in the network services space. The change is proposed as two RFCs:
RFC #2394: which adds async &amp;amp; await notation to the language. RFC #2395: which moves a part of the futures library into std to support that syntax.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 99</title>
		<published>2018-04-01T00:00:00+00:00</published>
		<updated>2018-04-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-99-bw4zkhbe62z3fpreewiq8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-99-bw4zkhbe62z3fpreewiq8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;We‚Äôre back from the all-hands week in Berlin. A lot of things are coming. More information soon?&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; suppressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49064&quot;&gt;the default allow(unused) under ‚Äìdisplay-warnings in rustdoctest&lt;&#x2F;a&gt;, moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49451&quot;&gt;an ‚Äìedition flag to compile docs&#x2F;doctests with a certain edition in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krk&quot;&gt;@krk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49338&quot;&gt;submodule fetch instructions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49258&quot;&gt;suggestion of &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; for erroneous identifier &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49197&quot;&gt;to value in ‚Äúvalue assigned is never read‚Äù lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; soft-deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49536&quot;&gt;the description() method of the Error trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49418&quot;&gt;network byte order conversions for integer &#x2F; IP address conversions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49532&quot;&gt;test for rustdoc ignore test&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49478&quot;&gt;escaped backslash in windows file not found message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49523&quot;&gt;RELEASES.md for 1.26.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48407&quot;&gt;the ‚Äúleak check‚Äù in favor of ‚Äúuniverses‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49465&quot;&gt;docs for the test crate with the std docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49335&quot;&gt;unneeded trait implementations titles&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt;, stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49546&quot;&gt;short error format&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49504&quot;&gt;page to list all crate‚Äôs items&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49542&quot;&gt;warning if a resolution failed&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49512&quot;&gt;support for variant and types fields for intra links&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49516&quot;&gt;missing anchor for union type fields&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49515&quot;&gt;targetted value background&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49510&quot;&gt;anchor position on fields&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48932&quot;&gt;when types have OS-dependent sizes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pthariensflame&quot;&gt;@pthariensflame&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49351&quot;&gt;a minor message&#x2F;label formatting consistency fix&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chisophugis&quot;&gt;@chisophugis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49353&quot;&gt;confusing doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;scan&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49304&quot;&gt;support for universal_impl_trait in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49486&quot;&gt;a typo in RELEASES.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshtriplett&quot;&gt;@joshtriplett&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49473&quot;&gt;documentation for size of &lt;code class=&quot;highlighter-rouge&quot;&gt;Option&amp;lt;NonNull&amp;lt;T&amp;gt;&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; explicitly mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49446&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Option&lt;&#x2F;code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;&#x2F;code&gt; error message&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49452&quot;&gt;‚Äúlength‚Äù wording in &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::with_capacity&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49357&quot;&gt;hidden &lt;code class=&quot;highlighter-rouge&quot;&gt;foo&lt;&#x2F;code&gt; functions from doc examples; use &lt;code class=&quot;highlighter-rouge&quot;&gt;Termination&lt;&#x2F;code&gt; trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;@lukaslueg&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49426&quot;&gt;CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alercah&quot;&gt;@alercah&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49401&quot;&gt;missing ‚Äò?‚Äô to format grammar&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehuss&quot;&gt;@ehuss&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49399&quot;&gt;diagnostic colors on Windows 10 console&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49333&quot;&gt;impl assoc constant link not working&lt;&#x2F;a&gt;, proposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49223&quot;&gt;a variant if it is an enum for E0599&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49459&quot;&gt;primitive intra-links&lt;&#x2F;a&gt;, hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49412&quot;&gt;type declarations by default&lt;&#x2F;a&gt;, renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49445&quot;&gt;main theme into light theme&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49443&quot;&gt;tooltip position&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49405&quot;&gt;search appearance&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49429&quot;&gt;collapse toggle insertions on impl with docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49439&quot;&gt;trait implementation not collapsing docs&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49442&quot;&gt;text overlap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 3rd of April 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>New Timer implementation</title>
		<published>2018-03-30T00:00:00+00:00</published>
		<updated>2018-03-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/new-timer-implementation-hsm52emgkmd8ro2ekrkys/" type="text/html"/>
		<id>https://kitallis.github.io/hades/new-timer-implementation-hsm52emgkmd8ro2ekrkys/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>GNU Toolchain Update ‚Äì Spring 2018</title>
		<published>2018-03-26T10:55:28+00:00</published>
		<updated>2018-03-26T10:55:28+00:00</updated>
		<link href="https://kitallis.github.io/hades/gnu-toolchain-update-spring-2018-22aqo7ckemdpgroqu5ksg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/gnu-toolchain-update-spring-2018-22aqo7ckemdpgroqu5ksg/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 98</title>
		<published>2018-03-25T00:00:00+00:00</published>
		<updated>2018-03-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-98-y5bnxwj7-ozk-evmozx3q/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-98-y5bnxwj7-ozk-evmozx3q/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing interesting enough.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48914&quot;&gt;E0389 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; suppressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49064&quot;&gt;the default allow(unused) under ‚Äìdisplay-warnings in rustdoctest&lt;&#x2F;a&gt; and moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49286&quot;&gt;the ‚Äúimportant traits‚Äù button to beside the type in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48932&quot;&gt;when types have OS-dependent sizes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pthariensflame&quot;&gt;@pthariensflame&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49351&quot;&gt;a minor message&#x2F;label formatting consistency fix&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krk&quot;&gt;@krk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49338&quot;&gt;submodule fetch instructions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chisophugis&quot;&gt;@chisophugis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49353&quot;&gt;confusing doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;scan&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49304&quot;&gt;support for universal_impl_trait in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48946&quot;&gt;doc comments present after a particular syntax error cause an unhelpful error message to be output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49258&quot;&gt;suggestion of &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; for erroneous identifier &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49197&quot;&gt;to value in ‚Äúvalue assigned is never read‚Äù lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49333&quot;&gt;impl assoc constant link not working&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49335&quot;&gt;unneeded trait implementations titles&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48999&quot;&gt;repeat method on slice&lt;&#x2F;a&gt; and proposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49223&quot;&gt;a variant if it is an enum for E0599&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48759&quot;&gt;#[target_feature] attributes as doc(cfg) flags in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49028&quot;&gt;an ‚Äúunstable features‚Äù chapter to the rustdoc book&lt;&#x2F;a&gt; and whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49225&quot;&gt;every target feature for rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49104&quot;&gt;error message of inner attribute syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49105&quot;&gt;an example of lossy decoding to str::Utf8Error docs&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49161&quot;&gt;incorrect copy-paste for new &lt;code class=&quot;highlighter-rouge&quot;&gt;X?&lt;&#x2F;code&gt; in formatting strings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysiraichi&quot;&gt;@ysiraichi&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48834&quot;&gt;removing &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48909&quot;&gt;lint for type alias bounds&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49035&quot;&gt;epoch to edition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49318&quot;&gt;books for next release&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ordovicia&quot;&gt;@ordovicia&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49268&quot;&gt;diagnostics for ‚Äò..‚Äô pattern fragment not in the last position&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Centril&quot;&gt;@Centril&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49229&quot;&gt;format_args! &#x2F; Arguments&amp;lt;‚Äôa&amp;gt; behavior wrt. Display and Debug&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidtwco&quot;&gt;@davidtwco&lt;&#x2F;a&gt; hosted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49193&quot;&gt;compiler documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanxiyn&quot;&gt;@sanxiyn&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49169&quot;&gt;only-X test header&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49160&quot;&gt;the diagnostic spam when multiple fields are missing in pattern&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48374&quot;&gt;RELEASES.md for 1.25.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48596&quot;&gt;warning for invalid start of code blocks in rustdoc&lt;&#x2F;a&gt;, and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49029&quot;&gt;Atomic doc examples specific to each type&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49312&quot;&gt;IE11 search&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49189&quot;&gt;automatic urls with backticks&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49152&quot;&gt;events handling in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 27th of March 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await VI: 6 weeks of great progress</title>
		<published>2018-03-20T00:00:00+00:00</published>
		<updated>2018-03-20T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-vi-6-weeks-of-great-progress-kbsn72lco1lug15vtku-s/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-vi-6-weeks-of-great-progress-kbsn72lco1lug15vtku-s/</id>
		<content type="html">&lt;p&gt;It‚Äôs hard to believe its been almost 6 weeks since the last post I made about async&#x2F;await in Rust. So much has happened that these last several weeks have flown by. We‚Äôve made exceptionally good progress on solving the problem laid out in the first post of this series, and I want to document it all for everyone.
Future and the pinning API Last month I wrote an RFC called ‚ÄúStandard library API for immovable types‚Äù.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 97</title>
		<published>2018-03-18T00:00:00+00:00</published>
		<updated>2018-03-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-97-eucflwrcp4chxelsek2ti/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-97-eucflwrcp4chxelsek2ti/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing interesting enough.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48914&quot;&gt;E0389 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phansch&quot;&gt;@phansch&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48361&quot;&gt;more precise suggestion for non_upper_case_globals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48759&quot;&gt;#[target_feature] attributes as doc(cfg) flags in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49028&quot;&gt;an ‚Äúunstable features‚Äù chapter to the rustdoc book&lt;&#x2F;a&gt; and suppressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49064&quot;&gt;the default allow(unused) under ‚Äìdisplay-warnings in rustdoctest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49104&quot;&gt;error message of inner attribute syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48858&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; instead of erroneous &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;&#x2F;code&gt; on if&#x2F;while block parse failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49105&quot;&gt;an example of lossy decoding to str::Utf8Error docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48932&quot;&gt;when types have OS-dependent sizes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysiraichi&quot;&gt;@ysiraichi&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48834&quot;&gt;removing &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48909&quot;&gt;lint for type alias bounds&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;klnusbaum&quot;&gt;@klnusbaum&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48708&quot;&gt;better borrow checker error message&lt;&#x2F;a&gt; and renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49035&quot;&gt;epoch to edition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48596&quot;&gt;warning for invalid start of code blocks in rustdoc&lt;&#x2F;a&gt;, and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49029&quot;&gt;Atomic doc examples specific to each type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NovemberZulu&quot;&gt;@NovemberZulu&lt;&#x2F;a&gt; rephrased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48201&quot;&gt;UnsafeCell doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48480&quot;&gt;interfaction between File::set_len and file cursor&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehuss&quot;&gt;@ehuss&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48706&quot;&gt;crate name to ‚Äúmain function not found‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;focusaurus&quot;&gt;@focusaurus&lt;&#x2F;a&gt; saved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48631&quot;&gt;state of top-level collapse toggle widget in rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49042&quot;&gt;unnecessary backtick in error message E0307 (invalid self type)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; re-enabled &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;49090&quot;&gt;testing librustdoc&lt;&#x2F;a&gt; and tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48964&quot;&gt;code fences in the rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mark-i-m&quot;&gt;@mark-i-m&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48972&quot;&gt;librustdoc readme to rustc guide&lt;&#x2F;a&gt; and moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48971&quot;&gt;librustc_typeck READMEs to rustc guide&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Songbird0&quot;&gt;@Songbird0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48961&quot;&gt;example of use of assertions in rustdoc&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48853&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AddrParseError&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jsgf&quot;&gt;@jsgf&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48991&quot;&gt;usage message for ‚Äìremap-path-prefix&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; put &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48684&quot;&gt;back ui json check&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48898&quot;&gt;auto trait implementation section when empty&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48877&quot;&gt;missing urls&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48831&quot;&gt;blink when main theme is selected&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48970&quot;&gt;missing examples&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48954&quot;&gt;missing links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 20th of March 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Post. 4: Update on the RISC-V Toolchain</title>
		<published>2018-03-13T13:50:20+00:00</published>
		<updated>2018-03-13T13:50:20+00:00</updated>
		<link href="https://kitallis.github.io/hades/post-4-update-on-the-risc-v-toolchain-fn-s9wsant-vln0qe12pu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/post-4-update-on-the-risc-v-toolchain-fn-s9wsant-vln0qe12pu/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 96</title>
		<published>2018-03-11T00:00:00+00:00</published>
		<updated>2018-03-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-96-jfca8llusq-6gnc14oa05/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-96-jfca8llusq-6gnc14oa05/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing interesting enough.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48288&quot;&gt;setting associated type when type argument is given instead&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NovemberZulu&quot;&gt;@NovemberZulu&lt;&#x2F;a&gt; rephrased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48201&quot;&gt;UnsafeCell doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48480&quot;&gt;interfaction between File::set_len and file cursor&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48374&quot;&gt;RELEASES.md for 1.25.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehuss&quot;&gt;@ehuss&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48706&quot;&gt;crate name to ‚Äúmain function not found‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;focusaurus&quot;&gt;@focusaurus&lt;&#x2F;a&gt; saved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48631&quot;&gt;state of top-level collapse toggle widget in rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48914&quot;&gt;E0389 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phansch&quot;&gt;@phansch&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48361&quot;&gt;more precise suggestion for non_upper_case_globals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48759&quot;&gt;#[target_feature] attributes as doc(cfg) flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48559&quot;&gt;rustc ‚Äìexplain sentence&lt;&#x2F;a&gt;, put &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48684&quot;&gt;back ui json check&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48596&quot;&gt;warning for invalid start of code blocks in rustdoc&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48898&quot;&gt;auto trait implementation section when empty&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48877&quot;&gt;missing urls&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48831&quot;&gt;blink when main theme is selected&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zilbuz&quot;&gt;@zilbuz&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47574&quot;&gt;the used type variable when issuing a ‚Äúcan‚Äôt use type parameters from outer function‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christianpoveda&quot;&gt;@christianpoveda&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48474&quot;&gt;new Cell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48509&quot;&gt;slight modification to the as_ref example of std::option::Option&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flip1995&quot;&gt;@flip1995&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48432&quot;&gt;type for overflowing bin&#x2F;hex-literals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;@lukaslueg&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48403&quot;&gt;spelling s&#x2F;casted&#x2F;cast&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48326&quot;&gt;about ignored generic bounds in &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;scottmcm&quot;&gt;@scottmcm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48618&quot;&gt;docs and associated SUCCESS&#x2F;FAILURE for process::ExitCode&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Songbird0&quot;&gt;@Songbird0&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48856&quot;&gt;part of &lt;code class=&quot;highlighter-rouge&quot;&gt;line!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48857&quot;&gt;part of &lt;code class=&quot;highlighter-rouge&quot;&gt;column!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48738&quot;&gt;a potential cause raising &lt;code class=&quot;highlighter-rouge&quot;&gt;ParseIntError&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48511&quot;&gt;resource-suffix option for rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48507&quot;&gt;new warning for CStr::from_ptr&lt;&#x2F;a&gt;, multiple &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48755&quot;&gt;rustdoc fixes&lt;&#x2F;a&gt;, fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48789&quot;&gt;sidebar horizontal scroll&lt;&#x2F;a&gt; and raw &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48546&quot;&gt;string error note&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 13th of March 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>the union of parallel universes</title>
		<published>2018-03-09T00:00:00-07:00</published>
		<updated>2018-03-09T00:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/the-union-of-parallel-universes-ufci5kqb4vqsuv5rhro4w/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-union-of-parallel-universes-ufci5kqb4vqsuv5rhro4w/</id>
		<content type="html">&lt;p&gt;Rustdoc has a pretty powerful feature that feels pretty unknown. It doesn‚Äôt help that it‚Äôs currently
restricted by a nightly feature gate, but it‚Äôs still cool enough that I want to talk about it.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing the Tokio runtime</title>
		<published>2018-03-08T00:00:00+00:00</published>
		<updated>2018-03-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-the-tokio-runtime-vej2eqddcrb2su9xn2vid/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-the-tokio-runtime-vej2eqddcrb2su9xn2vid/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 95</title>
		<published>2018-03-04T00:00:00+00:00</published>
		<updated>2018-03-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-95-b6n49icb2-xpuayrtk7xf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-95-b6n49icb2-xpuayrtk7xf/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing interesting enough.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48288&quot;&gt;setting associated type when type argument is given instead&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NovemberZulu&quot;&gt;@NovemberZulu&lt;&#x2F;a&gt; rephrased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48201&quot;&gt;UnsafeCell doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zilbuz&quot;&gt;@zilbuz&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47574&quot;&gt;the used type variable when issuing a ‚Äúcan‚Äôt use type parameters from outer function‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christianpoveda&quot;&gt;@christianpoveda&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48474&quot;&gt;new Cell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48509&quot;&gt;slight modification to the as_ref example of std::option::Option&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flip1995&quot;&gt;@flip1995&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48432&quot;&gt;type for overflowing bin&#x2F;hex-literals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48480&quot;&gt;interfaction between File::set_len and file cursor&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;@lukaslueg&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48403&quot;&gt;spelling s&#x2F;casted&#x2F;cast&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48326&quot;&gt;about ignored generic bounds in &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48374&quot;&gt;RELEASES.md for 1.25.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;scottmcm&quot;&gt;@scottmcm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48618&quot;&gt;docs and associated SUCCESS&#x2F;FAILURE for process::ExitCode&lt;&#x2F;a&gt; and produced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48544&quot;&gt;better size_hints from Flatten &amp;amp; FlatMap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48709&quot;&gt;erroneous error message when checking impl trait params&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ehuss&quot;&gt;@ehuss&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48706&quot;&gt;crate name to ‚Äúmain function not found‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;focusaurus&quot;&gt;@focusaurus&lt;&#x2F;a&gt; remember &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48631&quot;&gt;state of top-level collapse toggle widget in rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48511&quot;&gt;resource-suffix option for rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48507&quot;&gt;new warning for CStr::from_ptr&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48559&quot;&gt;rustc ‚Äìexplain sentence&lt;&#x2F;a&gt;, put &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48684&quot;&gt;back ui json check&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48596&quot;&gt;warning for invalid start of code blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48338&quot;&gt;context for missing comma in match arm and if statement without block&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47894&quot;&gt;foldable impl blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48283&quot;&gt;readme for librustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;remexre&quot;&gt;@remexre&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48529&quot;&gt;docs for ASCII functions to no longer claim U+0021 is ‚Äò@‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mark-i-m&quot;&gt;@mark-i-m&lt;&#x2F;a&gt; splitted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48446&quot;&gt;E0404 to E0909; get rid of E0245&lt;&#x2F;a&gt; and started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48479&quot;&gt;moving to the rustc guide!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48328&quot;&gt;‚ÄúIt is an error to‚Ä¶‚Äù wording for zero-duration behaviors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Centril&quot;&gt;@Centril&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48365&quot;&gt;panics in Clone, PartialEq, PartialOrd, Ord for RefCell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48680&quot;&gt;production TOCs for doc markdown files&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;teiesti&quot;&gt;@teiesti&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48626&quot;&gt;link to rustc guide in README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pthariensflame&quot;&gt;@pthariensflame&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48603&quot;&gt;minor grammatical&#x2F;style fix in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added back &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48337&quot;&gt;rustc explain&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48381&quot;&gt;rustdoc theme securities&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48473&quot;&gt;auto trait impl rustdoc ice&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 6th of March 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Why Rust Has Macros</title>
		<published>2018-03-04T00:00:00+00:00</published>
		<updated>2018-03-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/why-rust-has-macros-tqfgc07nggifphldnzsio/" type="text/html"/>
		<id>https://kitallis.github.io/hades/why-rust-has-macros-tqfgc07nggifphldnzsio/</id>
		<content type="html">&lt;p&gt;When I recently told a coworker that Rust has macros, his first reaction was that this was bad. Previously I would have had the same reaction, but a part of what learning Rust has taught me is that macros don‚Äôt need to be bad. This post exists to help explain why that is, by diving into what problems macros solve, with a brief look at their downsides as well. In other words, this post is not a technical deep dive on how macros work, but focuses on the use cases for macros, and doesn‚Äôt require much knowledge about Rust to follow.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 94</title>
		<published>2018-02-25T00:00:00+00:00</published>
		<updated>2018-02-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-94-dydq2dfleq55hhhkc3rw0/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-94-dydq2dfleq55hhhkc3rw0/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Hoedown is finally being removed from rustdoc! I‚Äôll post the approval message from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; in here:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The preparations are complete. It is time‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Begone, demon of the foul C! Your presence is no longer wanted here! With this strike, I commit you to the depths of history, never to torment our fair land again!&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can see the pull request &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48274&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48288&quot;&gt;setting associated type when type argument is given instead&lt;&#x2F;a&gt; and provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48338&quot;&gt;context for missing comma in match arm and if statement without block&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47894&quot;&gt;foldable impl blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47731&quot;&gt;how paths are printed by error messages during bootstrap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NovemberZulu&quot;&gt;@NovemberZulu&lt;&#x2F;a&gt; rephrased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48201&quot;&gt;UnsafeCell doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48283&quot;&gt;readme for librustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zilbuz&quot;&gt;@zilbuz&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47574&quot;&gt;the used type variable when issuing a ‚Äúcan‚Äôt use type parameters from outer function‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;remexre&quot;&gt;@remexre&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48529&quot;&gt;docs for ASCII functions to no longer claim U+0021 is ‚Äò@‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christianpoveda&quot;&gt;@christianpoveda&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48474&quot;&gt;new Cell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mark-i-m&quot;&gt;@mark-i-m&lt;&#x2F;a&gt; splitted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48446&quot;&gt;E0404 to E0909; get rid of E0245&lt;&#x2F;a&gt; and started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48479&quot;&gt;moving to the rustc guide!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48328&quot;&gt;‚ÄúIt is an error to‚Ä¶‚Äù wording for zero-duration behaviors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48509&quot;&gt;slight modification to the as_ref example of std::option::Option&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Centril&quot;&gt;@Centril&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48365&quot;&gt;panics in Clone, PartialEq, PartialOrd, Ord for RefCell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flip1995&quot;&gt;@flip1995&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48432&quot;&gt;type for overflowing bin&#x2F;hex-literals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48480&quot;&gt;interfaction between File::set_len and file cursor&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaslueg&quot;&gt;@lukaslueg&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48403&quot;&gt;spelling s&#x2F;casted&#x2F;cast&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48326&quot;&gt;about ignored generic bounds in &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48374&quot;&gt;RELEASES.md for 1.25.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added back &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48337&quot;&gt;rustc explain&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48511&quot;&gt;resource-suffix option for rustdoc&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48442&quot;&gt;root-path&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48173&quot;&gt;error codes for libsyntax_ext&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48507&quot;&gt;new warning for CStr::from_ptr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48381&quot;&gt;rustdoc theme securities&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48473&quot;&gt;auto trait impl rustdoc ice&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; avoided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48246&quot;&gt;ICE in arg mistmatch error for tuple variants&lt;&#x2F;a&gt; and handled &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48392&quot;&gt;custom diagnostic for &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str + String&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaron1011&quot;&gt;@Aaron1011&lt;&#x2F;a&gt; generated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47833&quot;&gt;documentation for auto-trait impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47799&quot;&gt;span of visibility&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; informed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48198&quot;&gt;user where to give a type annotation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; unified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48312&quot;&gt;‚ÄòPlatform-specific behavior‚Äô documentation headings&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48314&quot;&gt;broken documentation link&lt;&#x2F;a&gt; and marked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48325&quot;&gt;doc examples w&#x2F; &lt;code class=&quot;highlighter-rouge&quot;&gt;extern&lt;&#x2F;code&gt; blocks as &lt;code class=&quot;highlighter-rouge&quot;&gt;ignore&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48106&quot;&gt;manual ‚Äúextern crate‚Äù statements outside automatic ‚Äúfn main‚Äùs in doctests in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48415&quot;&gt;crash when an external trait‚Äôs docs needs to import another trait in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alercah&quot;&gt;@alercah&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48273&quot;&gt;a warning to File about mutability&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;@matthiaskrgr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48275&quot;&gt;more typos found by codespell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; introduce &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48452&quot;&gt;UnpackedKind&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48335&quot;&gt;implied shortcut links for intra-rustdoc-links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dwijnand&quot;&gt;@dwijnand&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48499&quot;&gt;capitalisation in Path#file_name‚Äôs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48404&quot;&gt;the book to promote second edition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;withoutboats&quot;&gt;@withoutboats&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48386&quot;&gt;nonstandard_style alias for bad_style&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48438&quot;&gt;minor wording changes to drain_filter docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adeschamps&quot;&gt;@adeschamps&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48436&quot;&gt;a small grammar fix to docs for String::new()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ordovicia&quot;&gt;@ordovicia&lt;&#x2F;a&gt; take &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48397&quot;&gt;2^5 as examples in document of pow()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;redcape&quot;&gt;@redcape&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48360&quot;&gt;count usize link typo in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m0ppers&quot;&gt;@m0ppers&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48354&quot;&gt;missing link for read_line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48274&quot;&gt;hoedown from rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48194&quot;&gt;doc test command&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48382&quot;&gt;rustdoc test ICE&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 27th of February 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Post. 3: Phil Made an Updated Rust OS Blog</title>
		<published>2018-02-22T15:33:58+00:00</published>
		<updated>2018-02-22T15:33:58+00:00</updated>
		<link href="https://kitallis.github.io/hades/post-3-phil-made-an-updated-rust-os-blog-zdzrudk6lni5obni7nygn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/post-3-phil-made-an-updated-rust-os-blog-zdzrudk6lni5obni7nygn/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Failure 1.0.0 on March 15</title>
		<published>2018-02-22T00:00:00+00:00</published>
		<updated>2018-02-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/failure-1-0-0-on-march-15-jxt2rc-vuplizw-vrrwmx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/failure-1-0-0-on-march-15-jxt2rc-vuplizw-vrrwmx/</id>
		<content type="html">&lt;p&gt;I‚Äôm planning to release a 1.0.0 version of failure on March 15. Once this happens, I don‚Äôt plan to release any further breaking changes to the failure crate (though maybe someday in the distant future).
Breaking changes in 1.0 failure is in a somewhat unique position as being a significant part of the public API of other libraries that depend on it. Whether they use the Error struct or derive Fail for a custom error type, this becomes a part of the API they expose to other users.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 93</title>
		<published>2018-02-18T00:00:00+00:00</published>
		<updated>2018-02-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-93-o-clj-kgu6zqhe5yfd3ok/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-93-o-clj-kgu6zqhe5yfd3ok/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Hoedown is finally being removed from rustdoc! I‚Äôll post the approval message from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; in here:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The preparations are complete. It is time‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Begone, demon of the foul C! Your presence is no longer wanted here! With this strike, I commit you to the depths of history, never to torment our fair land again!&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can see the pull request &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48274&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt;, detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47763&quot;&gt;possibly non-Rust closure syntax during parse&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48288&quot;&gt;setting associated type when type argument is given instead&lt;&#x2F;a&gt; and avoidED &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48246&quot;&gt;ICE in arg mistmatch error for tuple variants&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47894&quot;&gt;foldable impl blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47731&quot;&gt;how paths are printed by error messages during bootstrap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaron1011&quot;&gt;@Aaron1011&lt;&#x2F;a&gt; generated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47833&quot;&gt;documentation for auto-trait impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47799&quot;&gt;span of visibility&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NovemberZulu&quot;&gt;@NovemberZulu&lt;&#x2F;a&gt; rephrased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48201&quot;&gt;UnsafeCell doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;csmoe&quot;&gt;@csmoe&lt;&#x2F;a&gt; informed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48198&quot;&gt;user where to give a type annotation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; unified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48312&quot;&gt;‚ÄòPlatform-specific behavior‚Äô documentation headings&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48314&quot;&gt;broken documentation link&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48305&quot;&gt;section about compiler-rt in COPYRIGHT&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48106&quot;&gt;manual ‚Äúextern crate‚Äù statements outside automatic ‚Äúfn main‚Äùs in doctests in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48283&quot;&gt;readme for librustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alercah&quot;&gt;@alercah&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48273&quot;&gt;a warning to File about mutability&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;@matthiaskrgr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48275&quot;&gt;more typos found by codespell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FraGag&quot;&gt;@FraGag&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48171&quot;&gt;documentation of Clone and Copy implementors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zilbuz&quot;&gt;@zilbuz&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47574&quot;&gt;the used type variable when issuing a ‚Äúcan‚Äôt use type parameters from outer function‚Äù error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48274&quot;&gt;hoedown from rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48194&quot;&gt;doc test command&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;antoyo&quot;&gt;@antoyo&lt;&#x2F;a&gt; greatly improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48152&quot;&gt;primitive docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47843&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Zteach&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47806&quot;&gt;color of struct link from #ff794d to #2dbfb8 for Rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;@matthiaskrgr&lt;&#x2F;a&gt; fixed typo &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48133&quot;&gt;endianess to endianness (this also changes function names!)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;@SergioBenitez&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48286&quot;&gt;contiguity of Vec‚Äôs elements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48260&quot;&gt;link to yield_now&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48095&quot;&gt;unit tests for rustdoc‚Äôs processing of doctests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacob-hughes&quot;&gt;@jacob-hughes&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48210&quot;&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;Sized&lt;&#x2F;code&gt; bound not implicit on trait‚Äôs implicit &lt;code class=&quot;highlighter-rouge&quot;&gt;Self&lt;&#x2F;code&gt; type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47286&quot;&gt;RELEASES.md for 1.24.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48033&quot;&gt;better warning for trying to cast non-u8 scalar to char&lt;&#x2F;a&gt;, rollup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48294&quot;&gt;of 8 pull requests&lt;&#x2F;a&gt; and fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48239&quot;&gt;condvar example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 20th of February 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 92</title>
		<published>2018-02-11T00:00:00+00:00</published>
		<updated>2018-02-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-92-v-tzaqv9zmo44guglzs-k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-92-v-tzaqv9zmo44guglzs-k/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The roadmap for 2018 is still in discussion. More information soon!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47843&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Zteach&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48138&quot;&gt;E0044 and message for &lt;code class=&quot;highlighter-rouge&quot;&gt;!Send&lt;&#x2F;code&gt; types&lt;&#x2F;a&gt; and detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47763&quot;&gt;possibly non-Rust closure syntax during parse&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47894&quot;&gt;foldable impl blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47731&quot;&gt;how paths are printed by error messages during bootstrap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaron1011&quot;&gt;@Aaron1011&lt;&#x2F;a&gt; generated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47833&quot;&gt;documentation for auto-trait impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47806&quot;&gt;color of struct link from #ff794d to #2dbfb8 for Rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;@matthiaskrgr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48133&quot;&gt;typo: endianess to endianness (this also changes function names!)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48033&quot;&gt;better warning for trying to cast non-u8 scalar to char&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47613&quot;&gt;filtering options to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47496&quot;&gt;documentation from doc(include) to analysis data&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47753&quot;&gt;rust book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47547&quot;&gt;the behaviour of infinite iterators on potentially-computable methods&lt;&#x2F;a&gt;, created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47854&quot;&gt;a directory for ‚Äìout-dir if it does not already exist&lt;&#x2F;a&gt; and warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47203&quot;&gt;when rustc output conflicts with existing directories&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47959&quot;&gt;rustdoc ICE on macros defined within functions&lt;&#x2F;a&gt; and bailed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48064&quot;&gt;early for linky things in intra-docs-links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47958&quot;&gt;shared file handler behavior of File::try_clone&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; declined &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47896&quot;&gt;to lint technically-unnecessary parens in function or method arguments inside of nested macros&lt;&#x2F;a&gt;, corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47922&quot;&gt;unused field pattern suggestions&lt;&#x2F;a&gt; and corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48028&quot;&gt;E0619 span re method call receivers whose type must be known&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47286&quot;&gt;RELEASES.md for 1.24.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthiaskrgr&quot;&gt;@matthiaskrgr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48107&quot;&gt;typo: substract -&amp;gt; subtract&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48120&quot;&gt;typos in src&#x2F;{bootstrap,ci,etc,lib{backtrace,core,fmt_macros}}&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48031&quot;&gt;typos in config.toml.example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48051&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt; ()&lt;&#x2F;code&gt; in cross crate inlined Fn bounds&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48020&quot;&gt;about more ignored bounds in type aliases&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Badel2&quot;&gt;@Badel2&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48026&quot;&gt;that associated constants prevent a trait from being made into an object&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48003&quot;&gt;info about generic impls in AsMut docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaystrictor&quot;&gt;@jaystrictor&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47999&quot;&gt;‚Äòthe this‚Äô in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47761&quot;&gt;tests for themes&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47810&quot;&gt;themes rendering issues on mobile&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47862&quot;&gt;const evaluation ICE in rustdoc&lt;&#x2F;a&gt; and hide &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;48080&quot;&gt;theme button under menu in mobile mode and fix top margin issue ‚Ä¶&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 13th of February 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await V: Getting back to the futures</title>
		<published>2018-02-08T00:00:00+00:00</published>
		<updated>2018-02-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-v-getting-back-to-the-futures-kg5jryuxjv3huujfiqvcu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-v-getting-back-to-the-futures-kg5jryuxjv3huujfiqvcu/</id>
		<content type="html">&lt;p&gt;Two posts ago I proposed a particular interface for shipping self-referential generators this year. Immediately after that, eddyb showed me a better interface, which I described in the next post. Now, to tie everything together, its time to talk about how we can integrate this into the futures ecosystem.
Starting point: this Generator API To begin, I want to document the generator API I‚Äôll be using in this post, which is roughly what followed from my previous post:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Investigating Performance Changes with git bisect</title>
		<published>2018-02-07T12:30:31+00:00</published>
		<updated>2018-02-07T12:30:31+00:00</updated>
		<link href="https://kitallis.github.io/hades/investigating-performance-changes-with-git-bisect-a1qnxsqd672jsv0-rdqcu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/investigating-performance-changes-with-git-bisect-a1qnxsqd672jsv0-rdqcu/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await IV: An Even Better Proposal</title>
		<published>2018-02-07T00:00:00+00:00</published>
		<updated>2018-02-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-iv-an-even-better-proposal-23c6itnsmqgfb0mwiv4cx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-iv-an-even-better-proposal-23c6itnsmqgfb0mwiv4cx/</id>
		<content type="html">&lt;p&gt;I did not plan to write this blog post. I thought that the fourth post in my series would explain how we could go from the generator API in my previous post to a futures API in which you don‚Äôt have to heap allocate every async call. But eddyb surprised me, and now I have to revisit the API in the previous post, because we can implement everything we need from immovability with a safe interface afterall.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Tokio Reform is Shipped and the Road to 0.2</title>
		<published>2018-02-07T00:00:00+00:00</published>
		<updated>2018-02-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/tokio-reform-is-shipped-and-the-road-to-0-2-vw-kdnmt4njpcsegio6xi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/tokio-reform-is-shipped-and-the-road-to-0-2-vw-kdnmt4njpcsegio6xi/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Criterion.rs v0.2 - HTML, Throughput Measurements, API Changes</title>
		<published>2018-02-05T07:00:00-06:00</published>
		<updated>2018-02-05T07:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/criterion-rs-v0-2-html-throughput-measurements-api-changes-0n-kc-ptyzmpnnt7-xnb/" type="text/html"/>
		<id>https://kitallis.github.io/hades/criterion-rs-v0-2-html-throughput-measurements-api-changes-0n-kc-ptyzmpnnt7-xnb/</id>
		<content type="html">&lt;p&gt;I‚Äôm pleased to announce the release of Criterion.rs v0.2, available today. Version 0.2 provides a number of new features including HTML reports and throughput measurements, fixes a handful of bugs, and adds a new, more powerful way to configure and construct your benchmarks. It also breaks backwards compatibility with the 0.1 versions in a number of small but important ways. Read on to learn more!
What is Criterion.rs? Criterion.rs is a statistics-driven benchmarking library for Rust.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await III: Moving Forward with Something Shippable</title>
		<published>2018-02-04T00:00:00+00:00</published>
		<updated>2018-02-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-iii-moving-forward-with-something-shippable-w6yec1jucd1ih4jercibq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-iii-moving-forward-with-something-shippable-w6yec1jucd1ih4jercibq/</id>
		<content type="html">&lt;p&gt;In the first post, we looked at the relationship between generators and a more general notion of self-references. In the second post, we narrowed down exactly what problem we need to solve to make generators work, and talked about some solutions that we‚Äôve considered but don‚Äôt feel like we could ship in the near future.
In the original post, I promised that I would have a near term solution by the end of this series.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 91</title>
		<published>2018-02-04T00:00:00+00:00</published>
		<updated>2018-02-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-91-ckbt4glzlvxjowkmmxk10/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-91-ckbt4glzlvxjowkmmxk10/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;This week was a big one: the whole new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47046&quot;&gt;url system&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47620&quot;&gt;multiple themes support&lt;&#x2F;a&gt; have been added in rustdoc!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47613&quot;&gt;filtering options to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47843&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Zteach&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47020&quot;&gt;error messages in the case of partial and collateral moves for NLL&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47093&quot;&gt;move related error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47496&quot;&gt;documentation from doc(include) to analysis data&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47753&quot;&gt;rust book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47547&quot;&gt;the behaviour of infinite iterators on potentially-computable methods&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47959&quot;&gt;rustdoc ICE on macros defined within functions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47958&quot;&gt;shared file handler behavior of File::try_clone&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47894&quot;&gt;foldable impl blocks in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47731&quot;&gt;how paths are printed by error messages during bootstrap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaron1011&quot;&gt;@Aaron1011&lt;&#x2F;a&gt; generated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47833&quot;&gt;documentation for auto-trait impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; declined &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47896&quot;&gt;to lint technically-unnecessary parens in function or method arguments inside of nested macros&lt;&#x2F;a&gt; and corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47922&quot;&gt;unused field pattern suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PramodBisht&quot;&gt;@PramodBisht&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47806&quot;&gt;color of struct link from #ff794d to #2dbfb8 for Rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47761&quot;&gt;tests for themes&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47810&quot;&gt;themes rendering issues on mobile&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47862&quot;&gt;const evaluation ICE in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47465&quot;&gt;space in suggestion &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt; in bindings&lt;&#x2F;a&gt;, tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47791&quot;&gt;presentation on lifetime trait mismatch&lt;&#x2F;a&gt;, minimized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47942&quot;&gt;weird spans involving macro context&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47829&quot;&gt;removing value from &lt;code class=&quot;highlighter-rouge&quot;&gt;break&lt;&#x2F;code&gt; when invalid&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47780&quot;&gt;line numbers and columns to error messages spanning multiple files&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jimmantooth&quot;&gt;@jimmantooth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47515&quot;&gt;punctuation and clarity&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vmx&quot;&gt;@vmx&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47916&quot;&gt;lang items box example code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;etaoins&quot;&gt;@etaoins&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47914&quot;&gt;char escaping in lexer messages&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47794&quot;&gt;ICE on const eval of union field&lt;&#x2F;a&gt; and avoided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47677&quot;&gt;underflow in render_source_line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47838&quot;&gt;correct casing for rename suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47839&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;Index&lt;&#x2F;code&gt; ops can panic on &lt;code class=&quot;highlighter-rouge&quot;&gt;HashMap&lt;&#x2F;code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeMap&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47855&quot;&gt;link title rendering with hoedown in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47951&quot;&gt;ugly hover in sidebar&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47876&quot;&gt;associated constants error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 6th of February 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Lesson. 0: Understanding the RISC-V Ecosystem &amp; Booting Your First Kernel</title>
		<published>2018-02-01T20:07:00+00:00</published>
		<updated>2018-02-01T20:07:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/lesson-0-understanding-the-risc-v-ecosystem-booting-your-first-kernel-opxi2lymm1e7xdi0cljas/" type="text/html"/>
		<id>https://kitallis.github.io/hades/lesson-0-understanding-the-risc-v-ecosystem-booting-your-first-kernel-opxi2lymm1e7xdi0cljas/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Calculator REPL Part 3: Evaluating the tokens</title>
		<published>2018-01-31T11:57:31+00:00</published>
		<updated>2018-01-31T11:57:31+00:00</updated>
		<link href="https://kitallis.github.io/hades/calculator-repl-part-3-evaluating-the-tokens-axv4wsihstcs6srh3uobv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/calculator-repl-part-3-evaluating-the-tokens-axv4wsihstcs6srh3uobv/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await II: Narrowing the Scope of the Problem</title>
		<published>2018-01-31T00:00:00+00:00</published>
		<updated>2018-01-31T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-ii-narrowing-the-scope-of-the-problem-vhfloaljc7zvgh3jhxeap/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-ii-narrowing-the-scope-of-the-problem-vhfloaljc7zvgh3jhxeap/</id>
		<content type="html">&lt;p&gt;Last time we talked about the broader problem that generators with references across yield points represent: self-referential structs. This time, I want to narrow in on the specific problem that needs to be solved to make generators work, and also discuss some ideas for solutions that I think are false starts.
(I still don‚Äôt have a proposal about what to do in this post, but it will come soon enough!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 90</title>
		<published>2018-01-28T00:00:00+00:00</published>
		<updated>2018-01-28T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-90-kg-elte99yi9iytls7ced/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-90-kg-elte99yi9iytls7ced/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;This week was a big one: the whole new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47046&quot;&gt;url system&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47620&quot;&gt;multiple themes support&lt;&#x2F;a&gt; have been added in rustdoc!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47613&quot;&gt;filtering options to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46961&quot;&gt;env flags &lt;code class=&quot;highlighter-rouge&quot;&gt;RUSTC_COLOR&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;RUSTC_ERROR_FORMAT&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47465&quot;&gt;space in suggestion &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt; in bindings&lt;&#x2F;a&gt;, tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47818&quot;&gt;error message when reborrowing &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;mut self&lt;&#x2F;code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47791&quot;&gt;presentation on lifetime trait mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt; and move &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46666&quot;&gt;Duration to libcore&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47020&quot;&gt;error messages in the case of partial and collateral moves for NLL&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47093&quot;&gt;move related error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47286&quot;&gt;RELEASES.md for 1.24.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47496&quot;&gt;documentation from doc(include) to analysis data&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47753&quot;&gt;rust book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47780&quot;&gt;line numbers and columns to error messages spanning multiple files&lt;&#x2F;a&gt; and documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47547&quot;&gt;the behaviour of infinite iterators on potentially-computable methods&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jimmantooth&quot;&gt;@jimmantooth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47515&quot;&gt;punctuation and clarity&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47761&quot;&gt;tests for themes&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47810&quot;&gt;themes rendering issues on mobile&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47247&quot;&gt;casting on numeric type error&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47144&quot;&gt;a custom error when moving arg outside of its closure&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47534&quot;&gt;private traits suggestions on missing method&lt;&#x2F;a&gt;, correctly &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47767&quot;&gt;formatted &lt;code class=&quot;highlighter-rouge&quot;&gt;extern crate&lt;&#x2F;code&gt; conflict resolution help&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47690&quot;&gt;at the ‚Äúhead‚Äù expression for E0277 on &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;&#x2F;code&gt; loops, point&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47691&quot;&gt;at unknown lang item attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; checked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47423&quot;&gt;for deadlinks from the summary during book generation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47046&quot;&gt;RFC 1946 - intra-rustdoc links&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47701&quot;&gt;intra-doc-links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroege&quot;&gt;@sdroege&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47632&quot;&gt;broken links to other slice functions in chunks&#x2F;chunks_mut&#x2F;exact_‚Ä¶&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PieterPenninckx&quot;&gt;@PieterPenninckx&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47595&quot;&gt;small improvements to the documentation of VecDeque&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;astraw&quot;&gt;@astraw&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47625&quot;&gt;doctests for BTreeSet to use BTreeSet (not BTreeMap)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47675&quot;&gt; methods from #[doc(masked)] crates from the search index in rustdoc&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47672&quot;&gt;when traits are auto traits in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;evelynmitchell&quot;&gt;@evelynmitchell&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47717&quot;&gt;invalid URL&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47620&quot;&gt;multiple themes support in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47512&quot;&gt;E0659 for ambiguous names&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47721&quot;&gt;experimental text display on default theme&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47686&quot;&gt;a few fixes for multiple themes support feature&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47667&quot;&gt;quoted search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 30th of January 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Post. 2: Whetting Your Appetite While You Wait</title>
		<published>2018-01-27T01:20:47+00:00</published>
		<updated>2018-01-27T01:20:47+00:00</updated>
		<link href="https://kitallis.github.io/hades/post-2-whetting-your-appetite-while-you-wait-zwtw-lgevljlpe-bfetcf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/post-2-whetting-your-appetite-while-you-wait-zwtw-lgevljlpe-bfetcf/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Async&#x2F;Await I: Self-Referential Structs</title>
		<published>2018-01-25T00:00:00+00:00</published>
		<updated>2018-01-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/async-await-i-self-referential-structs-bubhx5zceltqs5rtexian/" type="text/html"/>
		<id>https://kitallis.github.io/hades/async-await-i-self-referential-structs-bubhx5zceltqs5rtexian/</id>
		<content type="html">&lt;p&gt;This is the first in a series of blog posts about generators, async &amp;amp; await in Rust. By the end of this series, I will have a proposal for how we could expediently (within the next 12 months) bring generators, async &amp;amp; await to stable Rust, and resolve some of the most difficult ergonomics problems in the futures ecosystem.
But that proposal is still several posts away. Before we can get to a concrete proposition, we need to understand the scope &amp;amp; nature of the problem we need to solve.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 89</title>
		<published>2018-01-21T00:00:00+00:00</published>
		<updated>2018-01-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-89-q64wdj6v5pt53hyk4s0m8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-89-q64wdj6v5pt53hyk4s0m8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The hoedown -&amp;gt; pulldown migration moved forward by a step this last week: now the default renderer is pulldown.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47247&quot;&gt;casting on numeric type error&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47144&quot;&gt;a custom error when moving arg outside of its closure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47613&quot;&gt;filtering options to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46961&quot;&gt;env flags &lt;code class=&quot;highlighter-rouge&quot;&gt;RUSTC_COLOR&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;RUSTC_ERROR_FORMAT&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47534&quot;&gt;private traits suggestions on missing method&lt;&#x2F;a&gt; and included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47465&quot;&gt;space in suggestion &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt; in bindings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47020&quot;&gt;error messages in the case of partial and collateral moves for NLL&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47093&quot;&gt;move related error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; checked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47423&quot;&gt;for deadlinks from the summary during book generation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47046&quot;&gt;RFC 1946 - intra-rustdoc links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47286&quot;&gt;RELEASES.md for 1.24.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroege&quot;&gt;@sdroege&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47632&quot;&gt;broken links to other slice functions in chunks&#x2F;chunks_mut&#x2F;exact_‚Ä¶&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PieterPenninckx&quot;&gt;@PieterPenninckx&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47595&quot;&gt;small improvements to the documentation of VecDeque&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;astraw&quot;&gt;@astraw&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47625&quot;&gt;doctests for BTreeSet to use BTreeSet (not BTreeMap)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47496&quot;&gt;documentation from doc(include) to analysis data&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47620&quot;&gt;multiple themes support in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47512&quot;&gt;E0659 for ambiguous names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hellow554&quot;&gt;@hellow554&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46938&quot;&gt;kbd style tag to main.css in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidtwco&quot;&gt;@davidtwco&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47329&quot;&gt;bad error message when converting anonymous lifetime to &lt;code class=&quot;highlighter-rouge&quot;&gt;&#x27;static&lt;&#x2F;code&gt; for NLL&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tspiteri&quot;&gt;@tspiteri&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47277&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;f32::log&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f64::log&lt;&#x2F;code&gt; are not correctly rounded in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47274&quot;&gt;line offsets for doctests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; standardized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47404&quot;&gt;on ‚Äúre-export‚Äù rather than ‚Äúreexport‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arthurprs&quot;&gt;@arthurprs&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47578&quot;&gt;BTreeMap recommendation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47468&quot;&gt;suggestion to make &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt; binding external to &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;&#x2F;code&gt; closure&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47471&quot;&gt;at method with the requirements on E0283&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47481&quot;&gt;at unused arguments for format string&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47532&quot;&gt;some edge cases to the documentation of &lt;code class=&quot;highlighter-rouge&quot;&gt;Path&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;goffrie&quot;&gt;@goffrie&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47497&quot;&gt;incorrect &lt;code class=&quot;highlighter-rouge&quot;&gt;Default::default&lt;&#x2F;code&gt; links, add a new one&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47407&quot;&gt;mispositioned span in suggestions with wide characters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47413&quot;&gt;error code for unstable feature errors&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47250&quot;&gt;tests for rustdoc search&lt;&#x2F;a&gt;, switched &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47398&quot;&gt;to pulldown as default markdown renderer&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47436&quot;&gt;html-diff crate (fix unicode parsing and invalid paths)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 23rd of January 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Post. 1: The Journey Begins</title>
		<published>2018-01-19T17:05:23+00:00</published>
		<updated>2018-01-19T17:05:23+00:00</updated>
		<link href="https://kitallis.github.io/hades/post-1-the-journey-begins-5vbwf98xhddmvguwoba1w/" type="text/html"/>
		<id>https://kitallis.github.io/hades/post-1-the-journey-begins-5vbwf98xhddmvguwoba1w/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>How can I help Stabilize Things?</title>
		<published>2018-01-18T12:23:55+00:00</published>
		<updated>2018-01-18T12:23:55+00:00</updated>
		<link href="https://kitallis.github.io/hades/how-can-i-help-stabilize-things-pjxxt3n6fjzmijjlnj7qk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/how-can-i-help-stabilize-things-pjxxt3n6fjzmijjlnj7qk/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing a new project: configure</title>
		<published>2018-01-18T00:00:00+00:00</published>
		<updated>2018-01-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-a-new-project-configure-f61rcpmctjelzzghs-inp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-a-new-project-configure-f61rcpmctjelzzghs-inp/</id>
		<content type="html">&lt;p&gt;Hi :) I‚Äôve been working on a project called configure, which is intended to create a uniform way to load configuration variables from the environment of the program. Specifically, the goal is to create something that libraries can rely on to allow applications to delegate decisions about how configuration is loaded to applications, without those applications having to write a lot of bespoke configuration management glue.
Storing configuration in the environment ‚ÄúThe 12 Factor App‚Äù has this very good advice about managing configuration:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust2018 And The Great Cli Awakening</title>
		<published>2018-01-17T00:00:00+00:00</published>
		<updated>2018-01-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust2018-and-the-great-cli-awakening-npp-7q-fyyvo6d-efj6u2/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust2018-and-the-great-cli-awakening-npp-7q-fyyvo6d-efj6u2/</id>
		<content type="html">&lt;h1 id=&quot;rust2018-and-the-great-cli-awakening&quot;&gt;#Rust2018 and the Great CLI Awakening&lt;&#x2F;h1&gt;
&lt;p&gt;This is a response to the &lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2018&#x2F;01&#x2F;03&#x2F;new-years-rust-a-call-for-community-blogposts.html&quot;&gt;#Rust2018&lt;&#x2F;a&gt; call for blog posts with a little bit of my
experience and how I see the 2018 year moving forward.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-experience-of-writing-a-cli-in-rust&quot;&gt;The Experience of Writing a CLI in Rust&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;spoiler&lt;&#x2F;strong&gt;: simultaniously refreshing and painful&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Rust is a fantastic language for writing a Command Line Application (CLI). For the
ergonomics of hacking, it has one of the best &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TeXitoi&#x2F;structopt&quot;&gt;argument parsers
ever&lt;&#x2F;a&gt;, has seriously the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;serde-rs&#x2F;serde&quot;&gt;best serialization library ever&lt;&#x2F;a&gt;
and it compiles to almost any target and goes &lt;em&gt;fast&lt;&#x2F;em&gt; when it runs.&lt;&#x2F;p&gt;
&lt;p&gt;For testing and robustness, its type system prevents you from making stupid
errors, hooking into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AltSysrq&#x2F;proptest&quot;&gt;fuzz-testing&lt;&#x2F;a&gt; is trivial, and there are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;killercup&#x2F;assert_cli&quot;&gt;better
and better&lt;&#x2F;a&gt; libraries for testing CLI applications. It is simply
a fantastic language and will be my goto for writing CLIs from now on (and I
come from python!).&lt;&#x2F;p&gt;
&lt;p&gt;However, there are some serious difficulties. The std library is small, and while
adding functionality from crates with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;killercup&#x2F;cargo-edit&quot;&gt;cargo-edit&lt;&#x2F;a&gt; is a simple
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo add&lt;&#x2F;code&gt; away, there are &lt;em&gt;so&lt;&#x2F;em&gt; many crates that make up a typical CLI, each
one requring you to add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;extern crate foo&lt;&#x2F;code&gt; to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.rs&lt;&#x2F;code&gt; and then have to
write &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use foo&lt;&#x2F;code&gt; at the top of every file you want to use it.&lt;&#x2F;p&gt;
&lt;p&gt;Probably the most significant paper cut is that rust‚Äôs error handling semantics
of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Result&amp;lt;T, E&amp;gt;&lt;&#x2F;code&gt; don‚Äôt work well for the CLI use case. In most cases a CLI
works like a compiler: I want to show the user &lt;em&gt;all&lt;&#x2F;em&gt; the things that are wrong,
not fail on the first error I find! There needs to be a standard crate for
handling a ‚Äústream of errors and warnings‚Äù, probably via a channel, which I can
query ‚Äúwere there errors in the last function?‚Äù.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;filling-the-gaps&quot;&gt;Filling the Gaps&lt;&#x2F;h2&gt;
&lt;p&gt;I have a strong desire to fill the gaps that exist in the ecosystem today. I am
currently doing a complete rewrite of my command line and web application
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;artifact&lt;&#x2F;a&gt;, and am using that use case to ‚Äúfill the holes‚Äù that I see.&lt;&#x2F;p&gt;
&lt;p&gt;Here are some of the things I am working on to fill the gaps. I would like
help from the community as well.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gap-1-working-with-paths&quot;&gt;Gap 1: Working with Paths&lt;&#x2F;h3&gt;
&lt;p&gt;I found working directly with paths to be &lt;em&gt;extremely annoying&lt;&#x2F;em&gt;. Does my path
exist? Is it equal to this other path? Is my path a file or a directory and why
can‚Äôt a type tell me? Why is creating&#x2F;writing&#x2F;appending a string to my path not
possible in a single line of code?&lt;&#x2F;p&gt;
&lt;p&gt;To solve this I wrote the crate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;path_abs&quot;&gt;path_abs&lt;&#x2F;a&gt;. It exports types which
guarantee that all paths exist and are absolute. Even better, it has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PathFile&lt;&#x2F;code&gt;
and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PathDir&lt;&#x2F;code&gt; types with commonly used methods attached to them.&lt;&#x2F;p&gt;
&lt;p&gt;Oh and did I mention that you can serialize the paths with serde? That was
one of my biggest pain points ‚Äì if I have a path I can‚Äôt stick it in a struct
which I want to send anywhere. This library solves that and more.&lt;&#x2F;p&gt;
&lt;p&gt;This was one of my biggest pain points developing a CLI in rust, and it was
filled (by me‚Ä¶) in early 2018 ‚Äì so the year is already looking good for
CLI ergonomics!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gap-2-writing-tests&quot;&gt;Gap 2: writing tests&lt;&#x2F;h3&gt;
&lt;p&gt;Rust makes it extremely simple to write &lt;em&gt;unit tests&lt;&#x2F;em&gt;, but once you want to
do a more end-to-end test there isn‚Äôt a lot out there. Unfortunately, testing
a CLI application requires end to end tests to be confident you are giving
the user the experience you expected.&lt;&#x2F;p&gt;
&lt;p&gt;If all your text is plain (not colored or formatted) then
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;killercup&#x2F;assert_cli&quot;&gt;assert_cli&lt;&#x2F;a&gt; is the crate for you. However, the second you put
style or color ‚Äì or even a table ‚Äì in your application it becomes a tedious
affair of editing a string of raw bytes every time you make a minor change to
your application.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôm currently working on a CLI testing &lt;em&gt;framework&lt;&#x2F;em&gt; built in rust, using the new
crate I wrote called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;termstyle&quot;&gt;termstyle&lt;&#x2F;a&gt; to aid in being able to easily
express your styles (when you write your app) and then make it easy to test
them as well. The goal is to be able to write your CLI tests in a simple YAML
file and get clear diffs against the expected vs result. One of the benefits:
while you are writing your tests there is no compilation time if you are not
touching your source code ‚Äì and running the tests takes almost no time at all!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Shoutout to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colin-kiegel&#x2F;rust-pretty-assertions&quot;&gt;pretty_assertions&lt;&#x2F;a&gt; for making reading diffs
in regular rust tests SO much easier. This is a life saver for CLI
applications!&lt;&#x2F;p&gt;
&lt;p&gt;Also shoutout to the &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;fmt&#x2F;#sign0&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;{:#?}&quot;&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; pretty printing formatter.  When
I discovered it I felt like the largest pain point of rust just vanished.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;gap-3-working-with-errors&quot;&gt;Gap 3: working with errors&lt;&#x2F;h3&gt;
&lt;p&gt;This one is a little bit more difficult and I am currently trying out solutions
in my rewrite of artifact.&lt;&#x2F;p&gt;
&lt;p&gt;The basic idea is this:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Instead of returning errors, I get passed a &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;sync&#x2F;mpsc&#x2F;struct.Sender.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sender&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; object
where I push errors&#x2F;warnings&#x2F;info to that may or may not end up getting
displayed to the user. (note: I use a sender so that multithreading is
trivial)&lt;&#x2F;li&gt;
  &lt;li&gt;If I don‚Äôt get any useful work done, I return &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;None&lt;&#x2F;code&gt;, but there might have
been &lt;em&gt;several&lt;&#x2F;em&gt; errors that contributed to that instead of only one.&lt;&#x2F;li&gt;
  &lt;li&gt;The function above me checks for errors and can choose to exit early.
At the highest levels, the errors are sorted and displayed to the user.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;What I would like to do is leverage something like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;slog-rs&#x2F;slog&quot;&gt;slog&lt;&#x2F;a&gt; for this
purpose. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slog&lt;&#x2F;code&gt; has a similar design: it wants you to pass a ‚Äúlog sender‚Äù
into every function&#x2F;struct and log to that. What I need is a way to &lt;em&gt;query&lt;&#x2F;em&gt;
what logs have been passed (in particular whether they are errors). More
investigation is necessary, but I (personally) found slog very difficult to get
running. Maybe simply improving &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slog&lt;&#x2F;code&gt;‚Äôs ergonomics could fill this gap and
simultaniously provide built-in logging?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gap-4-bringing-it-all-together&quot;&gt;Gap 4: bringing it all together&lt;&#x2F;h3&gt;
&lt;p&gt;The fourth major gap is the ergonomics &lt;em&gt;of actually using&lt;&#x2F;em&gt; the ecosystem. It is
often stated that rust‚Äôs ecosystem is immature. While this is somewhat true,
the real issue is in &lt;em&gt;finding&lt;&#x2F;em&gt; and &lt;em&gt;using&lt;&#x2F;em&gt; the pieces you need.&lt;&#x2F;p&gt;
&lt;p&gt;My final major project this year (along with artifact itself) is to flush out
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;stdcli&quot;&gt;stdcli&lt;&#x2F;a&gt; crate. The goal (unlike the similar crate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;stdx&quot;&gt;stdx&lt;&#x2F;a&gt;) is
to have a &lt;em&gt;specific use case in mind&lt;&#x2F;em&gt; ‚Äì which is to create a Command Line SDK.&lt;&#x2F;p&gt;
&lt;p&gt;I have made significant progress already, and will flush out the first release
as I rewrite artifact, but the primary goal is to reduce the number of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use foo&lt;&#x2F;code&gt;
and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;external crate foo&lt;&#x2F;code&gt; statements that have to be made (especially regarding
traits), by providing a &lt;em&gt;standard prelude&lt;&#x2F;em&gt; for developing CLI applications. The
idea is that developing a CLI using stdcli should almost feel like a completely
different language. Everything you need should be directly within reach, and
the only crates you need to add should be application specific.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike stdx, I plan on using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;=X.Y.Z&lt;&#x2F;code&gt; syntax for all dependencies. I then
plan on setting up something similar to Crater. If your application depends on
stdcli and you have a solid set of tests then you can have your project run
automated tests with it‚Äôs dependencies continuously updated. This will give
you a feeling of security that you can stay on the cutting edge, because stdcli
will be detecting any regressions and opening bugs with the relevant libraries.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gap-5-stretch-distributing-your-application&quot;&gt;Gap 5 (stretch): Distributing Your Application&lt;&#x2F;h2&gt;
&lt;p&gt;This one is a bit of a stretch, but I would like to have a simple way to
distribute applications written in rust that doesn‚Äôt require me to maintain a
build systems on Travis and Appveyor for 3 platforms. I am seriously looking at
the Nix project as the savior to all my woes. I don‚Äôt have much more to say
except that the rust team‚Äôs goal of making it easier to integrate cargo into
build system is &lt;em&gt;much&lt;&#x2F;em&gt; appreciated.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;I think CLI applications are (perhaps surprisingly) one of rust‚Äôs strong suites,
and it needs only a few relatively minor tweaks to make it the best language
for developing CLIs bar none.&lt;&#x2F;p&gt;
&lt;p&gt;The introduction of webassembly and being able to write client-side web
applications will only make this case &lt;em&gt;stronger&lt;&#x2F;em&gt;. Imagine being able to expose
a CLI application that can launch a static (or dynamic+backend) webpage
whenever that makes sense. Imagine &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps&lt;&#x2F;code&gt; (for monitoring processes), but you
could do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps serve&lt;&#x2F;code&gt; and it would pop open a dynamically updating processor
status in your browser, with complex searching and graphing functionality built
in.&lt;&#x2F;p&gt;
&lt;p&gt;Rust will push this frontier. We are going to see more and more hybrid CLI&#x2F;Web
applications being built every day and rust could be the language of choice. I
think it will be, and I think #Rust2018 will be what turns the tide.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 88</title>
		<published>2018-01-14T00:00:00+00:00</published>
		<updated>2018-01-14T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-88-6sbzqriz4y7iep3npcbov/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-88-6sbzqriz4y7iep3npcbov/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The hoedown -&amp;gt; pulldown migration moved forward by a step this last week: now the default renderer is pulldown.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47247&quot;&gt;casting on numeric type error&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47144&quot;&gt;a custom error when moving arg outside of its closure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt;, better &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47120&quot;&gt;Debug impl for io::Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hellow554&quot;&gt;@hellow554&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46938&quot;&gt;kbd style tag to main.css in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47020&quot;&gt;error messages in the case of partial and collateral moves for NLL&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47093&quot;&gt;move related error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;etaoins&quot;&gt;@etaoins&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47424&quot;&gt;macro name suggestion span&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidtwco&quot;&gt;@davidtwco&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47329&quot;&gt;bad error message when converting anonymous lifetime to &lt;code class=&quot;highlighter-rouge&quot;&gt;&#x27;static&lt;&#x2F;code&gt; for NLL&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; checked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47423&quot;&gt;for deadlinks from the summary during book generation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tspiteri&quot;&gt;@tspiteri&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47277&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;f32::log&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f64::log&lt;&#x2F;code&gt; are not correctly rounded in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47274&quot;&gt;line offsets for doctests&lt;&#x2F;a&gt; and implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47046&quot;&gt;RFC 1946 - intra-rustdoc links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; standardized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47404&quot;&gt;on ‚Äúre-export‚Äù rather than ‚Äúreexport‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; populated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47313&quot;&gt;external_traits with traits only seen in impls in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47286&quot;&gt;RELEASES.md for 1.24.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46501&quot;&gt;allow_fail flag test feature&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47413&quot;&gt;error code for unstable feature errors&lt;&#x2F;a&gt;, test &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47250&quot;&gt;rustdoc js&lt;&#x2F;a&gt; and switched &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47398&quot;&gt;to pulldown as default markdown renderer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47171&quot;&gt;suggestion when trying to use method on numeric literal&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46461&quot;&gt;type error method suggestions use whitelisted identity-like conversions&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47210&quot;&gt;the doc-comment-decoration-trimming edge-case rustdoc ICE&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keatinge&quot;&gt;@keatinge&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47232&quot;&gt;help message for incorrect pattern syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47039&quot;&gt;missing src links for generic impls on trait pages in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;whentze&quot;&gt;@whentze&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47357&quot;&gt;docs for OsStr&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;overvenus&quot;&gt;@overvenus&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47375&quot;&gt;examples of Duration::subsec_millis and Duration::subsec_micros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alercah&quot;&gt;@alercah&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47340&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 16th of January 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust in 2018: it&#x27;s way easier to use!</title>
		<published>2018-01-13T19:05:08+00:00</published>
		<updated>2018-01-13T19:05:08+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-in-2018-it-s-way-easier-to-use-uopneds4c1xqpwpseoeto/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-in-2018-it-s-way-easier-to-use-uopneds4c1xqpwpseoeto/</id>
		<content type="html">&lt;p&gt;I‚Äôve been using Rust on and off since late 2013. 4 weeks ago, I picked up Rust again, and the language is SO MUCH EASIER than it was the last time I tried it (May 2016). I think that‚Äôs really exciting! So I wanted to talk about why I like using Rust today, and a couple of ideas for where Rust could go in the next year! (as a response to the call for community blogposts)&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Benchmarking In Stable Rust With Criterion.rs</title>
		<published>2018-01-12T19:00:00-06:00</published>
		<updated>2018-01-12T19:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/benchmarking-in-stable-rust-with-criterion-rs-g7sg4l96pfwi0qi-uujz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/benchmarking-in-stable-rust-with-criterion-rs-g7sg4l96pfwi0qi-uujz/</id>
		<content type="html">&lt;p&gt;When I initially announced the release of Criterion.rs, I didn‚Äôt expect that there would be so much demand for benchmarking on stable Rust. Now, I‚Äôd like to announce the release of Criterion.rs 0.1.2, which supports the stable compiler. This post is an introduction to benchmarking with Criterion.rs and a discussion of reasons why you might or might not want to do so.
What is Criterion.rs? Criterion.rs is a benchmarking library for Rust that aims to bring solid statistical confidence to benchmarking Rust code, while maintaining good ease-of-use, even for programmers without a background in statistics.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>My Goals for Rust in 2018</title>
		<published>2018-01-09T00:00:00+00:00</published>
		<updated>2018-01-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/my-goals-for-rust-in-2018-s-k2ybivv9vtari4a2exu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/my-goals-for-rust-in-2018-s-k2ybivv9vtari4a2exu/</id>
		<content type="html">&lt;p&gt;The Rust project has requested blog posts about the project‚Äôs goals for 2018. I found myself in pretty much complete agreement with Nick Cameron‚Äôs post, so I thought instead I would write about my own personal goals for Rust in 2018. I am fortunate enough to work on Rust full-time; modulated by the work that needs to get done to accomplish larger team goals, these are some things that I‚Äôm individually very motivated to make progress on in 2018.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Looking in on Rust in 2018</title>
		<published>2018-01-07T00:00:00+00:00</published>
		<updated>2018-01-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/looking-in-on-rust-in-2018-rgbmaee6hpf03rg98wto/" type="text/html"/>
		<id>https://kitallis.github.io/hades/looking-in-on-rust-in-2018-rgbmaee6hpf03rg98wto/</id>
		<content type="html">&lt;p&gt;With the call for #Rust2018 blog posts on how this year‚Äôs roadmap should look, I figured I‚Äôd chime in with a few items. Now, I‚Äôm not using Rust in any shape or form in my day-to-day life (though I‚Äôd like to!), but I follow along with the community because so many exciting things happen, and I find Rust itself to be a breath of fresh air. In other words, my view is shaped mostly by my role as observer (rather than active participant), and the primary need I want to address is to make it easier to convince coworkers and higher-ups to give Rust a shot.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 87</title>
		<published>2018-01-07T00:00:00+00:00</published>
		<updated>2018-01-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-87-won33cl9i6ys-zksepd4x/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-87-won33cl9i6ys-zksepd4x/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Happy new year! The last year has been very intense in the Rust documentation world:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;We improved the documentation search (both display and search itself).&lt;&#x2F;li&gt;
  &lt;li&gt;We improved the documentation display (it now fully works on mobile devices!).&lt;&#x2F;li&gt;
  &lt;li&gt;We added more information into the documentation (the crate version, if the return type is implements any of Iterator&#x2F;Read&#x2F;Write trait, and a lot more‚Ä¶).&lt;&#x2F;li&gt;
  &lt;li&gt;We added the possibility to include external files in documentation.&lt;&#x2F;li&gt;
  &lt;li&gt;We (finally!) started the migration of our markdown renderer from hoedown to pulldown.&lt;&#x2F;li&gt;
  &lt;li&gt;We added examples to &lt;strong&gt;every&lt;&#x2F;strong&gt; function&#x2F;methods&#x2F;types to allow readers to understand more quickly.&lt;&#x2F;li&gt;
  &lt;li&gt;We added a lint (&lt;code class=&quot;highlighter-rouge&quot;&gt;missing_docs&lt;&#x2F;code&gt;) to allow you to never miss an item not being documented.&lt;&#x2F;li&gt;
  &lt;li&gt;And a lot more of awesome changes!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Maybe a blog post will be wrote to sum all this up, we‚Äôll see.&lt;&#x2F;p&gt;
&lt;p&gt;Now time to catch up the two missing weeks!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47247&quot;&gt;casting on numeric type error&lt;&#x2F;a&gt;, provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47171&quot;&gt;suggestion when trying to use method on numeric literal&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47144&quot;&gt;a custom error when moving arg outside of its closure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46461&quot;&gt;type error method suggestions use whitelisted identity-like conversions&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47210&quot;&gt;the doc-comment-decoration-trimming edge-case rustdoc ICE&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keatinge&quot;&gt;@keatinge&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47232&quot;&gt;help message for incorrect pattern syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46962&quot;&gt;std::os::raw&lt;&#x2F;a&gt;, better &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47120&quot;&gt;Debug impl for io::Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hellow554&quot;&gt;@hellow554&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46938&quot;&gt;kbd style tag to main.css in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; whitelisted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46815&quot;&gt;based suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47020&quot;&gt;error messages in the case of partial and collateral moves for NLL&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47093&quot;&gt;move related error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47039&quot;&gt;missing src links for generic impls on trait pages in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46501&quot;&gt;allow_fail flag test feature&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46327&quot;&gt;RELEASES.md for 1.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaloJaffre&quot;&gt;@MaloJaffre&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46278&quot;&gt;compiler docs testing to CI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tspiteri&quot;&gt;@tspiteri&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46947&quot;&gt;None condition doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;checked_div&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;checked_rem&lt;&#x2F;code&gt; in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47217&quot;&gt;examples for {BTree,Hash}Set::{get,replace,take}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47064&quot;&gt;a tidy check for missing or too many trailing newlines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergioBenitez&quot;&gt;@SergioBenitez&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47216&quot;&gt;appending behavior of ‚Äòio::Read::read_to_string()‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; minor &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46987&quot;&gt;rewrite of env::current_exe docs; clarified symlinks&lt;&#x2F;a&gt; and documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47145&quot;&gt;when LineWriter flushes; document errors for into_inner&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47030&quot;&gt;a few stability attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dzamlo&quot;&gt;@dzamlo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47198&quot;&gt;an error in std::process documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;varkor&quot;&gt;@varkor&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47079&quot;&gt;doc typo for is_ascii_graphic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sogomn&quot;&gt;@Sogomn&lt;&#x2F;a&gt; defocused &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47134&quot;&gt;search bar in rustdoc pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47124&quot;&gt;reason for move note&lt;&#x2F;a&gt; and reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47098&quot;&gt;trying to operate in immutable fields&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mark-i-m&quot;&gt;@mark-i-m&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47107&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fschutt&quot;&gt;@fschutt&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47052&quot;&gt;error messages for linking failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46359&quot;&gt;display of hidden types in rustdoc&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46700&quot;&gt;doc search more relevant&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;47202&quot;&gt;search bar defocus&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 9th of January 2018 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Are Benchmarks From Cloud CI Services Reliable?</title>
		<published>2018-01-06T16:00:00-06:00</published>
		<updated>2018-01-06T16:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/are-benchmarks-from-cloud-ci-services-reliable-hnhamyhgzyulb4kumn2zu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/are-benchmarks-from-cloud-ci-services-reliable-hnhamyhgzyulb4kumn2zu/</id>
		<content type="html">&lt;p&gt;After I released the first version of Criterion.rs, (a statistics-driven benchmarking tool for Rust) I was asked about using it to detect performance regressions as part of a cloud-based continuous integration (CI) pipeline such as Travis-CI or Appveyor. That got me wondering - does it even make sense to do that?
Cloud-CI pipelines have a lot of potential to introduce noise into the benchmarking process - unpredictable load on the physical hosts of the build VM‚Äôs, or even unpredictable migrations of VMs between physical hosts.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Unsafe Abstractions</title>
		<published>2018-01-04T00:00:00+00:00</published>
		<updated>2018-01-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/unsafe-abstractions-gwvma5qcpmmpxdq9seu6a/" type="text/html"/>
		<id>https://kitallis.github.io/hades/unsafe-abstractions-gwvma5qcpmmpxdq9seu6a/</id>
		<content type="html">&lt;p&gt;Unsafety in Rust is often discussed in terms the primitive operations that can only be performed inside of unsafe blocks (such as dereferencing raw pointers and accessing mutable statics). I want to look at it from a different angle from these primitive operations, and instead focus on the capability to produce unsafe abstractions.
The general concept of unsafe abstractions An unsafe abstraction is a new abstraction which requires the unsafe keyword to apply to some context (this is an intentionally ‚Äúabstract‚Äù definition, because as we will see there are several highly divergent forms of unsafe abstraction supported in Rust).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Implementing Improved Slicing in `ndarray` 0.11</title>
		<published>2017-12-29T00:00:00+00:00</published>
		<updated>2017-12-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/implementing-improved-slicing-in-ndarray-0-11-uinvgcl2m8bl-r5wqq59b/" type="text/html"/>
		<id>https://kitallis.github.io/hades/implementing-improved-slicing-in-ndarray-0-11-uinvgcl2m8bl-r5wqq59b/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ndarray&quot;&gt;&lt;code&gt;ndarray&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; 0.11 has a convenient new feature: combined slicing and subviews
as a single operation. &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ndarray&quot;&gt;&lt;code&gt;ndarray&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;&quot;&gt;Rust&lt;&#x2F;a&gt; crate that provides an
&lt;em&gt;n&lt;&#x2F;em&gt;-dimensional array type and associated functionality for general elements
and for numerics.&lt;&#x2F;p&gt;
&lt;p&gt;This article discusses the implementation of the new feature. It&amp;rsquo;s a story of
type hacking: zero-sized types, associated types, traits for compile-time type
manipulation, and pointer casting.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h2&gt;
&lt;p&gt;The primary type in &lt;code&gt;ndarray&lt;&#x2F;code&gt; is the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html&quot;&gt;&lt;code&gt;ArrayBase&amp;lt;S, D&amp;gt;&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; container type,
which is represented internally as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the data representation (e.g. a contiguous memory block for owned arrays),&lt;&#x2F;li&gt;
&lt;li&gt;a pointer to the first element,&lt;&#x2F;li&gt;
&lt;li&gt;a sequence of &lt;em&gt;n&lt;&#x2F;em&gt; axis lengths, and&lt;&#x2F;li&gt;
&lt;li&gt;a sequence of &lt;em&gt;n&lt;&#x2F;em&gt; axis strides.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The two generic type parameters in &lt;code&gt;ArrayBase&amp;lt;S, D&amp;gt;&lt;&#x2F;code&gt; are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;S&lt;&#x2F;code&gt;: the data ownership (owned arrays own the block of data; array views only
have a pointer to it)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;D&lt;&#x2F;code&gt;: the dimensionality of the array (e.g. &lt;code&gt;Ix1&lt;&#x2F;code&gt; for 1-D arrays, &lt;code&gt;Ix2&lt;&#x2F;code&gt; for
2-D arrays, etc.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;ArrayBase&lt;&#x2F;code&gt; is used for both owned arrays and views of arrays. Note that the
number of dimensions of the array is typically fixed at compile time, although
there is a dynamic dimension type &lt;code&gt;IxDyn&lt;&#x2F;code&gt; if needed.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;slicing&quot;&gt;Slicing&lt;&#x2F;h3&gt;
&lt;p&gt;Slicing methods such as &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice&quot;&gt;&lt;code&gt;.slice()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; create a view a subset of the data in an
array. With a step other than 1, it‚Äôs also possible to do things such as view
every third index along an axis or reverse the order of an axis.&lt;&#x2F;p&gt;
&lt;p&gt;For example, let‚Äôs say you have a 3-dimensional array of shape 2 √ó 2 √ó 3 (i.e.
2 submatrices of 2 rows and 3 columns):&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                  &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                 &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                  &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]]];&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;You could create a slice with&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Both of the submatrices, but in reverse order: &lt;code&gt;0..2;-1&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;The first row in each submatrix: &lt;code&gt;..1&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;The even-index columns in each submatrix: &lt;code&gt;..;2&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;           &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]]]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Here, &lt;code&gt;slice&lt;&#x2F;code&gt; is a view of a subset of &lt;code&gt;arr&lt;&#x2F;code&gt; (without copying).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;subviews&quot;&gt;Subviews&lt;&#x2F;h3&gt;
&lt;p&gt;Subview methods such as &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.subview&quot;&gt;&lt;code&gt;.subview()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; create a view restricted to a single
index along an axis, and then remove that axis from the view. This produces a
view with one dimension less than the input array.&lt;&#x2F;p&gt;
&lt;p&gt;For example, let‚Äôs select the first (index &lt;code&gt;0&lt;&#x2F;code&gt;) row in each submatrix (axis
&lt;code&gt;1&lt;&#x2F;code&gt;) of &lt;code&gt;arr&lt;&#x2F;code&gt;. The new shape is &lt;code&gt;[2, 3]&lt;&#x2F;code&gt; because axis &lt;code&gt;1&lt;&#x2F;code&gt; was removed from the
view.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;           &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h3 id=&quot;combining-slicing-and-subviews&quot;&gt;Combining slicing and subviews&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11 makes it possible to combine slicing and subviews in a single
operation. To get the same result in earlier versions of &lt;code&gt;ndarray&lt;&#x2F;code&gt;, you‚Äôd have
to chain together multiple &lt;code&gt;.slice()&lt;&#x2F;code&gt; and &lt;code&gt;.into_subview()&lt;&#x2F;code&gt; calls while being
careful about their order. For example,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Array4&lt;&#x2F;span&gt;::&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;kt&quot;&gt;f64&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;zeros&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; old&lt;&#x2F;span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; new&lt;&#x2F;span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this example, &lt;code&gt;3..7&lt;&#x2F;code&gt; and &lt;code&gt;..;2&lt;&#x2F;code&gt; indicate slices of axes 0 and 2, and &lt;code&gt;4&lt;&#x2F;code&gt; and
&lt;code&gt;5&lt;&#x2F;code&gt; indicate subviews of axes 1 and 3. The new version is more concise and is
easier to use correctly than a series of &lt;code&gt;.slice()&lt;&#x2F;code&gt; and &lt;code&gt;.into_subview()&lt;&#x2F;code&gt;
calls.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;discussion&quot;&gt;Discussion&lt;&#x2F;h2&gt;
&lt;p&gt;Implementing this feature was interesting because so much needed to be handled
at compile time. The goals were:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Allow a combination of slicing and subviews in a single operation.&lt;&#x2F;li&gt;
&lt;li&gt;Provide compile-time checking of the number of dimensions in the slicing
argument. For example, it should be a compile-time error to call
&lt;code&gt;Array1::zeros(5).slice(s![.., ..])&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Determine at compile time the number of dimensions of the output array&#x2F;view
after slicing. (Otherwise, we‚Äôd always have to return a dynamic-dimensional
array.)&lt;&#x2F;li&gt;
&lt;li&gt;Provide a representation of slicing information that can be passed around or
stored in a variable.&lt;&#x2F;li&gt;
&lt;li&gt;Minimize the use of generic type parameters.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;One option was to create a macro that expands to a series of &lt;code&gt;.slice()&lt;&#x2F;code&gt; and
&lt;code&gt;.into_subview()&lt;&#x2F;code&gt; calls, like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;This approach was backwards-compatible, but it didn‚Äôt address goal 4 (providing
an object that could represent the slicing information). Additionally,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_move&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;wasn‚Äôt quite as easy to read as&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_move&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;So, I decided to focus on modifying the &lt;code&gt;s![]&lt;&#x2F;code&gt; macro to support subviews.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;representing-slicing-information&quot;&gt;Representing slicing information&lt;&#x2F;h3&gt;
&lt;p&gt;The first step was to define a representation of the information necessary to
perform a slice.&lt;&#x2F;p&gt;
&lt;p&gt;In earlier versions of &lt;code&gt;ndarray&lt;&#x2F;code&gt;, this was &lt;code&gt;&amp;amp;[Si; n]&lt;&#x2F;code&gt;, where each instance of
&lt;code&gt;Si&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;nc&quot;&gt;Si&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Ixs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Ixs&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Ixs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;represented a slice of one axis. The signature of &lt;code&gt;.slice()&lt;&#x2F;code&gt; was&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ArrayBase&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Data&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Elem&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;indexes&lt;&#x2F;span&gt;: &lt;span class=&quot;kp&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nc&quot;&gt;D&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;SliceArg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;where &lt;code&gt;D::SliceArg&lt;&#x2F;code&gt; was &lt;code&gt;[Si; n]&lt;&#x2F;code&gt; for fixed-dimension arrays and &lt;code&gt;[Si]&lt;&#x2F;code&gt; for
dynamic-dimension arrays. The &lt;code&gt;s![]&lt;&#x2F;code&gt; macro simply provided a compact way to
construct a &lt;code&gt;&amp;amp;[Si; n]&lt;&#x2F;code&gt; instance.&lt;&#x2F;p&gt;
&lt;p&gt;In &lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11, the replacement for &lt;code&gt;Si&lt;&#x2F;code&gt; had to be able to represent either
a range with step¬†(slice) or an index¬†(subview). Rust made this easy with an
enum:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;&#x2F;span&gt; &lt;span class=&quot;nc&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;&#x2F;span&gt;: &lt;span class=&quot;kt&quot;&gt;isize&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;&#x2F;span&gt;: &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;kt&quot;&gt;isize&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;&#x2F;span&gt;: &lt;span class=&quot;kt&quot;&gt;isize&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Index&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;kt&quot;&gt;isize&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Now that &lt;code&gt;.slice()&lt;&#x2F;code&gt; could take subviews in addition to slicing axes, the
dimension of the output array&#x2F;view could be different from the dimension of
&lt;code&gt;self&lt;&#x2F;code&gt;. As a result, the function signature needed to have a generic parameter
&lt;code&gt;Do&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;&#x2F;span&gt;: &lt;span class=&quot;kp&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nc&quot;&gt;SOMETHING_HERE&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;So, &lt;code&gt;s![]&lt;&#x2F;code&gt; couldn‚Äôt just return &lt;code&gt;&amp;amp;[SliceOrIndex; n]&lt;&#x2F;code&gt;; it needed to include
&lt;code&gt;Do&lt;&#x2F;code&gt;. The slicing information had two parts: the output dimension and the
actual sequence of &lt;code&gt;SliceOrIndex&lt;&#x2F;code&gt;. I combined these in a struct&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;nc&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;: &lt;span class=&quot;o&quot;&gt;?&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;Sized&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;out_dim&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;PhantomData&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;indices&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;where &lt;code&gt;T&lt;&#x2F;code&gt; was &lt;code&gt;[SliceOrIndex; n]&lt;&#x2F;code&gt; when the &lt;code&gt;SliceInfo&lt;&#x2F;code&gt; was produced by &lt;code&gt;s![]&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;constructing-sliceinfo&quot;&gt;Constructing &lt;code&gt;SliceInfo&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In order to construct a &lt;code&gt;SliceInfo&lt;&#x2F;code&gt; instance, the &lt;code&gt;s![]&lt;&#x2F;code&gt; macro had to build an
array &lt;code&gt;[SliceOrIndex; n]&lt;&#x2F;code&gt; and determine the output dimension type after
slicing. Both problems were solved with traits:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;Into&amp;lt;SliceOrIndex&amp;gt;&lt;&#x2F;code&gt; to convert each argument to &lt;code&gt;SliceOrIndex&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Use a new trait &lt;code&gt;SliceNextDim&lt;&#x2F;code&gt; to determine the output dimension type.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;code&gt;SliceNextDim&lt;&#x2F;code&gt; trait provided a way to update the output dimension while
iterating over the arguments.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceNextDim&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D2&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;next_dim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;PhantomData&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;PhantomData&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D2&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Starting with &lt;code&gt;$dim = PhantomData&amp;lt;Ix0&amp;gt;&lt;&#x2F;code&gt; (0-dimensional) and calling
&lt;code&gt;SliceNextDim(&amp;amp;$arg, $dim)&lt;&#x2F;code&gt; on each argument &lt;code&gt;$arg&lt;&#x2F;code&gt; to update &lt;code&gt;$dim&lt;&#x2F;code&gt; determined
the output dimension. The implementation of &lt;code&gt;SliceNextDim&lt;&#x2F;code&gt; for index (subview)
arguments specified that &lt;code&gt;D2 = D1&lt;&#x2F;code&gt; since the corresponding axes &lt;em&gt;were not&lt;&#x2F;em&gt;
included in the output, while the implementation for range (slice) arguments
specified that &lt;code&gt;D2 = D1::Larger&lt;&#x2F;code&gt; since the corresponding axes &lt;em&gt;were&lt;&#x2F;em&gt; included
in the output.&lt;&#x2F;p&gt;
&lt;p&gt;This was great because all the types are determined automatically at compile
time! The return type from &lt;code&gt;s![]&lt;&#x2F;code&gt; was &lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex; n], D&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;argument-coercions&quot;&gt;Argument coercions&lt;&#x2F;h3&gt;
&lt;p&gt;The signature for &lt;code&gt;.slice()&lt;&#x2F;code&gt; was now&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;&#x2F;span&gt;: &lt;span class=&quot;kp&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nc&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;SliceArg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;where &lt;code&gt;D::SliceArg&lt;&#x2F;code&gt; was &lt;code&gt;[SliceOrIndex; n]&lt;&#x2F;code&gt; for fixed dimensions and
&lt;code&gt;[SliceOrIndex]&lt;&#x2F;code&gt; for the dynamic dimension (&lt;code&gt;IxDyn&lt;&#x2F;code&gt;). Automatic coercion of
&lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex; n], Do&amp;gt;&lt;&#x2F;code&gt; to &lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex], Do&amp;gt;&lt;&#x2F;code&gt; made
the output of &lt;code&gt;s![]&lt;&#x2F;code&gt; work for both fixed and dynamic dimensions.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;.slice_inplace()&lt;&#x2F;code&gt; method didn‚Äôt change the dimensionality of the
array&#x2F;view, so it didn‚Äôt need the &lt;code&gt;Do&lt;&#x2F;code&gt; type argument. It‚Äôs signature remained&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;slice_inplace&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;indices&lt;&#x2F;span&gt;: &lt;span class=&quot;kp&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nc&quot;&gt;D&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;SliceArg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;This worked nicely when &lt;code&gt;self&lt;&#x2F;code&gt; had a fixed dimension because &lt;code&gt;SliceInfo&amp;lt;T, D&amp;gt;&lt;&#x2F;code&gt;
implemented &lt;code&gt;Deref { type Target = T; ... }&lt;&#x2F;code&gt; so that &lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex;
n], Do&amp;gt;&lt;&#x2F;code&gt; coerced to &lt;code&gt;&amp;amp;[SliceOrIndex; n]&lt;&#x2F;code&gt;. Unfortunately, the compiler was not
able to combine the &lt;code&gt;deref&lt;&#x2F;code&gt; coercion and an automatic coercion to coerce
&lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex; n], Do&amp;gt;&lt;&#x2F;code&gt; to &lt;code&gt;&amp;amp;[SliceOrIndex]&lt;&#x2F;code&gt;. However, the caller
could manually call &lt;code&gt;.as_ref()&lt;&#x2F;code&gt; to perform the conversion.&lt;&#x2F;p&gt;
&lt;p&gt;It would be possible to work around coercion limitations by using a generic
type argument &lt;code&gt;I&lt;&#x2F;code&gt; that implemented &lt;code&gt;Into&amp;lt;&amp;amp;D::SliceArg&amp;gt;&lt;&#x2F;code&gt;, but a design goal was
to minimize the use of generics.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-type-conversions&quot;&gt;Other type conversions&lt;&#x2F;h3&gt;
&lt;p&gt;I also wanted to support &lt;code&gt;SliceInfo&amp;lt;Vec&amp;lt;SliceOrIndex&amp;gt;, D&amp;gt;&lt;&#x2F;code&gt; because older
versions of &lt;code&gt;ndarray&lt;&#x2F;code&gt; cleanly handled &lt;code&gt;Vec&amp;lt;Si&amp;gt;&lt;&#x2F;code&gt;. To make this convenient, an
implementation of &lt;code&gt;AsRef&lt;&#x2F;code&gt; was provided to convert
&lt;code&gt;&amp;amp;SliceInfo&amp;lt;Vec&amp;lt;SliceOrIndex&amp;gt;, D&amp;gt;&lt;&#x2F;code&gt; to &lt;code&gt;&amp;amp;SliceInfo&amp;lt;[SliceOrIndex], D&amp;gt;&lt;&#x2F;code&gt;.
Specifically,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;AsRef&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;: &lt;span class=&quot;nb&quot;&gt;AsRef&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;as_ref&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;kp&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nc&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;At first glance, this appeared to be impossible to implement. It seemed like
the body of the method needed to create a new &lt;code&gt;SliceInfo&lt;&#x2F;code&gt; instance. However, if
the function returned a reference to the new &lt;code&gt;SliceInfo&lt;&#x2F;code&gt;, the reference would
be dangling because the &lt;code&gt;SliceInfo&lt;&#x2F;code&gt; would be dropped at the end of the function
body.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; made the astute observation that &lt;code&gt;&amp;amp;SliceInfo&amp;lt;T, D&amp;gt;&lt;&#x2F;code&gt; had the same
bitwise representation as &lt;code&gt;&amp;amp;T&lt;&#x2F;code&gt; because the &lt;code&gt;out_dim: PhantomData&amp;lt;D&amp;gt;&lt;&#x2F;code&gt; field in
&lt;code&gt;SliceInfo&lt;&#x2F;code&gt; was a zero-sized type, and the only remaining field was &lt;code&gt;indices:
T&lt;&#x2F;code&gt;. This meant that the conversion could be implemented with pointer casts&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;*&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;indices&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;as_ref&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceInfo&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;SliceOrIndex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;We also added a &lt;code&gt;#[repr(C)]&lt;&#x2F;code&gt; attribute to &lt;code&gt;SliceInfo&lt;&#x2F;code&gt; for extra safety.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;evaluation-of-macro-arguments&quot;&gt;Evaluation of macro arguments&lt;&#x2F;h3&gt;
&lt;p&gt;My first implementation of the &lt;code&gt;s![]&lt;&#x2F;code&gt; macro had a bug. Try to spot the bug in
this piece of the implementation. The &lt;code&gt;$r:expr;$s:expr&lt;&#x2F;code&gt; pattern correctly
matched a &lt;code&gt;range;step&lt;&#x2F;code&gt; argument.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;macro_rules&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; ...&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$dim&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($stack&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;tt&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$r&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$s&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($t&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;tt&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$crate&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;SliceNextDim&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;next_dim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$dim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($stack&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;convert&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($t&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; ...&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;The issue was that the &lt;code&gt;$r&lt;&#x2F;code&gt; expression was expanded in two places, so it was
evaluated twice at runtime. Unfortunately, this issue wasn‚Äôt a problem in the
common case (literal range and index arguments) so it took me a while to notice
it.&lt;&#x2F;p&gt;
&lt;p&gt;The solution was to use &lt;code&gt;match&lt;&#x2F;code&gt; to evaluate &lt;code&gt;$r&lt;&#x2F;code&gt; once and create a binding &lt;code&gt;r&lt;&#x2F;code&gt;
that could be used in both places:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;macro_rules&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; ...&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$dim&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($stack&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;tt&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$r&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$s&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($t&lt;&#x2F;span&gt;:&lt;span class=&quot;nc&quot;&gt;tt&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$r&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                   &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$crate&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;SliceNextDim&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;next_dim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$dim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                   &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($stack&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;convert&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                   &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;$($t&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;            &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; ...&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;This illustrates an important difference between function arguments and macro
expression arguments. If you need to use the value of an expression in multiple
places in a macro, you have to be careful not to accidentally evaluate the
expression multiple times.&lt;&#x2F;p&gt;
&lt;p&gt;When using a macro that acts like a function (e.g. &lt;code&gt;s![]&lt;&#x2F;code&gt; or &lt;code&gt;vec![]&lt;&#x2F;code&gt;), it‚Äôs
easy to ignore that the macro call is really an expansion into an expression,
not a function call. This is usually okay when calling macros, but it‚Äôs
important to keep the difference in mind when writing macros.&lt;&#x2F;p&gt;
&lt;p&gt;Note that the solution uses &lt;code&gt;match $r { r =&amp;gt; expr }&lt;&#x2F;code&gt; instead of &lt;code&gt;{ let r = $r;
expr }&lt;&#x2F;code&gt; because &lt;code&gt;match&lt;&#x2F;code&gt; preserves temporary objects created in &lt;code&gt;$r&lt;&#x2F;code&gt; for the
entire body. Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; for pointing this out. For example,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; error&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; ok&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;        &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Implementing the combined slicing and subviews feature in &lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11 was a
lot of fun and a great learning experience. There were a few important lessons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Macros and traits are a surprisingly powerful combination for doing complex
things at compile time. For example, the &lt;code&gt;s![]&lt;&#x2F;code&gt; macro is able to determine at
compile time the output dimension of the sliced array&#x2F;view from the number
and types of its arguments.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Keep in mind low-level solutions to problems. Rust is a safe, high-level
language, so it‚Äôs easy to forget what‚Äôs actually happening under-the-hood. In
some cases, low-level solutions such as pointer casts are a simple way to
work around high-level limitations.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Be careful not to treat macro arguments the same as function arguments, even
if the macro looks a lot like a function. If you&amp;rsquo;re using an expression in
two places and don&amp;rsquo;t want it to be evaluated twice, use &lt;code&gt;match&lt;&#x2F;code&gt; to evaluate
it and create a binding, and then use that binding.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>`ndarray` 0.11</title>
		<published>2017-12-29T00:00:00+00:00</published>
		<updated>2017-12-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/ndarray-0-11-1pax1w7qryzbjksiqssye/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ndarray-0-11-1pax1w7qryzbjksiqssye/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ndarray&quot;&gt;&lt;code&gt;ndarray&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; 0.11.0 was just released. &lt;code&gt;ndarray&lt;&#x2F;code&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;&quot;&gt;Rust&lt;&#x2F;a&gt; crate that
provides an &lt;em&gt;n&lt;&#x2F;em&gt;-dimensional array type &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html&quot;&gt;&lt;code&gt;ArrayBase&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; for general elements and
for numerics. Arrays are &lt;em&gt;n&lt;&#x2F;em&gt;-dimensional, so they can represent vectors (1
axis), matrices (2 axes), etc., to &lt;em&gt;n&lt;&#x2F;em&gt; axes. &lt;code&gt;ndarray&lt;&#x2F;code&gt; provides methods for
&lt;em&gt;n&lt;&#x2F;em&gt;-dimensional slicing, iteration, view-taking, and some mathematical
operations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11 has an exciting new feature: combined slicing and subviews!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;combined-slicing-and-subviews&quot;&gt;Combined slicing and subviews&lt;&#x2F;h2&gt;
&lt;p&gt;The biggest new feature in &lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11 is the ability to combine slicing and
subviews in a single operation. To get the same result in earlier versions of
&lt;code&gt;ndarray&lt;&#x2F;code&gt;, you‚Äôd have to chain together multiple &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice&quot;&gt;&lt;code&gt;.slice()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.into_subview&quot;&gt;&lt;code&gt;.into_subview()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; calls while being careful with the order
of the calls. For example,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                  &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                 &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;                  &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]]];&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; old&lt;&#x2F;span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_subview&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; new&lt;&#x2F;span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;assert_eq&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this example, the &lt;code&gt;1..;2&lt;&#x2F;code&gt; indicates a slice of axis 2 (starting at index 1
and stepping by 2), and the &lt;code&gt;1&lt;&#x2F;code&gt; and &lt;code&gt;0&lt;&#x2F;code&gt; indicate subviews of axes 0 and 1,
respectively. The resulting &lt;code&gt;slice&lt;&#x2F;code&gt; is a view of a subset of &lt;code&gt;arr&lt;&#x2F;code&gt; (without
copying). The new version is more concise and is easier to use correctly than a
series of &lt;code&gt;.slice()&lt;&#x2F;code&gt; and &lt;code&gt;.into_subview()&lt;&#x2F;code&gt; calls.&lt;&#x2F;p&gt;
&lt;p&gt;You‚Äôll still get a compile-time error if the dimensionality of the array&#x2F;view
being sliced doesn‚Äôt match the number of arguments in the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;macro.s.html&quot;&gt;&lt;code&gt;s![]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
macro, and the dimensionality of the sliced array&#x2F;view is still determined at
compile-time.&lt;&#x2F;p&gt;
&lt;p&gt;You may be interested in &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;impl-slicing-subviews-ndarray&#x2F;&quot;&gt;how this feature was implemented&lt;&#x2F;a&gt;. It&amp;rsquo;s a story of type hacking:
zero-sized types, associated types, traits for compile-time type manipulation,
and pointer casting.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-new-features&quot;&gt;Other new features&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html&quot;&gt;&lt;code&gt;ArrayBase&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; has new &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_axis&quot;&gt;&lt;code&gt;.slice_axis()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_axis_mut&quot;&gt;&lt;code&gt;.slice_axis_mut()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, and
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_axis_inplace&quot;&gt;&lt;code&gt;.slice_axis_inplace()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; methods to slice individual axes. These methods
simplify functions that slice generic-dimensional arrays&#x2F;views. For example,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; old&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;reverse_first_axis&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_info&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Si&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ndim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()];&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_info&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view_dyn&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_dyn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view_dyn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;islice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_info&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view_dyn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;into_dimensionality&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; new&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;reverse_first_axis&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;Dimension&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_axis_inplace&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Axis&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Slice&lt;&#x2F;span&gt;::&lt;span class=&quot;n&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ArrayBase&lt;&#x2F;code&gt; has a new &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_move&quot;&gt;&lt;code&gt;.slice_move()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; method which consumes the array&#x2F;view
and returns a new one. This method is necessary to be able to change the number
of dimensions when slicing an owned array into a smaller owned array. (The
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_inplace&quot;&gt;&lt;code&gt;.slice_inplace()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; method (called &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.islice&quot;&gt;&lt;code&gt;.islice()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in 0.10) can‚Äôt change the
number of dimensions because it can‚Äôt change the type of its argument.) Adding
&lt;code&gt;.slice_move()&lt;&#x2F;code&gt; also has the nice side-effect that some uses of slicing are now
a little more ergonomic, especially when taking ownership of &lt;code&gt;ArrayView&lt;&#x2F;code&gt;s. For
example,&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; old&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;reverse_view&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;ArrayView1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;islice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; new&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;reverse_view&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;: &lt;span class=&quot;nc&quot;&gt;ArrayView1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;-&amp;gt; &lt;span class=&quot;nc&quot;&gt;ArrayView1&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;slice_move&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;w&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;macro.s.html&quot;&gt;&lt;code&gt;s![]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; macro now supports more index types, such as &lt;code&gt;usize&lt;&#x2F;code&gt;, so
you no longer have to manually cast &lt;code&gt;usize&lt;&#x2F;code&gt; indices to &lt;code&gt;isize&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We‚Äôve added many other new features since the &lt;a href=&quot;https:&#x2F;&#x2F;bluss.github.io&#x2F;&#x2F;rust&#x2F;2017&#x2F;04&#x2F;09&#x2F;ndarray-0.9&#x2F;&quot;&gt;last release
announcement&lt;&#x2F;a&gt;. See the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&#x2F;rust-ndarray&#x2F;blob&#x2F;master&#x2F;README.rst#recent-changes-ndarray&quot;&gt;full release notes&lt;&#x2F;a&gt; for more!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;updating-existing-code&quot;&gt;Updating existing code&lt;&#x2F;h2&gt;
&lt;p&gt;There are breaking changes in &lt;code&gt;ndarray&lt;&#x2F;code&gt; 0.11, but updating most code written
for 0.10 is fairly straightforward. The most common updates will be:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rename &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.islice&quot;&gt;&lt;code&gt;.islice()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.slice_inplace&quot;&gt;&lt;code&gt;.slice_inplace()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Rename &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.isubview&quot;&gt;&lt;code&gt;.isubview()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.ArrayBase.html#method.subview_inplace&quot;&gt;&lt;code&gt;.subview_inplace()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you explicitly used the old &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.10.13&#x2F;ndarray&#x2F;struct.Si.html&quot;&gt;&lt;code&gt;Si&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; type, switch to using the
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;macro.s.html&quot;&gt;&lt;code&gt;s![]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; macro if possible. If you need to pass around slicing
information for a single axis, you can use the new &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.SliceInfo.html&quot;&gt;&lt;code&gt;Slice&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; type, which is
very similar to the old &lt;code&gt;Si&lt;&#x2F;code&gt; type and can be used as an argument to the &lt;code&gt;s![]&lt;&#x2F;code&gt;
macro and the &lt;code&gt;.slice_axis*()&lt;&#x2F;code&gt; methods. If &lt;code&gt;s![]&lt;&#x2F;code&gt; doesn‚Äôt work for your
use-case, &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;struct.SliceInfo.html&quot;&gt;&lt;code&gt;SliceInfo&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is analogous to the old &lt;code&gt;[Si; n]&lt;&#x2F;code&gt; type and can be
constructed manually from an array&#x2F;slice&#x2F;&lt;code&gt;Vec&lt;&#x2F;code&gt; of &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ndarray&#x2F;0.11.0&#x2F;ndarray&#x2F;enum.SliceOrIndex.html&quot;&gt;&lt;code&gt;SliceOrIndex&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The output of &lt;code&gt;s![]&lt;&#x2F;code&gt; may not automatically coerce into the parameter type for
&lt;code&gt;.slice*()&lt;&#x2F;code&gt; in all of the places it did in earlier versions of &lt;code&gt;ndarray&lt;&#x2F;code&gt;
(primarily when dealing with dynamic-dimensional arrays). You can call
&lt;code&gt;.as_ref()&lt;&#x2F;code&gt; on the output of &lt;code&gt;s![]&lt;&#x2F;code&gt; to perform the necessary conversion.&lt;&#x2F;p&gt;
&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&#x2F;rust-ndarray&#x2F;blob&#x2F;master&#x2F;README.rst#recent-changes-ndarray&quot;&gt;full release notes&lt;&#x2F;a&gt; for more.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;thanks&quot;&gt;Thanks&lt;&#x2F;h2&gt;
&lt;p&gt;Many thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;bluss&lt;&#x2F;a&gt; for maintaining &lt;code&gt;ndarray&lt;&#x2F;code&gt; and helping me (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&quot;&gt;jturner314&lt;&#x2F;a&gt;)
refine the design of the new features, and, of course, for creating &lt;code&gt;ndarray&lt;&#x2F;code&gt;
in the first place! Thanks also to various people on IRC for answering my Rust
questions.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Not Explicit</title>
		<published>2017-12-27T00:00:00+00:00</published>
		<updated>2017-12-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/not-explicit-sh2-9ph4t-bad4au5ujxu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/not-explicit-sh2-9ph4t-bad4au5ujxu/</id>
		<content type="html">&lt;p&gt;Oftentimes when I am conversing about the design of Rust with other users - as on RFCs or the internals forum - I witness a peculiar remark about ‚Äúexplicitness.‚Äù It usually goes something like this:
I do not like Feature Design X because it is too implicit. Magic is okay in Other Language Y, but Rust is supposed to be an explicit language, so we should go with Feature Design Z instead.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 86</title>
		<published>2017-12-17T00:00:00+00:00</published>
		<updated>2017-12-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-86-qlqq28zk4dx53kgw6rx70/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-86-qlqq28zk4dx53kgw6rx70/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46350&quot;&gt;closure signature on type errors&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46720&quot;&gt;incorrect type mismatch label pointing at return type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46461&quot;&gt;type error method suggestions use whitelisted identity-like conversions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46327&quot;&gt;RELEASES.md for 1.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaloJaffre&quot;&gt;@MaloJaffre&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46278&quot;&gt;compiler docs testing to CI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46359&quot;&gt;display of hidden types in rustdoc&lt;&#x2F;a&gt;, stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46501&quot;&gt;allow_fail flag test feature&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46700&quot;&gt;doc search more relevant&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46608&quot;&gt;type on return type suggestion&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46719&quot;&gt;at var in short lived borrows instead of drop location&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46633&quot;&gt;at whole method call instead of args&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canndrew&quot;&gt;@canndrew&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46232&quot;&gt;docs for never primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46248&quot;&gt;one-time diagnostics for private enum variants glob reexport&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthewjasper&quot;&gt;@matthewjasper&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46601&quot;&gt;a better link for method resolution in Deref docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46737&quot;&gt;a better example in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rillian&quot;&gt;@rillian&lt;&#x2F;a&gt; marked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46411&quot;&gt;ascii methods on primitive types stable in 1.23.0 not 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilio&quot;&gt;@emilio&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46625&quot;&gt;typo in infer README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46668&quot;&gt;mobile doc style and improve search bar&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46672&quot;&gt;type filter in rustdoc js&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46611&quot;&gt;switched types in type mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 19th of December 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 85</title>
		<published>2017-12-10T00:00:00+00:00</published>
		<updated>2017-12-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-85-rwfg-ugh5po4wstksea3v/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-85-rwfg-ugh5po4wstksea3v/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46350&quot;&gt;closure signature on type errors&lt;&#x2F;a&gt; and resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46608&quot;&gt;type on return type suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canndrew&quot;&gt;@canndrew&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46232&quot;&gt;docs for never primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46461&quot;&gt;type error method suggestions use whitelisted identity-like conversions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46248&quot;&gt;one-time diagnostics for private enum variants glob reexport&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46327&quot;&gt;RELEASES.md for 1.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46518&quot;&gt;documentation for Borrow, AsRef, and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; turned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46567&quot;&gt;errors from loading external docs into a proper lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46359&quot;&gt;display of hidden types in rustdoc&lt;&#x2F;a&gt; and stabilized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46501&quot;&gt;allow_fail flag test feature&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45953&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;&#x2F;code&gt; in diagnostics code as four spaces&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JRegimbal&quot;&gt;@JRegimbal&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45898&quot;&gt;‚ÄúTypes&#x2F;modules‚Äù title of search tab to be more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46136&quot;&gt;what &lt;code class=&quot;highlighter-rouge&quot;&gt;-D warnings&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-F warnings&lt;&#x2F;code&gt; does&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nak3&quot;&gt;@nak3&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46463&quot;&gt;invalid docs path for compiler plugins&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46465&quot;&gt;invalid link to lint_plugin_test.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tromey&quot;&gt;@tromey&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46432&quot;&gt;documentation for DecodeUtf16Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46431&quot;&gt;the name of ? in Result‚Äôs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vramana&quot;&gt;@vramana&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46572&quot;&gt;bad error message for cannot_reborrow_already_uniquely_borrowed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46603&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;impl [u8]&lt;&#x2F;code&gt; in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; specified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46416&quot;&gt;that macro &lt;code class=&quot;highlighter-rouge&quot;&gt;cfg!&lt;&#x2F;code&gt; evaluating at compile-time&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AgustinCB&quot;&gt;@AgustinCB&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46497&quot;&gt;message for keyword as identifier name&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notriddle&quot;&gt;@notriddle&lt;&#x2F;a&gt; renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46187&quot;&gt;C-like enum to Field-less enum&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46483&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;ptr::swap&lt;&#x2F;code&gt; with overlapping regions of memory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46512&quot;&gt;compile_error macro examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;timotree3&quot;&gt;@timotree3&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46495&quot;&gt;old link&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46247&quot;&gt;warnings for markdown doc generation&lt;&#x2F;a&gt;, speedup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46221&quot;&gt;search loading when search url is received in rust docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46433&quot;&gt;deduplication of items in rust docs search&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46454&quot;&gt;search results overlap&lt;&#x2F;a&gt;, moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46444&quot;&gt;colors to main.css&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46611&quot;&gt;switched types in type mismatch error&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46586&quot;&gt;doc important trait display on mobile&lt;&#x2F;a&gt;, greatly improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46526&quot;&gt;sidebar when width &amp;lt; 700px&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46502&quot;&gt;search style&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 12th of December 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rocket - A Rust game running on WASM</title>
		<published>2017-12-03T15:14:51+01:00</published>
		<updated>2017-12-03T15:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/rocket-a-rust-game-running-on-wasm-qpw3lene7b8slgvulyhzv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rocket-a-rust-game-running-on-wasm-qpw3lene7b8slgvulyhzv/</id>
		<content type="html">&lt;p&gt;Two weeks ago, Alex Crichton&amp;rsquo;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45905&quot;&gt;PR&lt;&#x2F;a&gt; adding a target for
WebAssembly to the Rust compiler was merged. There are many differences
between this target and the Emscripten one, but the important one for me is that
it doesn&amp;rsquo;t depend on external stuff like the Emscripten SDK (which
IIRC used to be a pain to get working on Windows, but seems to be better
now).&lt;&#x2F;p&gt;
&lt;p&gt;After seeing the examples on &lt;a href=&quot;https:&#x2F;&#x2F;www.hellorust.com&quot;&gt;hellorust.com&lt;&#x2F;a&gt;, I thought it would
be interesting to try to adapt my game &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aochagavia&#x2F;rocket&quot;&gt;Rocket&lt;&#x2F;a&gt; to work
on the browser through the &lt;code&gt;wasm32-unknown-unknown&lt;&#x2F;code&gt; target. The project
was a great way to figure out how far you can go when porting a project that
is a bit more complex than a hello world. I was pleasantly surprised by the
fact that most of the code could be reused. Particularly, the game logic code
was barely touched at all.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tldr&quot;&gt;TLDR&lt;&#x2F;h3&gt;
&lt;p&gt;Here is the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aochagavia&#x2F;rocket_wasm&quot;&gt;source code&lt;&#x2F;a&gt;. Also, you can play the game in the canvas
below or &lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;rocket_wasm&#x2F;&quot;&gt;on a dedicated tab&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The controls are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Left and right arrows: turn left and right&lt;&#x2F;li&gt;
&lt;li&gt;Up arrow: boost&lt;&#x2F;li&gt;
&lt;li&gt;Space: shoot&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;canvas id=&quot;canvas&quot; height=&quot;300px&quot; style=&quot;width: 100%;&quot;&gt;&lt;&#x2F;canvas&gt;
&lt;script src=&quot;js&#x2F;embedded-rocket.js&quot;&gt;&lt;&#x2F;script&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-mvp&quot;&gt;An MVP&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;getting-things-to-compile-removing-piston&quot;&gt;Getting things to compile: removing Piston&lt;&#x2F;h3&gt;
&lt;p&gt;Before I started, the little I knew about WebAssembly was that it doesn&amp;rsquo;t allow
you to interface with the OS, graphics card or other stuff like that. Using
Emscripten seems to be a way around this problem, but I guess you still need
to adapt your programs to some extent&amp;hellip; I have never used it, though, so take
my words with a grain of salt.&lt;&#x2F;p&gt;
&lt;p&gt;After cloning the Rocket repository I started removing stuff. The first thing to
go was the dependency on Piston. I didn&amp;rsquo;t even try to compile Rocket to wasm
before this step, as it is obvious that Piston requires OS support.&lt;&#x2F;p&gt;
&lt;p&gt;At this point, we were left with:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;No game loop&lt;&#x2F;li&gt;
&lt;li&gt;No rendering&lt;&#x2F;li&gt;
&lt;li&gt;No player input&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;rebuilding-the-game-laying-down-the-basic-structure&quot;&gt;Rebuilding the game: laying down the basic structure&lt;&#x2F;h3&gt;
&lt;p&gt;So here we are without even a main function. This means that the game loop should
be implemented in Javascript and call into our Rust functions. Therefore
we need a set of basic functions that are enough to drive the execution of the
game, draw something to the screen and process user input.&lt;&#x2F;p&gt;
&lt;p&gt;Since rendering and processing player input are more involved than just updating
the game state, I chose the latter as a first function to implement. I was able
to reuse the code for the game logic without any change, so the function ended
up looking as follows:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; update(time&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; GameData &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;  data.time_controller.update_seconds(time, &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;data.actions, &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data.state);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;  CollisionsController&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;handle_collisions(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data.state);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Surprisingly, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aochagavia&#x2F;rocket&#x2F;blob&#x2F;c13232b074da14662cc24ee075f7ef66521e5d27&#x2F;src&#x2F;main.rs#L71-L74&quot;&gt;update function on the original game&lt;&#x2F;a&gt; is &lt;em&gt;exactly the same&lt;&#x2F;em&gt;,
with the exception of the use of &lt;code&gt;DATA&lt;&#x2F;code&gt;. By the way, we use &lt;code&gt;DATA&lt;&#x2F;code&gt; to
store state instead of passing it between Javascript and Rust every time we call
a function. The definition is quite simple:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;lazy_static&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;static&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;ref&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Mutex&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;GameData&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Mutex&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;new(new_game_data(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #ae81ff&quot;&gt;1024.0&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color: #ae81ff&quot;&gt;600.0&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;));&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Since &lt;code&gt;DATA&lt;&#x2F;code&gt; is accessible from anywhere in the program, Rust forces us to use
a &lt;code&gt;Mutex&lt;&#x2F;code&gt; to ensure thread safety. Technically, this isn&amp;rsquo;t necessary in the case
of Javascript, since there will only be one thread. Still, the type system knows
nothing about that&amp;hellip; Hence the mutex.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-things-to-compile-take-two&quot;&gt;Getting things to compile, take two&lt;&#x2F;h3&gt;
&lt;p&gt;With Piston out of the way, I set out to get the rest of the code to compile and
to run it in the browser as a simulation without any visual output. This is the
moment where difficulties started to pop out.&lt;&#x2F;p&gt;
&lt;p&gt;The first problem I encountered was caused by the dependency on &lt;code&gt;rand&lt;&#x2F;code&gt;. Generating
random numbers doesn&amp;rsquo;t necessarily require OS support, but you need to generate a
seed some way or another. For this reason, &lt;code&gt;rand&lt;&#x2F;code&gt; relies on an &lt;code&gt;OsRng&lt;&#x2F;code&gt; struct that
is platform-dependent. Guess what&amp;hellip; WebAssembly didn&amp;rsquo;t had such a struct, so the
crate could not be compiled.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, the problem was easily solved by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;rand&#x2F;pull&#x2F;197&quot;&gt;adding such a struct&lt;&#x2F;a&gt;.
After patching the crate, the code finally compiled&amp;hellip; but it didn&amp;rsquo;t run in the
browser.&lt;&#x2F;p&gt;
&lt;p&gt;By the way, you are probably wondering about the seeding problem. If there is no way
to communicate with the outside world from your WebAssembly programs, how can you
get a seed? Below I will describe how you can call Javascript functions from Rust,
which could be a solution to the problem. However, I decided to use a constant seed,
which is clearly not optimal, but is good enough for a playable demo.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;getting-things-to-run-link-errors&quot;&gt;Getting things to run: link errors&lt;&#x2F;h3&gt;
&lt;p&gt;I mentioned in the paragraph above that the resulting program didn&amp;rsquo;t run on the browser.
Concretely, after following the instructions on &lt;a href=&quot;https:&#x2F;&#x2F;www.hellorust.com&quot;&gt;hellorust.com&lt;&#x2F;a&gt;, I got the
following error:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;TypeError: import object field &#x27;env&#x27; is not an Object
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After looking around for a while, this turned out to be a linking problem. In other words,
the generated Rust code contained calls to functions that didn&amp;rsquo;t exist. Therefore, the
browser expected me to pass an import object containing said functions. It seems that
some &lt;code&gt;f64&lt;&#x2F;code&gt; functions I used in the physics part of the game have no analogous on
WebAssembly, so I had to pass them explicitly from Javascript through the following object:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;imports&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;{&lt;&#x2F;span&gt;
  &lt;span style=&quot;color: #a6e22e&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #a6e22e&quot;&gt;Math_atan&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;Math.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;atan&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #a6e22e&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;Math.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;sin&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #a6e22e&quot;&gt;cos&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;Math.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;cos&lt;&#x2F;span&gt;
  &lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;};&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;After this, the code compiled and could be loaded on the browser, though without
any kind of visual feedback. Rust running on the browser! Finally.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;making-the-game-actually-playable&quot;&gt;Making the game actually playable&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rendering&quot;&gt;Rendering&lt;&#x2F;h3&gt;
&lt;p&gt;At this point I discovered that you could call Javascript functions from within the
Rust program. This follows the same principle as using C functions from a library.
On the Rust side, you need to declare the function as &lt;code&gt;extern&lt;&#x2F;code&gt;. On the Javascript
side, you need to add the function to the imports, so it can be linked.&lt;&#x2F;p&gt;
&lt;p&gt;This means we can define drawing functions on the Javascript side and call them from
Rust. Even though WebAssembly itself cannot interact with the outside world, it can
still call Javascript functions you explicitly pass through the &lt;code&gt;imports&lt;&#x2F;code&gt; object.
This will be our escape hatch to render the game to a canvas&lt;&#x2F;p&gt;
&lt;p&gt;Rendering things to the screen was as easy as adding a bunch of functions to my program:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; clear_screen();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw_player(_&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw_enemy(_&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw_bullet(_&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw_particle(_&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double, _&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw_score(_&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; c_double);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Of course, these functions had to be implemented on the Javascript side. You can find
them on the source code of the demo. You won&amp;rsquo;t find any surprises there, as the only
thing they do is drawing to a canvas.&lt;&#x2F;p&gt;
&lt;p&gt;With these extern functions in place, I could implement the rest of the drawing code
in Rust as shown below:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;unsafe&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; draw() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;use&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; geometry&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;{Advance, Position};&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; world &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;data.state.world;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;    clear_screen();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; particle &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;in&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;world.particles {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        draw_particle(particle.x(), particle.y(), &lt;&#x2F;span&gt;&lt;span style=&quot;color: #ae81ff&quot;&gt;5.0&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; particle.ttl);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; bullet &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;in&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;world.bullets {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        draw_bullet(bullet.x(), bullet.y());&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; enemy &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;in&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;world.enemies {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        draw_enemy(enemy.x(), enemy.y());&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;    draw_player(world.player.x(), world.player.y(), world.player.direction());&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    draw_score(data.state.score &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;as&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;f64&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Again, if you compare this code to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aochagavia&#x2F;rocket&#x2F;blob&#x2F;c13232b074da14662cc24ee075f7ef66521e5d27&#x2F;src&#x2F;view.rs#L31-L45&quot;&gt;original version&lt;&#x2F;a&gt;,
you will see that they are strikingly similar.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;processing-user-input&quot;&gt;Processing user input&lt;&#x2F;h3&gt;
&lt;p&gt;With simulation and rendering in place, enabling user input was almost trivial.
First of all, I added a bunch of functions to toggle user actions on and off.
Note that I am using a Rust type as a parameter of each function. This is
technically incorrect, but I am not sure about which type I should use instead.
If you do, please open a PR so it can be fixed.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; toggle_shoot(b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    data.actions.shoot &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; b;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; toggle_boost(b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    data.actions.boost &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; b;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; toggle_turn_left(b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    data.actions.rotate_left &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; b;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;color: #75715e&quot;&gt;#[no_mangle]&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;pub&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;extern&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; toggle_turn_right(b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; data &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; DATA.lock().unwrap();&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    data.actions.rotate_right &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; b;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this case, the code did differ considerably from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aochagavia&#x2F;rocket&#x2F;blob&#x2F;c13232b074da14662cc24ee075f7ef66521e5d27&#x2F;src&#x2F;controllers&#x2F;input.rs#L39-L47&quot;&gt;original version&lt;&#x2F;a&gt;,
since the latter relies on the &lt;code&gt;piston_window::Key&lt;&#x2F;code&gt; struct, which no longer exists. In the wasm
version, I moved the key matching logic to Javascript, since I didn&amp;rsquo;t want to pass strings between
Javascript and Rust. The resulting code is straightforward:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;&#x2F;&#x2F; Input processing&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;function&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;processKey&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;{&lt;&#x2F;span&gt;
  &lt;span style=&quot;color: #66d9ef&quot;&gt;switch&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f8f8f2&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #66d9ef&quot;&gt;case&lt;&#x2F;span&gt; &lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;ArrowLeft&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #a6e22e&quot;&gt;module&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;toggle_turn_left&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #66d9ef&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #66d9ef&quot;&gt;case&lt;&#x2F;span&gt; &lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;ArrowRight&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #a6e22e&quot;&gt;module&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;toggle_turn_right&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #66d9ef&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #66d9ef&quot;&gt;case&lt;&#x2F;span&gt; &lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;ArrowUp&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #a6e22e&quot;&gt;module&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;toggle_boost&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #66d9ef&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;;&lt;&#x2F;span&gt;
    &lt;span style=&quot;color: #66d9ef&quot;&gt;case&lt;&#x2F;span&gt; &lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #a6e22e&quot;&gt;module&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;toggle_shoot&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
      &lt;span style=&quot;color: #66d9ef&quot;&gt;break&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;;&lt;&#x2F;span&gt;
  &lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;document.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;#39;keydown&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;e&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f92672&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;processKey&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt; &lt;span style=&quot;color: #66d9ef&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;));&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;document.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;#39;keyup&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;e&lt;&#x2F;span&gt; &lt;span style=&quot;color: #f92672&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span style=&quot;color: #a6e22e&quot;&gt;processKey&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #a6e22e&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt; &lt;span style=&quot;color: #66d9ef&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;));&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;Even though the &lt;code&gt;wasm32-unknown-unknown&lt;&#x2F;code&gt; target is quite new, it clearly has a
lot of potential. I am impressed by the fact that I was able to port Rocket
with almost no modifications to the game logic code. In the end, I ended up
spending most of the time dealing with rendering and figuring out how to correctly
set up the integration between Javascript and Rust.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;discussion&quot;&gt;Discussion&lt;&#x2F;h1&gt;
&lt;p&gt;Comment on &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;7ha3gj&#x2F;rocket_a_rust_game_running_on_wasm&#x2F;&quot;&gt;reddit&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=15843064&quot;&gt;HN&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 84</title>
		<published>2017-12-03T00:00:00+00:00</published>
		<updated>2017-12-03T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-84-ivstl48t7ew5bw5cjznmf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-84-ivstl48t7ew5bw5cjznmf/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45953&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;&#x2F;code&gt; in diagnostics code as four spaces&lt;&#x2F;a&gt;, highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46350&quot;&gt;closure signature on type errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JRegimbal&quot;&gt;@JRegimbal&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45898&quot;&gt;‚ÄúTypes&#x2F;modules‚Äù title of search tab to be more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canndrew&quot;&gt;@canndrew&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46232&quot;&gt;docs for never primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46136&quot;&gt;what &lt;code class=&quot;highlighter-rouge&quot;&gt;-D warnings&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-F warnings&lt;&#x2F;code&gt; does&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nak3&quot;&gt;@nak3&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46463&quot;&gt;invalid docs path for compiler plugins&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46461&quot;&gt;type error method suggestions use whitelisted identity-like conversions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46156&quot;&gt;the size of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tromey&quot;&gt;@tromey&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46432&quot;&gt;documentation for DecodeUtf16Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46431&quot;&gt;the name of ? in Result‚Äôs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;archer884&quot;&gt;@archer884&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46341&quot;&gt;const error message to use ‚Äòliteral‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46327&quot;&gt;RELEASES.md for 1.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46247&quot;&gt;warnings for markdown doc generation&lt;&#x2F;a&gt;, speedup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46221&quot;&gt;search loading when search url is received in rust docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46433&quot;&gt;deduplication of items in rust docs search&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46454&quot;&gt;search results overlap&lt;&#x2F;a&gt;, moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46444&quot;&gt;colors to main.css&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46359&quot;&gt;display of hidden types in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; accounted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45997&quot;&gt;for missing keyword in fn&#x2F;struct definition&lt;&#x2F;a&gt;, suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46249&quot;&gt;using slice when encountering &lt;code class=&quot;highlighter-rouge&quot;&gt;let x = &quot;&quot;[..];&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46256&quot;&gt;suggestions instead of notes ref mismatches&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46381&quot;&gt;to next token when it is in the expected line&lt;&#x2F;a&gt;, highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46349&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt; when type matches on type mismatch error&lt;&#x2F;a&gt; and shortened &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46282&quot;&gt;output of E0391&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colinmarsh19&quot;&gt;@colinmarsh19&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46258&quot;&gt;a note ‚Äúplease remove this semicolon‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46219&quot;&gt;documentation for slice swap&#x2F;copy&#x2F;clone operations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucasem&quot;&gt;@lucasem&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46234&quot;&gt;typo in core::marker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidalber&quot;&gt;@davidalber&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46201&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eprint*!&lt;&#x2F;code&gt; to the list of macros in the &lt;code class=&quot;highlighter-rouge&quot;&gt;format!&lt;&#x2F;code&gt; family&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46384&quot;&gt;issues with cross-crate inlined associated items in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46285&quot;&gt;non-obvious behavior of fmt::UpperHex &amp;amp; co for negative integers&lt;&#x2F;a&gt; and expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46240&quot;&gt;docs of &amp;lt;$Int&amp;gt;::from_str_radix, based on that of char::to_digit&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chrisduerr&quot;&gt;@chrisduerr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46387&quot;&gt;rustdoc item summaries that are headers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46175&quot;&gt;global doc search&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46224&quot;&gt;invalid doc link&lt;&#x2F;a&gt;, inverted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46392&quot;&gt;colors in important traits tooltip&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46326&quot;&gt;invalid HTML escape&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 5th of December 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Failure 0.1.1 released</title>
		<published>2017-11-30T00:00:00+00:00</published>
		<updated>2017-11-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/failure-0-1-1-released-v6borpxjlpwapjwkn6k0a/" type="text/html"/>
		<id>https://kitallis.github.io/hades/failure-0-1-1-released-v6borpxjlpwapjwkn6k0a/</id>
		<content type="html">&lt;p&gt;I‚Äôve just published failure 0.1.1 to crates.io. It‚Äôs mostly some incremental improvements to failure that have been suggested since the first release two weeks ago.
Improvements to the derive A big change in version 0.1.1 is that the derive can be used without depending on the failure_derive crate separately. All that needs to be done is tagging the extern crate statement with #[macro_use]:
&#x2F;&#x2F; No direct dependency on &lt;code&gt;failure_derive&lt;&#x2F;code&gt; #[macro_use] extern crate failure; #[derive(Fail, Debug)] #[fail(display = &amp;quot;An error occurred.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 83</title>
		<published>2017-11-26T00:00:00+00:00</published>
		<updated>2017-11-26T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-83-4rosrqqnz54jsjavt1zb4/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-83-4rosrqqnz54jsjavt1zb4/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45776&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, accounted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45997&quot;&gt;for missing keyword in fn&#x2F;struct definition&lt;&#x2F;a&gt;, displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45953&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;&#x2F;code&gt; in diagnostics code as four spaces&lt;&#x2F;a&gt;, highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, suggest3e &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46249&quot;&gt;using slice when encountering &lt;code class=&quot;highlighter-rouge&quot;&gt;let x = &quot;&quot;[..];&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46256&quot;&gt;suggestions instead of notes ref mismatches&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JRegimbal&quot;&gt;@JRegimbal&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45898&quot;&gt;‚ÄúTypes&#x2F;modules‚Äù title of search tab to be more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;colinmarsh19&quot;&gt;@colinmarsh19&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46258&quot;&gt;a note ‚Äúplease remove this semicolon‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canndrew&quot;&gt;@canndrew&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46232&quot;&gt;docs for never primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ExpHP&quot;&gt;@ExpHP&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46260&quot;&gt;doc stubs for builtin macros reflect existing support for trailing commas&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46136&quot;&gt;what &lt;code class=&quot;highlighter-rouge&quot;&gt;-D warnings&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;-F warnings&lt;&#x2F;code&gt; does&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46219&quot;&gt;documentation for slice swap&#x2F;copy&#x2F;clone operations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucasem&quot;&gt;@lucasem&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46234&quot;&gt;typo in core::marker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidalber&quot;&gt;@davidalber&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46201&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eprint*!&lt;&#x2F;code&gt; to the list of macros in the &lt;code class=&quot;highlighter-rouge&quot;&gt;format!&lt;&#x2F;code&gt; family&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46247&quot;&gt;warnings for markdown doc generation&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46175&quot;&gt;global doc search&lt;&#x2F;a&gt;, speedup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46221&quot;&gt;search loading when search url is received&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46224&quot;&gt;invalid doc link&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt; and showed in docs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45454&quot;&gt;Release notes for 1.22.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46024&quot;&gt;the proper term when using non-existing variant&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45946&quot;&gt;multiline text for crate conflict diagnostics&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45947&quot;&gt;dereference suggestion on tuple argument&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fhartwig&quot;&gt;@fhartwig&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45645&quot;&gt;rustdoc not include self-by-value methods from Deref target&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46035&quot;&gt;structured suggestions for various ‚Äúuse‚Äù suggestions&lt;&#x2F;a&gt;, included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46052&quot;&gt;rendered diagnostic in json&lt;&#x2F;a&gt; and checked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46116&quot;&gt;&#x2F;&#x2F;~ERROR comments in ui tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&quot;&gt;@vitiral&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46088&quot;&gt;doc for doing &lt;code class=&quot;highlighter-rouge&quot;&gt;Read&lt;&#x2F;code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45998&quot;&gt;broken CSS for book redirect pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; amended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46190&quot;&gt;RELEASES for 1.22.1&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aqrln&quot;&gt;@aqrln&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46141&quot;&gt;a typo in ToSocketAddrs documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;martinlindhe&quot;&gt;@martinlindhe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46157&quot;&gt;some typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46081&quot;&gt;path search&lt;&#x2F;a&gt; and displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46134&quot;&gt;negative traits implementation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 28th of November 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 82</title>
		<published>2017-11-19T00:00:00+00:00</published>
		<updated>2017-11-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-82-1-lixuabji627neilxhfq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-82-1-lixuabji627neilxhfq/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt; and showed in docs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45454&quot;&gt;Release notes for 1.22.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45776&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;, accounted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45997&quot;&gt;for missing keyword in fn&#x2F;struct definition&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46024&quot;&gt;the proper term when using non-existing variant&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45946&quot;&gt;multiline text for crate conflict diagnostics&lt;&#x2F;a&gt;, displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45953&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;&#x2F;code&gt; in diagnostics code as four spaces&lt;&#x2F;a&gt;, highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45947&quot;&gt;dereference suggestion on tuple argument&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fhartwig&quot;&gt;@fhartwig&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45645&quot;&gt;rustdoc not include self-by-value methods from Deref target&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JRegimbal&quot;&gt;@JRegimbal&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45898&quot;&gt;‚ÄúTypes&#x2F;modules‚Äù title of search tab to be more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46035&quot;&gt;structured suggestions for various ‚Äúuse‚Äù suggestions&lt;&#x2F;a&gt; and included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46052&quot;&gt;rendered diagnostic in json&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46088&quot;&gt;doc for doing &lt;code class=&quot;highlighter-rouge&quot;&gt;Read&lt;&#x2F;code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; combined &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46049&quot;&gt;‚Äúthis expression will panic at run-time‚Äù warnings into &lt;code class=&quot;highlighter-rouge&quot;&gt;const_err&lt;&#x2F;code&gt; lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45998&quot;&gt;broken CSS for book redirect pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46081&quot;&gt;path search&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45767&quot;&gt;talk about #![doc(test(no_crate_inject))] and #![doc(test(attr(‚Ä¶)))] in rustdoc&lt;&#x2F;a&gt;, tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45815&quot;&gt;notes on ignore&#x2F;compile_fail examples in rustdoc&lt;&#x2F;a&gt; and updated examples: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45993&quot;&gt;in Cow::into_owned don‚Äôt need to wrap result in Cows&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45692&quot;&gt;shipping the Cargo book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pornel&quot;&gt;@pornel&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45828&quot;&gt;deprecated message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46039&quot;&gt;left over dead code from suggestion diagnostic refactoring&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45977&quot;&gt;several pulldown warnings when documenting libstd&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lnicola&quot;&gt;@lnicola&lt;&#x2F;a&gt; escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46010&quot;&gt;doc root URLs in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ExpHP&quot;&gt;@ExpHP&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45984&quot;&gt;context to E0084, E0517, E0518&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; deduplicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45952&quot;&gt;projection error (E0271) messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45673&quot;&gt;search over generic types in docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46066&quot;&gt;primitive types not showing up&lt;&#x2F;a&gt;, set &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;46005&quot;&gt;short-message feature unstable&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45970&quot;&gt;missing links in FromStr docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 21st of November 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Speed up your Python using Rust</title>
		<published>2017-11-16T11:00:22+00:00</published>
		<updated>2017-11-16T11:00:22+00:00</updated>
		<link href="https://kitallis.github.io/hades/speed-up-your-python-using-rust-vegthcmsxrkm2m81lv1ri/" type="text/html"/>
		<id>https://kitallis.github.io/hades/speed-up-your-python-using-rust-vegthcmsxrkm2m81lv1ri/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Failure</title>
		<published>2017-11-16T00:00:00+00:00</published>
		<updated>2017-11-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-failure-zb7gw-tzdj6fzovhvmqwj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-failure-zb7gw-tzdj6fzovhvmqwj/</id>
		<content type="html">&lt;p&gt;I‚Äôm really excited to announce a new crate I‚Äôve been working on, called failure, and which I‚Äôve just released to crates.io. Failure is a Rust library intended to make it easier to manage your error types. This library has been heavily influenced by learnings we gained from previous iterations in our error management story, especially the Error trait and the error-chain crate.
The Fail trait The core abstraction in failure is the Fail trait, a replacement for the existing std::error::Error trait.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Disk-based algorithms: External merge-sort</title>
		<published>2017-11-13T15:50:55+05:45</published>
		<updated>2017-11-13T15:50:55+05:45</updated>
		<link href="https://kitallis.github.io/hades/disk-based-algorithms-external-merge-sort-lyowkvcjd75ekayunu7eq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/disk-based-algorithms-external-merge-sort-lyowkvcjd75ekayunu7eq/</id>
		<content type="html">&lt;p&gt;I have lately been studying how databases work under the hood. There are many problems that a database has to solve. At the moment, I‚Äôve been having fun exploring how data is stored on disk. Previously, I wrote about how a hashtable is stored on disk. This post is somewhat similar‚Äì I talk about how data stored on disk can be sorted.
Databases frequently have to sort data of massive sizes, sizes big enough that they don‚Äôt fit in memory at once.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 81</title>
		<published>2017-11-12T00:00:00+00:00</published>
		<updated>2017-11-12T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-81-roxlr0tdgtfqem4morsz9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-81-roxlr0tdgtfqem4morsz9/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45767&quot;&gt;talk about #![doc(test(no_crate_inject))] and #![doc(test(attr(‚Ä¶)))] in rustdoc&lt;&#x2F;a&gt; and tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45815&quot;&gt;notes on ignore&#x2F;compile_fail examples in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45454&quot;&gt;Release notes for 1.22.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45776&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45692&quot;&gt;shipping the Cargo book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fhartwig&quot;&gt;@fhartwig&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45645&quot;&gt;rustdoc not include self-by-value methods from Deref target&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JRegimbal&quot;&gt;@JRegimbal&lt;&#x2F;a&gt; change &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45898&quot;&gt;‚ÄúTypes&#x2F;modules‚Äù title of search tab to be more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pornel&quot;&gt;@pornel&lt;&#x2F;a&gt; remove &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45828&quot;&gt;deprecated message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45673&quot;&gt;search over generic types in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45764&quot;&gt;#[allow(unused)] to every doctest in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45778&quot;&gt;reference link in doc‚Äôs 404&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45756&quot;&gt;typos in README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroege&quot;&gt;@sdroege&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45714&quot;&gt;the std::thread docs and clarified that panics can nowadays be caught&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45620&quot;&gt;duplicated impls with generics in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45919&quot;&gt;broken link markup in Hasher::finish docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfix&quot;&gt;@xfix&lt;&#x2F;a&gt; allowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45887&quot;&gt;a trailing comma in assert_eq&#x2F;ne macro&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhford&quot;&gt;@jhford&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45878&quot;&gt;get() example: it should use get() not get_mut()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45856&quot;&gt;help for duplicated names: &lt;code class=&quot;highlighter-rouge&quot;&gt;extern crate (...) as (...)&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45452&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;&#x2F;code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;&#x2F;code&gt; typo in let bindings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Badel2&quot;&gt;@Badel2&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45773&quot;&gt;error for &lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;&#x2F;code&gt; in expressions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45582&quot;&gt;missing links and examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45470&quot;&gt;missing docs for MetadataExt&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45766&quot;&gt;more elements in the sidebar&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45631&quot;&gt;missing links and examples for FileExt&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45812&quot;&gt;navbar click while in a search&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45869&quot;&gt;missing example for Debug trait&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45849&quot;&gt;‚Äù-‚Äú shortcut in rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 14th of November 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Implementing a key-value store, part 2: Linear Hashing implementation in Rust</title>
		<published>2017-11-09T00:00:00+00:00</published>
		<updated>2017-11-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/implementing-a-key-value-store-part-2-linear-hashing-implementation-in-rust-htrf51ixcnse8sjvsjhsh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/implementing-a-key-value-store-part-2-linear-hashing-implementation-in-rust-htrf51ixcnse8sjvsjhsh/</id>
		<content type="html">&lt;p&gt;In the last post, I introduced the idea of linear hashing. This post will describe a Rust implementation of the algorithm. I won‚Äôt go through every last line of code, but hopefully enough to give you a good understanding of how the whole thing works. I should also mention that even though this is a post about implementing linear hashing, it spends quite some time talking about how storing data to disk works.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 80</title>
		<published>2017-11-05T00:00:00+00:00</published>
		<updated>2017-11-05T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-80-q9rtjrtgrzh7qwm4ee4fm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-80-q9rtjrtgrzh7qwm4ee4fm/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45764&quot;&gt;#[allow(unused)] to every doctest in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45767&quot;&gt;talk about #![doc(test(no_crate_inject))] and #![doc(test(attr(‚Ä¶)))] in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45454&quot;&gt;Release notes for 1.22.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45776&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt; and highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45752&quot;&gt;code on diagnostics when underlined&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45778&quot;&gt;reference link in doc‚Äôs 404&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45756&quot;&gt;typos in README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45692&quot;&gt;shipping the Cargo book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sdroege&quot;&gt;@sdroege&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45714&quot;&gt;the std::thread docs and clarified that panics can nowadays be caught&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fhartwig&quot;&gt;@fhartwig&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45645&quot;&gt;rustdoc not include self-by-value methods from Deref target&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45620&quot;&gt;duplicated impls with generics in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45582&quot;&gt;missing links and examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45470&quot;&gt;missing docs for MetadataExt&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45766&quot;&gt;more elements in the sidebar&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45673&quot;&gt;search over generic types in docs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45631&quot;&gt;missing links and examples for FileExt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshleeb&quot;&gt;@joshleeb&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45603&quot;&gt;duplicated display of error E0502&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45630&quot;&gt;display of error E0308&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leodasvacas&quot;&gt;@leodasvacas&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45579&quot;&gt;that call expressions also represent ADT constructors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tirr-c&quot;&gt;@tirr-c&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45711&quot;&gt;spans correctly when there are zero-width or wide characters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ljzn&quot;&gt;@Ljzn&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45718&quot;&gt;typo&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45681&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LaurentMazare&quot;&gt;@LaurentMazare&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45639&quot;&gt;a nicer error message for missing in for loop, fixes #40782&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cldfire&quot;&gt;@Cldfire&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45660&quot;&gt;renaming import if names clash&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45664&quot;&gt;incorrect error type in Read::byte docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45554&quot;&gt;the book for a fix to the print button&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technius&quot;&gt;@Technius&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45295&quot;&gt;std::process module docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45187&quot;&gt;sidebar rendering and added methods list&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45450&quot;&gt;title heading overlap in rust doc&lt;&#x2F;a&gt;, search &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45617&quot;&gt;fixes&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45746&quot;&gt;tests for methods listing in rust docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 7th of November 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Implementing a key-value store, part 1: Linear Hashing</title>
		<published>2017-11-04T16:38:34+00:00</published>
		<updated>2017-11-04T16:38:34+00:00</updated>
		<link href="https://kitallis.github.io/hades/implementing-a-key-value-store-part-1-linear-hashing-3poak3k1xbit-xovoiydi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/implementing-a-key-value-store-part-1-linear-hashing-3poak3k1xbit-xovoiydi/</id>
		<content type="html">&lt;p&gt;In this series of posts, I want to walk you through how to build a simple, persistent key-value store. We will be using an on-disk hashtable(also called external hashtable) to store the key-value mappings. In this post, I will explain hashtables briefly and an algorithm called linear hashing. In the next post, we‚Äôll look at an implementation of linear hashing(written in Rust).
How would you store a hashtable on disk?&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Singularity AI</title>
		<published>2017-11-02T15:14:51+01:00</published>
		<updated>2017-11-02T15:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/singularity-ai-8szjyf-zpl8lnnvfs5s6b/" type="text/html"/>
		<id>https://kitallis.github.io/hades/singularity-ai-8szjyf-zpl8lnnvfs5s6b/</id>
		<content type="html">&lt;p&gt;Sometimes you read comments on the internet about how computers are going to
take over the world when &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Artificial_general_intelligence&quot;&gt;Artificial General Intelligence&lt;&#x2F;a&gt; becomes a thing.
While I am convinced a real AGI will never happen, it inspired me to start a
new project: &lt;a href=&quot;https:&#x2F;&#x2F;singularity-ai.neocities.org&#x2F;&quot;&gt;Singularity AI&lt;&#x2F;a&gt;. The title sounds like a startup name,
but it is basically a tool to prank people by making them think I programmed
an AGI.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-idea&quot;&gt;The idea&lt;&#x2F;h3&gt;
&lt;p&gt;Singularity AI consists of a single-page website where you can ask questions
and get answers from the computer. The website itself pretends to be an AGI,
as you can deduce from the first question of the FAQ:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;What are you?&lt;&#x2F;p&gt;
&lt;p&gt;I am a General Artificial Intelligence, that is, a computer program that can think and feel just as you do.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note that this is technically an incorrect definition of AGI, but&amp;hellip; who cares?&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;designing-a-fake-agi&quot;&gt;Designing a fake AGI&lt;&#x2F;h3&gt;
&lt;p&gt;Singularity AI is meant to be used by two people. One of them knows that everything is fake
and secretly types the answers to every question. The other one, the subject of the prank,
suggests new questions and looks astonished at the screen after receiving the right answers
to each question. Sounds great, right?&lt;&#x2F;p&gt;
&lt;p&gt;A big question remains, though. How can we type the answers without anyone noticing?
Fortunately, we are talking about an AGI here. That is, a computer that is indistinguishable
from a human being. It happens that this computer is very proud and won&amp;rsquo;t answer to any
question, unless asked in the right way. Therefore, each time after you type a question,
you also need to type a petition in the following form:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oh Singularity, please answer my humble question&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This may seem silly, but it is the key to entering answers in a subtle way. Since the
petition text is always the same, you could modify the text input to show the same
sentence regardless of what you type. In other words, you can write the answer and have
the website display the sentence: &lt;em&gt;Oh Singularity, please answer my humble question&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;By the way, I didn&amp;rsquo;t bother to get the website working on mobile, since you always
get typing suggestions from your keyboard and it is much easier to commit mistakes.
This makes it almost impossible to type the answers without being noticed.&lt;&#x2F;p&gt;
&lt;p&gt;One last detail is that, sometimes, the person being pranked wants to type the question
themselves. After all, it seems so extraordinary that they feel the need to do it,
to ensure it is no prank. Fortunately, in this case they will get a generic answer about the computer
being upset with them because they doubt the website is real.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-to-use&quot;&gt;How to use&lt;&#x2F;h3&gt;
&lt;p&gt;If you go to the &lt;a href=&quot;https:&#x2F;&#x2F;singularity-ai.neocities.org&#x2F;&quot;&gt;website&lt;&#x2F;a&gt; right now, you will notice that the text input for
the petition behaves like a normal text input. That is, it shows the letters you type,
whatever they are, instead of showing the &amp;ldquo;&lt;em&gt;Oh Singularity&amp;hellip;&lt;&#x2F;em&gt;&amp;rdquo; sentence.&lt;&#x2F;p&gt;
&lt;p&gt;In order to start entering the answer, you need to get into &lt;em&gt;answering mode&lt;&#x2F;em&gt;. You can
do this by pressing &lt;code&gt;;&lt;&#x2F;code&gt; on the petition text input. From that point on, you can type any
gibberish you want and will see how the &amp;ldquo;&lt;em&gt;Oh Singularity&amp;hellip;&lt;&#x2F;em&gt;&amp;rdquo; sentence starts appearing
on the screen. When you are finished writing the answer, you can type &lt;code&gt;;&lt;&#x2F;code&gt; again to exit
&lt;em&gt;answering mode&lt;&#x2F;em&gt; and finish writing the petition sentence.&lt;&#x2F;p&gt;
&lt;p&gt;After writing the question and the petition, you can click on the &lt;em&gt;Ask&lt;&#x2F;em&gt; button to reveal
the answer.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-implementation&quot;&gt;The implementation&lt;&#x2F;h3&gt;
&lt;p&gt;Since I don&amp;rsquo;t want to pay for publishing such a ridiculous website, I decided to
implement it in HTML and Javascript. That way, I could host it at &lt;a href=&quot;https:&#x2F;&#x2F;neocities.org&quot;&gt;neocities&lt;&#x2F;a&gt;
for free. I programmed it in vanilla Javascript, as anything beyond that would have been
overkill (besides, I really didn&amp;rsquo;t want to setup a &amp;ldquo;modern Javascript toolchain&amp;rdquo; with Webpack
and all the bells and whistles.)&lt;&#x2F;p&gt;
&lt;p&gt;It took me about an hour to build a basic prototype. I tested it on some friends and was
satisfied with the results, so I went ahead, grabbed a bootstrap template and published
the resulting &lt;a href=&quot;https:&#x2F;&#x2F;singularity-ai.neocities.org&#x2F;&quot;&gt;website&lt;&#x2F;a&gt;. While I don&amp;rsquo;t like adding a bunch of unnecessary CSS and
Javascript, the time savings of not having to come up with my own design are certainly
worth it.&lt;&#x2F;p&gt;
&lt;p&gt;The Javascript code spans about 80 lines. I am not particularly proud of the style,
since I almost didn&amp;rsquo;t touch it after I got it working. I am usually much pickier about
the quality of the code I publish, but on the other hand, this project is more
about the website and less about the code. You are welcome to look at it, but
it is really nothing special and probably a unreadable.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;user-testing&quot;&gt;User testing&lt;&#x2F;h3&gt;
&lt;p&gt;The real fun begins at this point, when the website is published and ready to
be shown to a couple of friends. Some of them were very skeptical and refused
to believe this was a real AGI, so from the beginning they were trying to find
out how I typed the answers. Some of them, however, were more willing to believe,
leading to interesting stories like the one below.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Me: ever heard of an Artificial General Intelligence? Look, I programmed one. It
can answer any question you have. It makes use of all the sensors on the computer,
but can also query information from the internet.&lt;&#x2F;p&gt;
&lt;p&gt;Friend: that can&amp;rsquo;t be true. Ask it this: how cold is my beer?&lt;&#x2F;p&gt;
&lt;p&gt;(He probably thought this would be a good question, since I cannot think of a sensible way my
computer could know the temperature of his beer)&lt;&#x2F;p&gt;
&lt;p&gt;Computer: 12 degrees.&lt;&#x2F;p&gt;
&lt;p&gt;Friend (stands up and starts walking around the room): WHAT!? WHAT!?&lt;&#x2F;p&gt;
&lt;p&gt;(He kept asking questions, usually easy to answer, each time reacting in the same way.
He also tried typing the questions himself, which of course resulted in snarky
pre-programmed answers. Finally, he came up with a truly difficult
question&amp;hellip;)&lt;&#x2F;p&gt;
&lt;p&gt;Friend (with a confident smile): ask it how much I weigh.&lt;&#x2F;p&gt;
&lt;p&gt;(At this point, I considered whether I would get away with a generic answer.
On the other hand, I felt tempted to take the gamble and come up with an
estimation&amp;hellip; It would be truly amazing if I managed to get the right answer&amp;hellip;)&lt;&#x2F;p&gt;
&lt;p&gt;Computer: 62 kilograms.&lt;&#x2F;p&gt;
&lt;p&gt;(At this point my friend finally came to the conclusion that everything was fake,
quite late in the game&amp;hellip; I lost the gamble)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;As you can see, you can have quite a bit of fun with this. Feel free to share your
experience. You can find my email by cloning this blog&amp;rsquo;s repository and using &lt;code&gt;git log&lt;&#x2F;code&gt;.
Maybe we can even create a hall of fame with the best stories.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Getting started with rust-toolset</title>
		<published>2017-11-01T11:00:25+00:00</published>
		<updated>2017-11-01T11:00:25+00:00</updated>
		<link href="https://kitallis.github.io/hades/getting-started-with-rust-toolset-pcmkmscz3bd0glwmcmase/" type="text/html"/>
		<id>https://kitallis.github.io/hades/getting-started-with-rust-toolset-pcmkmscz3bd0glwmcmase/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 79</title>
		<published>2017-10-29T00:00:00+00:00</published>
		<updated>2017-10-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-79-vk2ahx5gr9k7gkn4i-vv5/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-79-vk2ahx5gr9k7gkn4i-vv5/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshleeb&quot;&gt;@joshleeb&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45603&quot;&gt;duplicated display of error E0502&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45454&quot;&gt;Release notes for 1.22.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leodasvacas&quot;&gt;@leodasvacas&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45579&quot;&gt;that call expressions also represent ADT constructors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45452&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;&#x2F;code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;&#x2F;code&gt; typo in let bindings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45187&quot;&gt;sidebar rendering and added methods list&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45582&quot;&gt;missing links and examples&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45470&quot;&gt;missing docs for MetadataExt&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45450&quot;&gt;title heading overlap in rust doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45421&quot;&gt;pulldown and fixed spurious rendering difference around footnotes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45429&quot;&gt;docs around &lt;code class=&quot;highlighter-rouge&quot;&gt;Once::call_once_force&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;OnceState&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45585&quot;&gt;‚Äòfuture Rust version‚Äô code block in diagnostic text&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45449&quot;&gt;docs for UdpSocket::set_nonblocking&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45398&quot;&gt;misspelling in error text: re-assignment =&amp;gt; reassignment&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45554&quot;&gt;the book for a fix to the print button&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45555&quot;&gt;the book on beta to fix the print button&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technius&quot;&gt;@Technius&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45295&quot;&gt;std::process module docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nzig&quot;&gt;@nzig&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45574&quot;&gt;rustc_on_unimplemented example in Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45549&quot;&gt;‚Äòjust‚Äô in diagnostics&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45531&quot;&gt;formatting in unstable book‚Äôs attr-literals section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thombles&quot;&gt;@thombles&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45503&quot;&gt;diagnostics when list of tokens has incorrect separators&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michaelwoerister&quot;&gt;@michaelwoerister&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45519&quot;&gt;duplicated compiler diagnostic emissions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt;, limited &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45212&quot;&gt;the sidebar height&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45361&quot;&gt;missing code examples&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45502&quot;&gt;src button and function version on mobile version&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 31st of October 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing release of Software Collections, Developer Toolset, new compilers</title>
		<published>2017-10-25T13:00:51+00:00</published>
		<updated>2017-10-25T13:00:51+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-release-of-software-collections-developer-toolset-new-compilers-0lelh0mb1ynnt4ocpoabk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-release-of-software-collections-developer-toolset-new-compilers-0lelh0mb1ynnt4ocpoabk/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Alternative Registries</title>
		<published>2017-10-23T14:10:21-07:00</published>
		<updated>2017-10-23T14:10:21-07:00</updated>
		<link href="https://kitallis.github.io/hades/alternative-registries-kv0mhobmjkl164kqkdf6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/alternative-registries-kv0mhobmjkl164kqkdf6/</id>
		<content type="html">&lt;p&gt;cargo gained a new feature this week! You can now download dependencies from alternative registries, alongside the dependencies you download from crates.io. This is an important step in enabling organizations to distribute their internal libraries through cargo without requiring them to upload those libraries to a public registry.
This feature will be available on nightly only, and it is gated behind the alternative-registries feature gate. We‚Äôve used feature gates to iterate on new and unstable features in rustc since the 1.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 78</title>
		<published>2017-10-22T00:00:00+00:00</published>
		<updated>2017-10-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-78-omyqnwaqcqsms8-ckmjdm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-78-omyqnwaqcqsms8-ckmjdm/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45421&quot;&gt;pulldown and fixed spurious rendering difference around footnotes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45429&quot;&gt;docs around &lt;code class=&quot;highlighter-rouge&quot;&gt;Once::call_once_force&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;OnceState&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45398&quot;&gt;misspelling in error text: re-assignment =&amp;gt; reassignment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technius&quot;&gt;@Technius&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45295&quot;&gt;std::process module docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45187&quot;&gt;sidebar rendering and added methods list&lt;&#x2F;a&gt;, limited &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45212&quot;&gt;the sidebar height&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45361&quot;&gt;missing code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45419&quot;&gt;most rendering warnings from switching to CommonMark&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&quot;&gt;@sunjay&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45098&quot;&gt;the process for when rustfmt&#x2F;rls break&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacwah&quot;&gt;@jacwah&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45082&quot;&gt;Clone and refs in ‚Äìexplain E0382&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;goffrie&quot;&gt;@goffrie&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45123&quot;&gt;the full span of method calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;check_argument_types&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and marked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45316&quot;&gt;block exits as reachable if the block can break&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45181&quot;&gt;a list of all lang items in unstable book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45227&quot;&gt;docs&#x2F;examples for TCP &lt;code class=&quot;highlighter-rouge&quot;&gt;set_nonblocking&lt;&#x2F;code&gt; methods&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xAX&quot;&gt;@0xAX&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45264&quot;&gt;a typo in src&#x2F;bootstrap&#x2F;README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45217&quot;&gt;out of date unstable book entries for &lt;code class=&quot;highlighter-rouge&quot;&gt;alloc_*&lt;&#x2F;code&gt; features&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45407&quot;&gt;typos in README.md&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45376&quot;&gt;typos in src&#x2F;librustc&#x2F;README.md&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45377&quot;&gt;typos in librustc&#x2F;ty&#x2F;README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45418&quot;&gt;‚Äúgender‚Äù from code of conduct, keep only ‚Äúgender identity and expression‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;neunenak&quot;&gt;@neunenak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45356&quot;&gt;explanatory text for error E0599&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christianpoveda&quot;&gt;@christianpoveda&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45349&quot;&gt;examples of closures for str::find&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45232&quot;&gt;code suggestions for non-shorthand field pattern, no-mangle lints&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45315&quot;&gt;‚Äúexpected statement after outer attr.‚Äù after inner attr&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; updated docs: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45340&quot;&gt;a LocalKey might start in the Valid state&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfix&quot;&gt;@xfix&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45339&quot;&gt;array documentation for Clone trait changes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45308&quot;&gt;missing headlines in rustdoc book&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45307&quot;&gt;typo in rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pirh&quot;&gt;@Pirh&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45151&quot;&gt;defaults for stdin, stdout, and stderr methods of Command&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; saved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45281&quot;&gt;selected search tab&lt;&#x2F;a&gt;, saved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45288&quot;&gt;the highlighted item when switching tab&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45280&quot;&gt;terribly useless and problematic margin when searching on mobile&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45289&quot;&gt;arrow display&lt;&#x2F;a&gt;, hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45290&quot;&gt;help when search bar is focused&lt;&#x2F;a&gt;, printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45324&quot;&gt;rustdoc rendering warnings all the time&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45329&quot;&gt;duplicated word&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Tuesday 24th of October 2017 at 19:00 UTC on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 77</title>
		<published>2017-10-15T00:00:00+00:00</published>
		<updated>2017-10-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-77-ur0nqht0ffgdx2gc7i0iy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-77-ur0nqht0ffgdx2gc7i0iy/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt;, included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44970&quot;&gt;syntax when finding method on array&lt;&#x2F;a&gt;, warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44881&quot;&gt;when assigning a block that doesn‚Äôt have an implicit return&lt;&#x2F;a&gt; and referred &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44642&quot;&gt;to types using the local identifier&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&quot;&gt;@sunjay&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45098&quot;&gt;the process for when rustfmt&#x2F;rls break&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacwah&quot;&gt;@jacwah&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45082&quot;&gt;Clone and refs in ‚Äìexplain E0382&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nemo157&quot;&gt;@Nemo157&lt;&#x2F;a&gt; rendered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44994&quot;&gt;cfg(feature) requirements in documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;goffrie&quot;&gt;@goffrie&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45123&quot;&gt;the full span of method calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;check_argument_types&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45181&quot;&gt;a list of all lang items in unstable book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45227&quot;&gt;docs&#x2F;examples for TCP &lt;code class=&quot;highlighter-rouge&quot;&gt;set_nonblocking&lt;&#x2F;code&gt; methods&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xAX&quot;&gt;@0xAX&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45264&quot;&gt;a typo in src&#x2F;bootstrap&#x2F;README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45217&quot;&gt;out of date unstable book entries for &lt;code class=&quot;highlighter-rouge&quot;&gt;alloc_*&lt;&#x2F;code&gt; features&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45187&quot;&gt;sidebar rendering and added methods list&lt;&#x2F;a&gt;, save &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45281&quot;&gt;selected search tab&lt;&#x2F;a&gt;, saved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45288&quot;&gt;the highlighted item when switching tab&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45280&quot;&gt;terribly useless and problematic margin when searching on mobile&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45289&quot;&gt;arrow display&lt;&#x2F;a&gt;, hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45290&quot;&gt;help when search bar is focused&lt;&#x2F;a&gt; and limited &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45212&quot;&gt;the sidebar height&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44969&quot;&gt;trait impls when the type appears in the trait‚Äôs generics&lt;&#x2F;a&gt; and let &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44989&quot;&gt;rustdoc print the crate version into docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44867&quot;&gt;doc-test: in Markdown tests, Use all of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h6&amp;gt;&lt;&#x2F;code&gt; as the test name&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44855&quot;&gt;docs for CStr, CString, OsStr, OsString&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; don‚Äôt &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44962&quot;&gt;encourage people to ignore threading errors in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; upgraded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45172&quot;&gt;some comments to doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45171&quot;&gt;a mistake in release notes for 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45069&quot;&gt;a better error message for missing tuple pattern in args&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; increased &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45245&quot;&gt;padding between consecutive impls in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gankro&quot;&gt;@Gankro&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45253&quot;&gt;how needs_drop is conservative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45173&quot;&gt;suggestions for misspelled labels&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Badel2&quot;&gt;@Badel2&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45178&quot;&gt;a better error message for comma after base struct&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jean-lourenco&quot;&gt;@jean-lourenco&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45122&quot;&gt;compile error output when using arguments instead of types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johnthagen&quot;&gt;@johnthagen&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45116&quot;&gt;typos&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45136&quot;&gt;RAM usage during build in README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tinaun&quot;&gt;@tinaun&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45166&quot;&gt;a few more unstable feature gates&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;camsteffen&quot;&gt;@camsteffen&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45105&quot;&gt;rustc documentation typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45089&quot;&gt;typo in codegen test&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45055&quot;&gt;tabs for search for better information access&lt;&#x2F;a&gt;, usize &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45133&quot;&gt;index message for vec&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45240&quot;&gt;improvements in the mobile sidebar&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 18th of October 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Exploring lock-free Rust 3: Crossbeam</title>
		<published>2017-10-12T08:58:39+00:00</published>
		<updated>2017-10-12T08:58:39+00:00</updated>
		<link href="https://kitallis.github.io/hades/exploring-lock-free-rust-3-crossbeam-02snu6-pyxpykhwkoj7dh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/exploring-lock-free-rust-3-crossbeam-02snu6-pyxpykhwkoj7dh/</id>
		<content type="html">&lt;p&gt;In the previous installment we showed that while atomic types provided by the Rust standard library can be used for lock-free access to shared values, memory reclamation must be ensured manually because Rust‚Äôs normal scoping rules do not cleanly map to lock-free concurrency. Crossbeam The problem of memory reclamation in lock-free data structures is not ‚Ä¶ &lt;a href=&quot;https:&#x2F;&#x2F;morestina.net&#x2F;blog&#x2F;784&#x2F;exploring-lock-free-rust-3-crossbeam&quot; class=&quot;more-link&quot;&gt;Continue reading &lt;span class=&quot;screen-reader-text&quot;&gt;Exploring lock-free Rust 3: Crossbeam&lt;&#x2F;span&gt; &lt;span class=&quot;meta-nav&quot;&gt;‚Üí&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Exploring lock-free Rust 2: Atomics</title>
		<published>2017-10-12T08:58:35+00:00</published>
		<updated>2017-10-12T08:58:35+00:00</updated>
		<link href="https://kitallis.github.io/hades/exploring-lock-free-rust-2-atomics-g5-w70uxlksg8ztzhhpyu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/exploring-lock-free-rust-2-atomics-g5-w70uxlksg8ztzhhpyu/</id>
		<content type="html">&lt;p&gt;The previous article showed a mutex-based implementation of the LazyTransform value container. However, the exercise was explicit about implementing a ‚Äúlock-free‚Äù container. What does that mean, exactly? Limitations of locks The interaction between LazyTransform methods was carefully designed to prevent deadlock, but in a busy system one could expect significant contention for the source mutex ‚Ä¶ &lt;a href=&quot;https:&#x2F;&#x2F;morestina.net&#x2F;blog&#x2F;749&#x2F;exploring-lock-free-rust-2-atomics&quot; class=&quot;more-link&quot;&gt;Continue reading &lt;span class=&quot;screen-reader-text&quot;&gt;Exploring lock-free Rust 2: Atomics&lt;&#x2F;span&gt; &lt;span class=&quot;meta-nav&quot;&gt;‚Üí&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Exploring lock-free Rust 1: Locks</title>
		<published>2017-10-12T08:56:33+00:00</published>
		<updated>2017-10-12T08:56:33+00:00</updated>
		<link href="https://kitallis.github.io/hades/exploring-lock-free-rust-1-locks-jzq-bel6ujcahtrgotd-s/" type="text/html"/>
		<id>https://kitallis.github.io/hades/exploring-lock-free-rust-1-locks-jzq-bel6ujcahtrgotd-s/</id>
		<content type="html">&lt;p&gt;As a learning exercise I set out to implement a simple lock-free algorithm in Rust. It was inspired by a problem posed at job interviews at a company where a friend works. The problem is simple enough that it can be tackled by a beginner, but tricky enough to require some thought to get right ‚Ä¶ &lt;a href=&quot;https:&#x2F;&#x2F;morestina.net&#x2F;blog&#x2F;742&#x2F;exploring-lock-free-rust-1-locks&quot; class=&quot;more-link&quot;&gt;Continue reading &lt;span class=&quot;screen-reader-text&quot;&gt;Exploring lock-free Rust 1: Locks&lt;&#x2F;span&gt; &lt;span class=&quot;meta-nav&quot;&gt;‚Üí&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 76</title>
		<published>2017-10-08T00:00:00+00:00</published>
		<updated>2017-10-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-76-l4soprwjmw5ie-qyzcazg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-76-l4soprwjmw5ie-qyzcazg/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt;, abd included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45039&quot;&gt;in docs whether the return type of a function impls Iterator&#x2F;Read&#x2F;Write&lt;&#x2F;a&gt;, documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44969&quot;&gt;trait impls when the type appears in the trait‚Äôs generics&lt;&#x2F;a&gt; and let &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44989&quot;&gt;rustdoc print the crate version into docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44867&quot;&gt;doc-test: in Markdown tests, Use all of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h6&amp;gt;&lt;&#x2F;code&gt; as the test name&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44855&quot;&gt;docs for CStr, CString, OsStr, OsString&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44970&quot;&gt;syntax when finding method on array&lt;&#x2F;a&gt;, warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44881&quot;&gt;when assigning a block that doesn‚Äôt have an implicit return&lt;&#x2F;a&gt; and referred &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44642&quot;&gt;to types using the local identifier&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&quot;&gt;@sunjay&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45098&quot;&gt;the process for when rustfmt&#x2F;rls break&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; don‚Äôt &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44962&quot;&gt;encourage people to ignore threading errors in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jacwah&quot;&gt;@jacwah&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45082&quot;&gt;Clone and refs in ‚Äìexplain E0382&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nemo157&quot;&gt;@Nemo157&lt;&#x2F;a&gt; rendered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44994&quot;&gt;cfg(feature) requirements in documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45055&quot;&gt;tabs for search for better information access&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44481&quot;&gt;RELEASES.md for 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;budziq&quot;&gt;@budziq&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44664&quot;&gt;the CONTRIBUTING.md ‚ÄúExternal Dependencies‚Äù section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; rendered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44920&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[src]&lt;&#x2F;code&gt; links for trait implementors in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44897&quot;&gt;docs for size_of::&amp;lt;#[repr(C)]&amp;gt; items&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leavehouse&quot;&gt;@leavehouse&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44913&quot;&gt;TcpStream::local_addr docs example code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pirh&quot;&gt;@Pirh&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44905&quot;&gt;docs for process::abort&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hunteke&quot;&gt;@hunteke&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45058&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44980&quot;&gt;books for next release&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44977&quot;&gt;mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brennie&quot;&gt;@brennie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45042&quot;&gt;trait summaries for std::fmt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&quot;&gt;@vitiral&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44935&quot;&gt;links to headers in README and CONTRIBUTING&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45024&quot;&gt;the issue number to doc_masked‚Äôs feature gate&lt;&#x2F;a&gt; and let &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44949&quot;&gt;htmldocck.py check for directories&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&quot;&gt;@MaikKlein&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45006&quot;&gt;typo in &lt;code class=&quot;highlighter-rouge&quot;&gt;librustc&#x2F;README.md&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; fixed typo: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44955&quot;&gt;geneartor -&amp;gt; generator&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44944&quot;&gt;trace_macros! to unstable book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44892&quot;&gt;missing fnty args rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45053&quot;&gt;missing links for AtomicBool&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;45017&quot;&gt;missing urls for Mutex&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 11th of October 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Red Hat adds Go, Clang&#x2F;LLVM, Rust compiler toolsets; updates GCC</title>
		<published>2017-10-04T13:00:55+00:00</published>
		<updated>2017-10-04T13:00:55+00:00</updated>
		<link href="https://kitallis.github.io/hades/red-hat-adds-go-clang-llvm-rust-compiler-toolsets-updates-gcc-pzxxc-mwcyrxceiyild7h/" type="text/html"/>
		<id>https://kitallis.github.io/hades/red-hat-adds-go-clang-llvm-rust-compiler-toolsets-updates-gcc-pzxxc-mwcyrxceiyild7h/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Some Excuse for a RustConf 2017 Travelogue</title>
		<published>2017-10-04T06:12:55+00:00</published>
		<updated>2017-10-04T06:12:55+00:00</updated>
		<link href="https://kitallis.github.io/hades/some-excuse-for-a-rustconf-2017-travelogue-odauj0kde1wiuqtzf58nq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/some-excuse-for-a-rustconf-2017-travelogue-odauj0kde1wiuqtzf58nq/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 75</title>
		<published>2017-10-01T00:00:00+00:00</published>
		<updated>2017-10-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-75-dzb8eranhheuorv4ezj0b/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-75-dzb8eranhheuorv4ezj0b/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt; abd included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44481&quot;&gt;RELEASES.md for 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;budziq&quot;&gt;@budziq&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44664&quot;&gt;the CONTRIBUTING.md ‚ÄúExternal Dependencies‚Äù section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vi&quot;&gt;@vi&lt;&#x2F;a&gt; rendered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44920&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[src]&lt;&#x2F;code&gt; links for trait implementors in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44897&quot;&gt;docs for size_of::&amp;lt;#[repr(C)]&amp;gt; items&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leavehouse&quot;&gt;@leavehouse&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44913&quot;&gt;TcpStream::local_addr docs example code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pirh&quot;&gt;@Pirh&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44905&quot;&gt;docs for process::abort&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44867&quot;&gt;doc-test: in Markdown tests, Use all of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h6&amp;gt;&lt;&#x2F;code&gt; as the test name&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44855&quot;&gt;docs for CStr, CString, OsStr, OsString&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44892&quot;&gt;missing fnty args rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44297&quot;&gt;suggestions for misspelled method names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44103&quot;&gt;comparison operators to must-use lint (under &lt;code class=&quot;highlighter-rouge&quot;&gt;fn_must_use&lt;&#x2F;code&gt; feature)&lt;&#x2F;a&gt; and prevented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44713&quot;&gt;rustdoc to get confused by text ‚Äúfn main‚Äù in a line comment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44625&quot;&gt;how ChildStd{in,out,err} FDs are closed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thombles&quot;&gt;@thombles&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44786&quot;&gt;diagnostics when attempting to match tuple enum variant with struct pattern&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tirr-c&quot;&gt;@tirr-c&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44735&quot;&gt;a friendlier error message for closure argument type mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44782].&quot;&gt;at parameter type on E0301&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44847&quot;&gt;at signature on unused lint&lt;&#x2F;a&gt; anded point &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44782&quot;&gt;at parameter type on E0301&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dbrgn&quot;&gt;@dbrgn&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44944&quot;&gt;trace_macros! to unstable book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pnkfelix&quot;&gt;@pnkfelix&lt;&#x2F;a&gt; some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44736&quot;&gt;fixes to mir-borrowck&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44789&quot;&gt;warning position in rustdoc code blocks&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 4th of October 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Blogging With GitLab and Hugo</title>
		<published>2017-09-28T00:00:00+00:00</published>
		<updated>2017-09-28T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/blogging-with-gitlab-and-hugo-eh-otgnzvgmj011euhc9k/" type="text/html"/>
		<id>https://kitallis.github.io/hades/blogging-with-gitlab-and-hugo-eh-otgnzvgmj011euhc9k/</id>
		<content type="html">&lt;p&gt;Previously, I attempted to maintain a blog using GitHub Pages. I was very unsuccessful at actually producing blog posts, though. I don‚Äôt care a lot about the appearance or maintenance of my blog site. What I want from the experience is the same experience I have writing Rust RFCs (because I have a lot of experience doing that):
I write some markdown. I commit and push. Other people can read it.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 74</title>
		<published>2017-09-24T00:00:00+00:00</published>
		<updated>2017-09-24T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-74-vhcrr6zpwtjtrg-keii5h/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-74-vhcrr6zpwtjtrg-keii5h/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt; and included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44781&quot;&gt;external files in documentation in rustdoc (RFC 1990)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44124&quot;&gt;E0623 for return types - both parameters are anonymous&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44297&quot;&gt;suggestions for misspelled method names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44103&quot;&gt;comparison operators to must-use lint (under &lt;code class=&quot;highlighter-rouge&quot;&gt;fn_must_use&lt;&#x2F;code&gt; feature)&lt;&#x2F;a&gt; and prevented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44713&quot;&gt;rustdoc to get confused by text ‚Äúfn main‚Äù in a line comment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44625&quot;&gt;how ChildStd{in,out,err} FDs are closed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44481&quot;&gt;RELEASES.md for 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thombles&quot;&gt;@thombles&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44786&quot;&gt;diagnostics when attempting to match tuple enum variant with struct pattern&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;napen123&quot;&gt;@napen123&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44794&quot;&gt;doc example to HashMap::hasher&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucasem&quot;&gt;@lucasem&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44797&quot;&gt;docs improvement in std::sync::{PoisonError, TryLockError}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tirr-c&quot;&gt;@tirr-c&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44735&quot;&gt;a friendlier error message for closure argument type mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed [at parameter type on E0301](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44782].&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;budziq&quot;&gt;@budziq&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44664&quot;&gt;the CONTRIBUTING.md ‚ÄúExternal Dependencies‚Äù section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44789&quot;&gt;warning position in rustdoc code blocks&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44026&quot;&gt;internal types&#x2F;traits from std docs via new #[doc(masked)] attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44549&quot;&gt;E0623 for earlybound and latebound for structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44651&quot;&gt;thread builder panics for nul bytes in thread names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44215&quot;&gt;suggestion of placing &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; statements into expanded code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44648&quot;&gt;size_of docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44622&quot;&gt;incorrect &lt;code class=&quot;highlighter-rouge&quot;&gt;into_inner&lt;&#x2F;code&gt; link in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;@nikomatsakis&lt;&#x2F;a&gt; reworked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44505&quot;&gt;the README.md for rustc and add other readmes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucasem&quot;&gt;@lucasem&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44778&quot;&gt;std::sync::RwLock docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spastorino&quot;&gt;@spastorino&lt;&#x2F;a&gt; linked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44776&quot;&gt;to Rust forge from CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44759&quot;&gt;english in create_dir_all docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44726&quot;&gt;librustc&#x2F;README.md diagram&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oconnor663&quot;&gt;@oconnor663&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44712&quot;&gt;an incorrect assertion in the doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::io::copy&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mssun&quot;&gt;@mssun&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44693&quot;&gt;a typo in rustc help menu&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44397&quot;&gt;codeblock color&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44350&quot;&gt;small id false positive in rustdoc html diff&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44554&quot;&gt;pub visibility for methods as well&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44773&quot;&gt;missing links for Arc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44703&quot;&gt;some missing links in io docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44671&quot;&gt;run button&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44661&quot;&gt;more links and put the link character to the left&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 27th of September 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Fun with Fixed Points</title>
		<published>2017-09-20T10:00:46+00:00</published>
		<updated>2017-09-20T10:00:46+00:00</updated>
		<link href="https://kitallis.github.io/hades/fun-with-fixed-points-phlfqxihd9winrfxuctiv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/fun-with-fixed-points-phlfqxihd9winrfxuctiv/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>An RFC for a Tokio revamp</title>
		<published>2017-09-19T00:00:00+00:00</published>
		<updated>2017-09-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/an-rfc-for-a-tokio-revamp-pzuoblvmbjwhqdh0euhcd/" type="text/html"/>
		<id>https://kitallis.github.io/hades/an-rfc-for-a-tokio-revamp-pzuoblvmbjwhqdh0euhcd/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 73</title>
		<published>2017-09-17T00:00:00+00:00</published>
		<updated>2017-09-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-73-ttbbgsxcazz6kritc8m7g/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-73-ttbbgsxcazz6kritc8m7g/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44026&quot;&gt;internal types&#x2F;traits from std docs via new #[doc(masked)] attribute&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44613&quot;&gt;rustdoc optimizations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44124&quot;&gt;E0623 for return types - both parameters are anonymous&lt;&#x2F;a&gt; and extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44549&quot;&gt;E0623 for earlybound and latebound for structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44297&quot;&gt;suggestions for misspelled method names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44103&quot;&gt;comparison operators to must-use lint (under &lt;code class=&quot;highlighter-rouge&quot;&gt;fn_must_use&lt;&#x2F;code&gt; feature)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44651&quot;&gt;thread builder panics for nul bytes in thread names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44215&quot;&gt;suggestion of placing &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; statements into expanded code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44648&quot;&gt;size_of docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44625&quot;&gt;how ChildStd{in,out,err} FDs are closed&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44622&quot;&gt;incorrect &lt;code class=&quot;highlighter-rouge&quot;&gt;into_inner&lt;&#x2F;code&gt; link in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eddyb&quot;&gt;@eddyb&lt;&#x2F;a&gt; pretty-printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44562&quot;&gt;unevaluated expressions in types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nikomatsakis&quot;&gt;@nikomatsakis&lt;&#x2F;a&gt; reworked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44505&quot;&gt;the README.md for rustc and add other readmes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44481&quot;&gt;RELEASES.md for 1.21.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44165&quot;&gt;display of cfg in rustdoc&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44397&quot;&gt;codeblock color&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44350&quot;&gt;small id false positive in rustdoc html diff&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44636&quot;&gt;short error message-format&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44554&quot;&gt;pub visibility for methods as well&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44079&quot;&gt;E0623 for LateBound and EarlyBound Regions&lt;&#x2F;a&gt; and extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44516&quot;&gt;E0623 for fn items&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44430&quot;&gt;mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tommyip&quot;&gt;@tommyip&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44453&quot;&gt;doc example to String::as_mut_str&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44449&quot;&gt;doc example to String::as_str&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44497&quot;&gt;doc example to str::from_boxed_utf8_unchecked&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smt923&quot;&gt;@smt923&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44472&quot;&gt;short doc examples for str::from_utf8_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toidiu&quot;&gt;@toidiu&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44467&quot;&gt;documentation to demonstrate mutability&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;napen123&quot;&gt;@napen123&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44457&quot;&gt;doc examples for str::as_bytes_mut&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44477&quot;&gt;doc examples to str::from_utf8_unchecked_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frehberg&quot;&gt;@frehberg&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44378&quot;&gt;UdpSocket API doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44413&quot;&gt;the man directory to a subdirectory&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44569&quot;&gt;‚Äúavoid‚Äù instead of ‚Äúdisable‚Äù because it‚Äôs a better word there&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44386&quot;&gt;mispositioned error indicators&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshlf&quot;&gt;@joshlf&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44396&quot;&gt;std::thread::LocalKey limitation with initializers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;@jonhoo&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44609&quot;&gt;that HashMap::new and HashSet::new do not allocate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44368&quot;&gt;double count of ids when using ‚Äìenable-commonmark&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rwakulszowa&quot;&gt;@rwakulszowa&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44521&quot;&gt;an example of std::str::encode_utf16&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44572&quot;&gt;return type of &lt;code class=&quot;highlighter-rouge&quot;&gt;String::from_utf16_lossy&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adlerd&quot;&gt;@adlerd&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44534&quot;&gt;drain_filter doctest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44536&quot;&gt;example in transmute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;42triangles&quot;&gt;@42triangles&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44485&quot;&gt;an example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::str::into_boxed_bytes()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;carols10cents&quot;&gt;@carols10cents&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44476&quot;&gt;label explanations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44388&quot;&gt;the behavior of UDP sockets wrt. multiple addresses in &lt;code class=&quot;highlighter-rouge&quot;&gt;connect&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43949&quot;&gt;compile_fail&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44254&quot;&gt;rendering of const keyword for functions&lt;&#x2F;a&gt;, reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44347&quot;&gt;false positives number in rustdoc html diff&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44541&quot;&gt;openoptions docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 20th of September 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Password Manager In Rust Using Argon2</title>
		<published>2017-09-12T00:00:00+00:00</published>
		<updated>2017-09-12T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/password-manager-in-rust-using-argon2-ss2nc61atb5vykjxgg-25/" type="text/html"/>
		<id>https://kitallis.github.io/hades/password-manager-in-rust-using-argon2-ss2nc61atb5vykjxgg-25/</id>
		<content type="html">&lt;h1 id=&quot;my-second-cli-application-in-rust-was-so-fun&quot;&gt;My second CLI application in rust was so fun!&lt;&#x2F;h1&gt;
&lt;p&gt;I‚Äôve had an itch to write a better password manager using my favorite
language (rust), and this last weekend I decided to give it a go.
I‚Äôve spent the last year writing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;artifact&lt;&#x2F;a&gt; command line
application (which just hit 1.0, check it out!).&lt;&#x2F;p&gt;
&lt;p&gt;I had already written a ‚Äúvault‚Äù password manager in python, called
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;litevault&quot;&gt;litevault&lt;&#x2F;a&gt; using scrypt to decrypt AND encrypt the passwords.
That was cool, but had several issues:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Didn‚Äôt run on python3. I‚Äôm pretty good at writing for both but
I kept hitting minor bugs and finally just gave up.&lt;&#x2F;li&gt;
  &lt;li&gt;Adding passwords was a pain ‚Äì I wrote a helper to ‚Äúmerge‚Äù two
vaults but it was a nerve wracking experience.&lt;&#x2F;li&gt;
  &lt;li&gt;The thought of forgetting to commit the vault was scarry ‚Äì the
passwords were randomly generated so they would be just &lt;em&gt;gone&lt;&#x2F;em&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I have kept my eye on the application &lt;a href=&quot;http:&#x2F;&#x2F;masterpasswordapp.com&#x2F;&quot;&gt;masterpassword&lt;&#x2F;a&gt; for some time, but
I‚Äôve never been quite happy with its mixture of features. Why does it need
to know my name? What is up with the colorful symbols coresponding to a
password?&lt;&#x2F;p&gt;
&lt;p&gt;All I wanted was something that using a hash of the password for
validation purposes, and then site passwords are just a hash of the
same password. The setings, reference hash and existing sites should
be stored in a simple toml file, which can be put on github.&lt;&#x2F;p&gt;
&lt;p&gt;So I set out to write it and have completed the working implementation:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;novault&quot;&gt;novault&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-is-da-best&quot;&gt;Rust is da best&lt;&#x2F;h2&gt;
&lt;p&gt;The first thing that hit me was how quickly I was up and running.  I started by
thinking I would use SHA512 hashing and quickly &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&#x2F;rust-openssl&quot;&gt;found a library&lt;&#x2F;a&gt;. I used
&lt;a href=&quot;https:&#x2F;&#x2F;www.google.com&#x2F;search?q=rust+cargo+add&amp;amp;ie=utf-8&amp;amp;oe=utf-8&quot;&gt;cargo-edit&lt;&#x2F;a&gt; to achieve an impresive pace of adding libraries ‚Äì every
library was a quick cli command away. Having written a cli app before, I knew
what I wanted. I used a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;stdcli&quot;&gt;list of cli libraries&lt;&#x2F;a&gt; I had compiled to cut
through my requirements like butter. Within a few hours of work I had a working
prototype that compiled and &lt;em&gt;actually ran&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I spent the next few hours cleaning up the docs. I discovered that maybe SHA512
wasn‚Äôt secure enough for storing the hash in plain-text on the internet so
instead settled on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Argon2&quot;&gt;Argon2, the winner of the 2015 Password Hashing
Competition&lt;&#x2F;a&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;argon2rs&lt;&#x2F;code&gt; library was a quick &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo add&lt;&#x2F;code&gt; away, and the docs
could be read with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo doc --open -p argon2rs&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I refactored the library to use types for everything I cared about. It is now
IMPOSSIBLE to serialize the user‚Äôs master password (outside of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure.rs&lt;&#x2F;code&gt;), and
serializing a site password (even PRINTING it) requires using it‚Äôs
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password.audit_this&lt;&#x2F;code&gt; attribute.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-application&quot;&gt;The Application&lt;&#x2F;h2&gt;
&lt;p&gt;The NoVault application itself is now in a pretty good state.  I would really
appreciate some people more versed in security to give it an audit, as well as
any contributions or tests anyone wants to contribute. It can currently be
installed by installing rust and using&lt;&#x2F;p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cargo install novault
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;I will probably start actually using it in the comming month. For now I am
just using it to store my reddit password, which is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;dotfiles&quot;&gt;on github&lt;&#x2F;a&gt;. Feedback
and audits would be great!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 72</title>
		<published>2017-09-10T00:00:00+00:00</published>
		<updated>2017-09-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-72-phctaztlptp8xictqaxov/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-72-phctaztlptp8xictqaxov/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44026&quot;&gt;internal types&#x2F;traits from std docs via new #[doc(masked)] attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44079&quot;&gt;E0623 for LateBound and EarlyBound Regions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44124&quot;&gt;E0623 for return types - both parameters are anonymous&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44430&quot;&gt;mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tommyip&quot;&gt;@tommyip&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44453&quot;&gt;doc example to String::as_mut_str&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44449&quot;&gt;doc example to String::as_str&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;smt923&quot;&gt;@smt923&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44472&quot;&gt;short doc examples for str::from_utf8_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toidiu&quot;&gt;@toidiu&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44467&quot;&gt;documentation to demonstrate mutability&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;napen123&quot;&gt;@napen123&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44457&quot;&gt;doc examples for str::as_bytes_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frehberg&quot;&gt;@frehberg&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44378&quot;&gt;UdpSocket API doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44413&quot;&gt;the man directory to a subdirectory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshlf&quot;&gt;@joshlf&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44396&quot;&gt;std::thread::LocalKey limitation with initializers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laumann&quot;&gt;@laumann&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44297&quot;&gt;suggestions for misspelled method names&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43949&quot;&gt;compile_fail&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44254&quot;&gt;rendering of const keyword for functions&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44165&quot;&gt;display of cfg in rustdoc&lt;&#x2F;a&gt;, codeblock &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44397&quot;&gt;color&lt;&#x2F;a&gt;, reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44347&quot;&gt;false positives number in rustdoc html diff&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44350&quot;&gt;small id false positive in rustdoc html diff&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qnighy&quot;&gt;@qnighy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43426&quot;&gt;hints when intercrate ambiguity causes overlap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43849&quot;&gt;new ‚ÄúImplementations on Foreign Types‚Äù section to traits in rustdoc&lt;&#x2F;a&gt; and expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44194&quot;&gt;on using rustup custom toolchains in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44274&quot;&gt;rustdoc tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MarkMcCaskey&quot;&gt;@MarkMcCaskey&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44206&quot;&gt;unimplemented! docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44268&quot;&gt;invalid doctest from bootstrap.py&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WiSaGaN&quot;&gt;@WiSaGaN&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44330&quot;&gt;link typo in 1.20.0 release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakllsch&quot;&gt;@jakllsch&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44321&quot;&gt;docs in extended distribution only if enabled&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lu-zero&quot;&gt;@lu-zero&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44328&quot;&gt;the incorrect documentation for from_str&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44313&quot;&gt;dead test functions from rustbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kallisti5&quot;&gt;@kallisti5&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44315&quot;&gt;an example to get UNIX_EPOCH in seconds in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::time&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 13th of September 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 71</title>
		<published>2017-09-03T00:00:00+00:00</published>
		<updated>2017-09-03T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-71-zp-sxeh3n0lwodtlnsdl1/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-71-zp-sxeh3n0lwodtlnsdl1/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The switch to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;Pulldown&lt;&#x2F;a&gt; for the rust doc rendering has finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;started&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qnighy&quot;&gt;@qnighy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43426&quot;&gt;hints when intercrate ambiguity causes overlap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43849&quot;&gt;new ‚ÄúImplementations on Foreign Types‚Äù section to traits in rustdoc&lt;&#x2F;a&gt;, hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44026&quot;&gt;internal types&#x2F;traits from std docs via new #[doc(masked)] attribute&lt;&#x2F;a&gt; and expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44194&quot;&gt;on using rustup custom toolchains in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44079&quot;&gt;E0623 for LateBound and EarlyBound Regions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44124&quot;&gt;E0623 for return types - both parameters are anonymous&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44274&quot;&gt;tests rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MarkMcCaskey&quot;&gt;@MarkMcCaskey&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44206&quot;&gt;unimplemented! docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; deprecated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44138&quot;&gt;several flags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; stabilised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43949&quot;&gt;compile_fail&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44254&quot;&gt;rendering of const keyword for functions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44165&quot;&gt;display of cfg in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ishitatsuyuki&quot;&gt;@ishitatsuyuki&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42588&quot;&gt;unused-extern-crate warn-by-default&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;llogiq&quot;&gt;@llogiq&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44104&quot;&gt;a lowercase suggestion to unknown_lints&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43886&quot;&gt;clippy as a submodule&lt;&#x2F;a&gt;, `](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44059).&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystor&quot;&gt;@mystor&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43918&quot;&gt;highlight of # which does not start an attribute in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;@nrc&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44238&quot;&gt;the Pulldown&#x2F;hoedown warnings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44172&quot;&gt;link in unstable book entry for Generators&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expandws &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44209&quot;&gt;docs of multi-address behavior of some UDP&#x2F;TCP APIs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44205&quot;&gt;typo in doc &lt;code class=&quot;highlighter-rouge&quot;&gt;ToSocketAddrs&lt;&#x2F;code&gt; example&lt;&#x2F;a&gt; and rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44117&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::net::ToSocketAddrs&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44231&quot;&gt;release notes on associated constants&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Phlosioneer&quot;&gt;@Phlosioneer&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44230&quot;&gt;typo in 1.20.0 release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;daboross&quot;&gt;@daboross&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44114&quot;&gt;that VecDeque::swap can panic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44256&quot;&gt;html-diff-rs version&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44192&quot;&gt;invalid display of enum sub-fields docs&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44135&quot;&gt;invalid linker position&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 6th of September 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Distribution Of Rust Binaries</title>
		<published>2017-09-01T00:00:00+00:00</published>
		<updated>2017-09-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/distribution-of-rust-binaries-ln3kdgev1ft0bx2us5lzp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/distribution-of-rust-binaries-ln3kdgev1ft0bx2us5lzp/</id>
		<content type="html">&lt;h1 id=&quot;rust-ergonomics-101-fast-and-easy-access-to-the-tools&quot;&gt;Rust ergonomics 101: fast and easy access to the tools&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;One of the pain points often mentioned around rust is the long compilation
times. While this is certainly an issue I would like addressed, it is often
over-hyped in my opinion when talking about developing in rust.&lt;&#x2F;p&gt;
&lt;p&gt;However, when trying to download applications distributed in rust, the compile
times become a &lt;em&gt;huge pain&lt;&#x2F;em&gt; since the standard as of today seems to be to
distribute applications via cargo. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo install &amp;lt;crate&amp;gt;&lt;&#x2F;code&gt; requires the full
download and compilation of all crate dependencies, which can easily take more
than half an hour for several applications.&lt;&#x2F;p&gt;
&lt;p&gt;This is unnacceptable in my opinion, and it really harms rust as a language
that tools like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rustfix&lt;&#x2F;code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cargo-edit&lt;&#x2F;code&gt;, etc have to be installed through
cargo. When I want to create a fake virtual env I require all my contributors
to have these in their local path ‚Äì but setting up all these tools takes
upwards of 40 minutes on my laptop (!).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;one-possible-solution-0install&quot;&gt;One possible solution: 0install&lt;&#x2F;h2&gt;
&lt;p&gt;The solution is simple: rust allows extremly easy cross compilation and
deployment of binaries through the amazing template &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&#x2F;trust&quot;&gt;trust&lt;&#x2F;a&gt; which uses
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&#x2F;cross&quot;&gt;cross&lt;&#x2F;a&gt;. In the future I would like to make a script for setting up this
template, but for now it works quite well and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;many&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;rust&lt;&#x2F;a&gt; projects use
it.&lt;&#x2F;p&gt;
&lt;p&gt;However, distributing a binary is not enough ‚Äì there needs to be an easy way
to install it for any platform ‚Äì whether that be included in a build script,
a ‚Äúvirtual environment‚Äù, or a user‚Äôs desktop. I thought about going out and
creating such a tool and then I came accross &lt;a href=&quot;http:&#x2F;&#x2F;0install.net&#x2F;&quot;&gt;0install&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;0install relies on only a &lt;em&gt;webpage&lt;&#x2F;em&gt; for knowing how to install software.
The webpage simply needs to include the xml data of the binaries and
dependencies ‚Äì and &lt;em&gt;that‚Äôs it&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I like the design philosophy of 0install, but I had an impossible time
&lt;em&gt;actually installing it&lt;&#x2F;em&gt; on my arch linux system. There is an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0install&#x2F;0install&#x2F;issues&#x2F;58&quot;&gt;open bug&lt;&#x2F;a&gt;
about this. In addition, I opened &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0install&#x2F;0install&#x2F;issues&#x2F;59&quot;&gt;another one&lt;&#x2F;a&gt; requesting a pre-compiled
binary. Since 0install is written in OCaml, I don‚Äôt know how likely
this is to be fulfilled.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;another-solution-where-rust-can-shine&quot;&gt;Another Solution: where rust can shine&lt;&#x2F;h2&gt;
&lt;p&gt;Distributing an easy to install binary is an area where rust can really shine.
I &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;already distribute artifact&lt;&#x2F;a&gt; as a pre-compiled binary and it is
works really well.&lt;&#x2F;p&gt;
&lt;p&gt;So this blog post might be the lanch of my next project: a simple binary
package manager written in rust. The requirements are similar to
0install but I am trying to make it even simpler. I call the tool
wpkg (‚Äúweb package‚Äù, like wget but for package installation). I‚Äôve started
the initial design approach and would love to know who is interested
and if anyone might want to join the effort.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;wpkg&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;wpkg&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you have an opinion (either positive or negative) please
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;wpkg&#x2F;issues&quot;&gt;open an issue&lt;&#x2F;a&gt; and let me know!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;edit-nix-to-the-rescue&quot;&gt;Edit: Nix to the rescue&lt;&#x2F;h2&gt;
&lt;p&gt;Although this doesn‚Äôt meet quite ALL my requirements (mainly that it still
requires packaging in the Nix repo), I am very interested in the &lt;a href=&quot;https:&#x2F;&#x2F;nixos.org&#x2F;nix&#x2F;&quot;&gt;Nix package
manager&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;dzone.com&#x2F;articles&#x2F;isolated-development-environment-using-nix&quot;&gt;This blog post&lt;&#x2F;a&gt; details how it can be used as a virtualenv
esq package manager.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Broken Pipe</title>
		<published>2017-08-30T10:00:02+00:00</published>
		<updated>2017-08-30T10:00:02+00:00</updated>
		<link href="https://kitallis.github.io/hades/broken-pipe-zyndhvzybar7iaf2znidj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/broken-pipe-zyndhvzybar7iaf2znidj/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Episode #9 - A Once in a Lifetime RFC</title>
		<published>2017-08-28T15:00:00-07:00</published>
		<updated>2017-08-28T15:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/episode-9-a-once-in-a-lifetime-rfc-1z6vn8yrdxio3-fgcwntz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/episode-9-a-once-in-a-lifetime-rfc-1z6vn8yrdxio3-fgcwntz/</id>
		<content type="html">&lt;p&gt;This week we look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;2094&quot;&gt;RFC 2094&lt;&#x2F;a&gt; &amp;quot;Non-lexical lifetimes&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 70</title>
		<published>2017-08-27T00:00:00+00:00</published>
		<updated>2017-08-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-70-jh5vctwfco9bgnwypm6sj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-70-jh5vctwfco9bgnwypm6sj/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;rewrite of rustdoc&lt;&#x2F;a&gt; is still under heavy development. Don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qnighy&quot;&gt;@qnighy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43426&quot;&gt;hints when intercrate ambiguity causes overlap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;huntiep&quot;&gt;@huntiep&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43984&quot;&gt;Try error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43849&quot;&gt;new ‚ÄúImplementations on Foreign Types‚Äù section to traits in rustdoc&lt;&#x2F;a&gt; and hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44026&quot;&gt;internal types&#x2F;traits from std docs via new #[doc(masked)] attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44103&quot;&gt;comparison operators to must-use lint (under &lt;code class=&quot;highlighter-rouge&quot;&gt;fn_must_use&lt;&#x2F;code&gt; feature)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ishitatsuyuki&quot;&gt;@ishitatsuyuki&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42588&quot;&gt;unused-extern-crate warn-by-default&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;llogiq&quot;&gt;@llogiq&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44104&quot;&gt;a lowercase suggestion to unknown_lints&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44079&quot;&gt;E0623 for LateBound and EarlyBound Regions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43886&quot;&gt;clippy as a submodule&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44059&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ok(())&lt;&#x2F;code&gt; when encountering &lt;code class=&quot;highlighter-rouge&quot;&gt;Result::&amp;lt;(), E&amp;gt;::Ok()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mystor&quot;&gt;@mystor&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43918&quot;&gt;highlight of # which does not start an attribute in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, compile &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43949&quot;&gt;fail stable&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43929&quot;&gt;placement of &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruuda&quot;&gt;@ruuda&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43631&quot;&gt;‚Äúderef coercions‚Äù links to new book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43700&quot;&gt;E0623 for structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shanavas786&quot;&gt;@shanavas786&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43996&quot;&gt;typo in doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43854&quot;&gt;out missing if conditional&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44072&quot;&gt;inconsistent doc headings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Jouan&quot;&gt;@Jouan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43979&quot;&gt;links for impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44043&quot;&gt;windows build instructions in README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;remexre&quot;&gt;@remexre&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44039&quot;&gt;null_mut on the pointer primitive docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43978&quot;&gt;missing links in docs&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43977&quot;&gt;outline when details have focus&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43966&quot;&gt;duplicates in rustdoc&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44090&quot;&gt;missing link in string doc&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44010&quot;&gt;missing links for Read trait&lt;&#x2F;a&gt; and rollup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;44033&quot;&gt;of 5 pull requests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 30th of August 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Wires</title>
		<published>2017-08-23T06:00:30+00:00</published>
		<updated>2017-08-23T06:00:30+00:00</updated>
		<link href="https://kitallis.github.io/hades/wires-kbiqbn2op3mt2rxb6gv4g/" type="text/html"/>
		<id>https://kitallis.github.io/hades/wires-kbiqbn2op3mt2rxb6gv4g/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Experiments In NES JIT Compilation</title>
		<published>2017-08-20T11:35:37-06:00</published>
		<updated>2017-08-20T11:35:37-06:00</updated>
		<link href="https://kitallis.github.io/hades/experiments-in-nes-jit-compilation-o4v54-rkxns89zlqyzcm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/experiments-in-nes-jit-compilation-o4v54-rkxns89zlqyzcm/</id>
		<content type="html">&lt;p&gt;Inspired by the always-incredible work on Dolphin, I decided to write myself an NES emulator called Corrosion a couple years ago. I managed to get it working well enough to play basic games, and then put the project aside. This post is not about the emulator itself, but rather the JIT compiler I added to it last year and the upgrades to said JIT compiler I‚Äôve made over the past few weeks.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 69</title>
		<published>2017-08-20T00:00:00+00:00</published>
		<updated>2017-08-20T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-69-f1-rdsn9lvl4ihirszeag/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-69-f1-rdsn9lvl4ihirszeag/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;rewrite of rustdoc&lt;&#x2F;a&gt; is still under heavy development. Don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43641&quot;&gt;lint casting signed integers smaller than &lt;code class=&quot;highlighter-rouge&quot;&gt;isize&lt;&#x2F;code&gt; to raw pointers&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43929&quot;&gt;placement of &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruuda&quot;&gt;@ruuda&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43631&quot;&gt;‚Äúderef coercions‚Äù links to new book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43700&quot;&gt;E0623 for structs&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43851&quot;&gt;error message for one named, one anonymous lifetime parameters - underline Type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qnighy&quot;&gt;@qnighy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43426&quot;&gt;hints when intercrate ambiguity causes overlap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shanavas786&quot;&gt;@shanavas786&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43996&quot;&gt;typo in doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;huntiep&quot;&gt;@huntiep&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43984&quot;&gt;Try error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43854&quot;&gt;out missing if conditional&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43849&quot;&gt;new ‚ÄúImplementations on Foreign Types‚Äù section to traits in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43978&quot;&gt;missing links in docs&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43977&quot;&gt;outline when details have focus&lt;&#x2F;a&gt;, compile &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43949&quot;&gt;fail stable&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43966&quot;&gt;duplicates in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43870&quot;&gt;deref suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;@nrc&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43782&quot;&gt;include! in doc tests&lt;&#x2F;a&gt; and uplifted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43922&quot;&gt;fix for include! in doc tests to beta&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Eijebong&quot;&gt;@Eijebong&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43814&quot;&gt;some typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43819&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;include*&lt;&#x2F;code&gt; macros&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43965&quot;&gt;a minor Iterator::filter_map description rewording&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43919&quot;&gt;a minor rewrite of char primitive unicode intro&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43883&quot;&gt;writable behavior of readonly-named &lt;code class=&quot;highlighter-rouge&quot;&gt;Permissions&lt;&#x2F;code&gt; methods&lt;&#x2F;a&gt; and rewrote&#x2F;reorganized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43848&quot;&gt;docs for stack size&#x2F;thread names for spawned threads&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43790&quot;&gt;the ‚Äúpasses‚Äù chapter of the rustdoc book&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43914&quot;&gt;the books for next release&lt;&#x2F;a&gt; and shipped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43863&quot;&gt;the rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43933&quot;&gt;bad span for attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;anthonyclays&quot;&gt;@anthonyclays&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43928&quot;&gt;typo in RefCell::get_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Songbird0&quot;&gt;@Songbird0&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43912&quot;&gt;E0106 - field lifetimes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adrian5&quot;&gt;@adrian5&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43915&quot;&gt;typo in doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;partim&quot;&gt;@partim&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43905&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;std::hash::Hasher::finish()&lt;&#x2F;code&gt; does not reset the hasher&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fourchaux&quot;&gt;@Fourchaux&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43891&quot;&gt;typos &amp;amp; us spellings&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; put &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43862&quot;&gt;auto-hidden docblock labels in line with the toggle in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43868&quot;&gt;missing newline in Deref docs to fix rendering&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43736&quot;&gt;external impls to implementors js in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43803&quot;&gt;missing links doc&lt;&#x2F;a&gt;, udpdated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43901&quot;&gt;error message for unsized union field&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43864&quot;&gt;help for static method invalid use&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43867&quot;&gt;useless help part&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43850&quot;&gt;a note to unused variables&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 23rd of August 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Episode #8 - An Existential Crisis</title>
		<published>2017-08-15T17:00:00-07:00</published>
		<updated>2017-08-15T17:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/episode-8-an-existential-crisis-oqsf8gq8mbjpeba7830wq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/episode-8-an-existential-crisis-oqsf8gq8mbjpeba7830wq/</id>
		<content type="html">&lt;p&gt;This week we look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;2071&quot;&gt;RFC 2071&lt;&#x2F;a&gt; &amp;quot;Add impl Trait type alias and variable declarations&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 68</title>
		<published>2017-08-13T00:00:00+00:00</published>
		<updated>2017-08-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-68-aj8gfw-xs9el8pw8r9sxd/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-68-aj8gfw-xs9el8pw8r9sxd/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;rewrite of rustdoc&lt;&#x2F;a&gt; is still under heavy development. Don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43641&quot;&gt;lint casting signed integers smaller than &lt;code class=&quot;highlighter-rouge&quot;&gt;isize&lt;&#x2F;code&gt; to raw pointers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruuda&quot;&gt;@ruuda&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43631&quot;&gt;‚Äúderef coercions‚Äù links to new book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;@nrc&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43782&quot;&gt;include! in doc tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pengowen123&quot;&gt;@pengowen123&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43813&quot;&gt;unused_result lint triggering when a function returns &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;&#x2F;code&gt; or an empty enum&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Eijebong&quot;&gt;@Eijebong&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43814&quot;&gt;some typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43819&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;include*&lt;&#x2F;code&gt; macros.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43700&quot;&gt;E0623 for structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43790&quot;&gt;the ‚Äúpasses‚Äù chapter of the rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43339&quot;&gt;lint for int to ptr cast&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qnighy&quot;&gt;@qnighy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43426&quot;&gt;hints when intercrate ambiguity causes overlap.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43829&quot;&gt;suggest methods in certain cases&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43803&quot;&gt;missing links doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43176&quot;&gt;wording for E0122&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43348&quot;&gt;all OS-specific modules in libstd doc&lt;&#x2F;a&gt; and type-checked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43745&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;break value;&lt;&#x2F;code&gt; even outside of &lt;code class=&quot;highlighter-rouge&quot;&gt;loop {}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43484&quot;&gt;at return type always when type mismatch against it&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43627&quot;&gt;release notes for 1.20&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruuda&quot;&gt;@ruuda&lt;&#x2F;a&gt; detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43632&quot;&gt;relative urls in tidy check&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; de-orphaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43709&quot;&gt;extended information&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43728&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#[must_use]&lt;&#x2F;code&gt; for functions&lt;&#x2F;a&gt; and made the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43726&quot;&gt;e05XX odyssey&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43736&quot;&gt;external impls to implementors js in rustdoc&lt;&#x2F;a&gt;, stopped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43715&quot;&gt;using URL shortener in docs&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43760&quot;&gt;broken CSS in search results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43724&quot;&gt;std::ops docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tchajed&quot;&gt;@tchajed&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43823&quot;&gt;GitHub pull request documentation link&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43812&quot;&gt;doc tests in rustdoc&lt;&#x2F;a&gt; and documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43792&quot;&gt;the doc attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Eijebong&quot;&gt;@Eijebong&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43794&quot;&gt;some typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;natboehm&quot;&gt;@natboehm&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43721&quot;&gt;more explanation for Deref in String docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;j-browne&quot;&gt;@j-browne&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43793&quot;&gt;broken links in Arc documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;prisme60&quot;&gt;@prisme60&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43783&quot;&gt;typo corersponding -&amp;gt; corresponding&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mattico&quot;&gt;@mattico&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43779&quot;&gt;typo in unicode char definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ubsan&quot;&gt;@ubsan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43773&quot;&gt;a typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pornel&quot;&gt;@pornel&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43720&quot;&gt;the extern constant syntax in hint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ivanbakel&quot;&gt;@ivanbakel&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43582&quot;&gt;mutable vars being marked used when they weren‚Äôt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43397&quot;&gt;warn on unused field on union&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43691&quot;&gt;rustdoc error on ‚Äò\0‚Äô&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43558&quot;&gt;union and const colors&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43747&quot;&gt;headers linking&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43791&quot;&gt;file docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43795&quot;&gt;enum variants display in rustdoc&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43737&quot;&gt;error message when duplicate names for type and trait method&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43699&quot;&gt;missing error code for private method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 16th of August 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Episode #7 - Unwrapping a great RFC</title>
		<published>2017-08-08T16:00:00-07:00</published>
		<updated>2017-08-08T16:00:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/episode-7-unwrapping-a-great-rfc-ocitwtwmx54eph7uuei1n/" type="text/html"/>
		<id>https://kitallis.github.io/hades/episode-7-unwrapping-a-great-rfc-ocitwtwmx54eph7uuei1n/</id>
		<content type="html">&lt;p&gt;This week we look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;2091&quot;&gt;RFC 2091&lt;&#x2F;a&gt; &amp;quot;Implicit caller location&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 67</title>
		<published>2017-08-06T00:00:00+00:00</published>
		<updated>2017-08-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-67-cjrnlmoekmxxu1e3hahpk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-67-cjrnlmoekmxxu1e3hahpk/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;rewrite of rustdoc&lt;&#x2F;a&gt; is still under heavy development. Don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43176&quot;&gt;wording for E0122&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43348&quot;&gt;all OS-specific modules in libstd doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43641&quot;&gt;lint casting signed integers smaller than &lt;code class=&quot;highlighter-rouge&quot;&gt;isize&lt;&#x2F;code&gt; to raw pointers&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43484&quot;&gt;at return type always when type mismatch against it&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43627&quot;&gt;release notes for 1.20&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruuda&quot;&gt;@ruuda&lt;&#x2F;a&gt; detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43632&quot;&gt;relative urls in tidy check&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43631&quot;&gt;‚Äúderef coercions‚Äù links to new book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43397&quot;&gt;warn on unused field on union&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43691&quot;&gt;rustdoc error on ‚Äò\0‚Äô&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43558&quot;&gt;union and const colors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xliiv&quot;&gt;@xliiv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43423&quot;&gt;simple docs example for struct Cell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43515&quot;&gt;associated types in traits ‚Äúimplementors‚Äù section in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43529&quot;&gt;documentation for function pointers as a primitive&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43509&quot;&gt;[src] links to associated functions inside an impl block in rustdoc&lt;&#x2F;a&gt;, shrank &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43602&quot;&gt;headings in non-top-level docblocks in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43560&quot;&gt;docs for references as a primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;edaniels&quot;&gt;@edaniels&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43689&quot;&gt;typo in coerce_forced_unit docstring&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43652&quot;&gt;string slice doc&lt;&#x2F;a&gt;, fixed and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43619&quot;&gt;thread docs&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43585&quot;&gt;docs &amp;amp; doc examples for HashSet&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; uplifted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43640&quot;&gt;some comments to Doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43442&quot;&gt;field does not exist error: note fields if Levenshtein suggestion fails&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43519&quot;&gt;a couple more error explanations for posterity&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43618&quot;&gt;nomicon&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43409&quot;&gt;into_iter doc example more concise&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43563&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;from_str_radix&lt;&#x2F;code&gt; panic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; throw &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;errors when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 9th of August 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Parsing NES ROM Headers with nom</title>
		<published>2017-07-30T02:11:19+00:00</published>
		<updated>2017-07-30T02:11:19+00:00</updated>
		<link href="https://kitallis.github.io/hades/parsing-nes-rom-headers-with-nom-zglwc65lioeer-ypfamd6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/parsing-nes-rom-headers-with-nom-zglwc65lioeer-ypfamd6/</id>
		<content type="html">&lt;p&gt;Long, long ago (December 2015) I wanted to learn how emulators worked, so I decided to write an NES emulator. Not only that, but I opted to write it in Rust, a language which I had never used before. A crazy idea, to be certain, but once I was done I had indeed learned a great deal about emulators, the NES, and Rust.
Anyway, I‚Äôve been working on that project again lately, doing some maintenance work and upgrades.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 66</title>
		<published>2017-07-30T00:00:00+00:00</published>
		<updated>2017-07-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-66-2x-dbmypjfm-ghwcu5bsa/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-66-2x-dbmypjfm-ghwcu5bsa/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ended the first version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;the rewrite of rustdoc&lt;&#x2F;a&gt; using RLS. It‚Äôs far from done but don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43176&quot;&gt;wording for E0122&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xliiv&quot;&gt;@xliiv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43423&quot;&gt;simple docs example for struct Cell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43348&quot;&gt;all OS-specific modules in libstd doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43515&quot;&gt;associated types in traits ‚Äúimplementors‚Äù section in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43529&quot;&gt;documentation for function pointers as a primitive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43528&quot;&gt;rustdoc build only at the topmost stage&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43397&quot;&gt;warn on unused field on union&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; adjusted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43386&quot;&gt;new suggestions to the suggestion guidelines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;waywardmonkeys&quot;&gt;@waywardmonkeys&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43428&quot;&gt;some doc comment typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43413&quot;&gt;generic example of std::ops::Sub in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43374&quot;&gt;that sort_unstable is deterministic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43409&quot;&gt;into_iter example more concise&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43401&quot;&gt;the spelling of ‚Äúhomogeneous‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;s3rvac&quot;&gt;@s3rvac&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43379&quot;&gt;a missing verb to the description of std::process::ExitStatus::success()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43509&quot;&gt;[src] links to associated functions inside an impl block in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43455&quot;&gt;a note to Vec‚Äôs Extend&amp;lt;&amp;amp;T&amp;gt; impl about its slice specialization&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43541&quot;&gt;E0623 error message - both anonymous lifetime regions&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43298&quot;&gt;case with both anonymous lifetime parameters #43269&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pczarn&quot;&gt;@pczarn&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43432&quot;&gt;the macro parser theory description more accurate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43489&quot;&gt;better diagnostics and recovery for &lt;code class=&quot;highlighter-rouge&quot;&gt;mut ref&lt;&#x2F;code&gt; in patterns&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshlf&quot;&gt;@joshlf&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43456&quot;&gt;grammar in std::thread::spawn documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ivanbakel&quot;&gt;@ivanbakel&lt;&#x2F;a&gt; extended &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43479&quot;&gt;error message for mut borrow conflicts in loops&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43445&quot;&gt;major section headers self-links in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43446&quot;&gt;unions to whitelist of sidebar types in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43436&quot;&gt;layout of Fields section in documentation for unions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leshow&quot;&gt;@leshow&lt;&#x2F;a&gt; fixed docs: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43366&quot;&gt;BufReader&#x2F;File doesn‚Äôt need to be mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ranweiler&quot;&gt;@ranweiler&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43342&quot;&gt;usage of &lt;code class=&quot;highlighter-rouge&quot;&gt;compiler_builtins&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;no_std&lt;&#x2F;code&gt; binaries&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;lint for when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 2nd of August 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 65</title>
		<published>2017-07-23T00:00:00+00:00</published>
		<updated>2017-07-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-65-pkcz-v2jnrg9-pingu3r/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-65-pkcz-v2jnrg9-pingu3r/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ended the first version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;the rewrite of rustdoc&lt;&#x2F;a&gt; using RLS. It‚Äôs far from done but don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Emilgardis&quot;&gt;@Emilgardis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42270&quot;&gt;wrong report on closure args mismatch when a ref is expected but not found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43176&quot;&gt;wording for E0122&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;afshinm&quot;&gt;@afshinm&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43363&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;&#x2F;code&gt; sign to static lifetime help message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; adjusted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43386&quot;&gt;new suggestions to the suggestion guidelines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;waywardmonkeys&quot;&gt;@waywardmonkeys&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43428&quot;&gt;some doc comment typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43413&quot;&gt;generic example of std::ops::Sub in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xliiv&quot;&gt;@xliiv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43423&quot;&gt;simple docs example for struct Cell&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43374&quot;&gt;that sort_unstable is deterministic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43409&quot;&gt;into_iter example more concise&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43401&quot;&gt;the spelling of ‚Äúhomogeneous‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;s3rvac&quot;&gt;@s3rvac&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43379&quot;&gt;a missing verb to the description of std::process::ExitStatus::success()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; exposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43348&quot;&gt;all OS-specific modules in libstd doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;lint for when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43397&quot;&gt;warn on unused field on union&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42837&quot;&gt;docs on Error struct&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; reordered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43251&quot;&gt;span suggestions to appear below main labels&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Others&quot;&gt;@Others&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43256&quot;&gt;panic docs for Instant::duration_since&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43416&quot;&gt;an actual equivalent to filter_map doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43343&quot;&gt;an extra note to &lt;code class=&quot;highlighter-rouge&quot;&gt;late_bound_lifetime_arguments&lt;&#x2F;code&gt; error&#x2F;lint&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;perryprog&quot;&gt;@perryprog&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43323&quot;&gt;a less verbose output for unused arguments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42973&quot;&gt;JSON error byte position start at top of file&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43260&quot;&gt;explanatory error on &lt;code class=&quot;highlighter-rouge&quot;&gt;--print target-spec-json&lt;&#x2F;code&gt; without unstable options&lt;&#x2F;a&gt; and suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43178&quot;&gt;one-argument enum variant to fix type mismatch when applicable&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43368&quot;&gt;release notes for 1.19.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vbrandl&quot;&gt;@vbrandl&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43252&quot;&gt;default values for primitive types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 26th of July 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Nonlinear Model for Athletic Training</title>
		<published>2017-07-19T00:00:00+00:00</published>
		<updated>2017-07-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/nonlinear-model-for-athletic-training-uool-s0br2ttsnssdll5e/" type="text/html"/>
		<id>https://kitallis.github.io/hades/nonlinear-model-for-athletic-training-uool-s0br2ttsnssdll5e/</id>
		<content type="html">&lt;p&gt;This was research I conducted at Duke University to:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;mathematically model the relationship between athletic training and
performance and&lt;&#x2F;li&gt;
&lt;li&gt;use the model to optimize training protocols subject to constraints.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;For example, the model can relate the time it takes you to cycle 10 miles (your
performance metric) to the duration and intensity of your cycling training
(your training stress). Then, using an optimization algorithm, you can create a
training protocol that maximizes your performance on race day.&lt;&#x2F;p&gt;
&lt;p&gt;The model we developed accounts for important physiological effects, such as
saturation and over-training, that existing linear models in the literature
didn‚Äôt capture. Our model was&lt;&#x2F;p&gt;
&lt;div&gt;
\begin{gather*}
  p = p_0 + f - u \\
  \dot{f} + \frac{1}{\tau_1} f^\alpha = k_1 \sigma \\
  \dot{u} + \frac{1}{\tau_2} u^\beta = k_2 \sigma
\end{gather*}
&lt;&#x2F;div&gt;
&lt;p&gt;where \(p\) is performance as a function of time, \(p_0\) is the
individual‚Äôs performance in an untrained state, \(f\) is fitness as a
function of time, \(u\) is fatigue as a function of time, \(œÉ\) is training
stress impulse as a function of time, \(œÑ_1\) and \(œÑ_2\) are time
constants, \(k_1\) and \(k_2\) are gain terms, \(Œ±\) and \(Œ≤\) are
exponents that represent the model‚Äôs nonlinearities, and \(t\) is time. An
overdot indicates a time derivative. From a dynamical systems perspective, the
independent variable is
&lt;span class=&quot;nobreak&quot;&gt;\(t\),&lt;&#x2F;span&gt;
the state variables are \(f\) and
&lt;span class=&quot;nobreak&quot;&gt;\(u\),&lt;&#x2F;span&gt;
the initial conditions are \(f_0\) and
&lt;span class=&quot;nobreak&quot;&gt;\(u_0\),&lt;&#x2F;span&gt;
and the parameters are
&lt;span class=&quot;nobreak&quot;&gt;\(p_0\),&lt;&#x2F;span&gt;
&lt;span class=&quot;nobreak&quot;&gt;\(œÑ_1\),&lt;&#x2F;span&gt;
&lt;span class=&quot;nobreak&quot;&gt;\(œÑ_2\),&lt;&#x2F;span&gt;
&lt;span class=&quot;nobreak&quot;&gt;\(k_1\),&lt;&#x2F;span&gt;
&lt;span class=&quot;nobreak&quot;&gt;\(k_2\),&lt;&#x2F;span&gt;
&lt;span class=&quot;nobreak&quot;&gt;\(Œ±\),&lt;&#x2F;span&gt;
and
&lt;span class=&quot;nobreak&quot;&gt;\(Œ≤\).&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In addition to introducing the model, a core part of the research was using the
model to optimize training protocols subject to various realistic constraints
(such as limits on fatigue). The figure below is fig.¬†16 from the journal
article. It shows the result of optimizing a training protocol for an example
athlete to maximize performance after 12 weeks of training. The optimization
was subject to constraints related to the individual‚Äôs fitness and fatigue over
time. The prescribed training protocol in subfigure (c) is similar to the
accepted practice for training in preparation for a competition (initial
training progression, followed by a high-intensity phase, and then a taper).&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;BHK-2017-0013_fig16.svg&quot; style=&quot;width:28em&quot;
    alt=&quot;A figure with three plots sharing the same horizontal axis, which is labeled ‚Äút [time]‚Äù. The bottom plot, with vertical axis ‚ÄúœÉ [stress]‚Äù shows stress increase gradually at the beginning, then remain relatively constant, then drop to almost zero at the start of the taper, and then remain near zero until the end. The same plot is overlaid with lines indicating two constraints; the fitness-based constraint is active during the gradual increase at the beginning, and the fatigue-based constraint is active during the middle. The top plot, with vertical axis ‚Äúp [performance]‚Äù, shows the performance dip slightly initially, then increase at a decreasing rate for most of the time, then increase sharply at the onset of the taper, and then flatten out until the end. The middle plot, with vertical axis ‚Äúu&#x2F;f‚Äù, shows the ratio of fatigue to performance increase sharply at the beginning, followed by a relatively constant middle, and then a moderately rapid decrease starting at the onset of the taper. The same plot illustrates a constraint on the fatigue&#x2F;fitness ratio of 0.8.&quot;&gt;
    &lt;figcaption&gt;
    Optimized training schedule to maximize performance \(p\) after 12 weeks of
    training. Subfigure (a) shows the performance as a function of time \(t\)
    during training, (b) shows the ratio of fatigue \(u\) to fitness \(f\), and
    (c) shows the prescribed training stress \(œÉ\).
    &lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;This research provides a new mathematical foundation for modeling and
optimizing athletic training protocols subject to an individual athlete‚Äôs
physiology, constraints, and performance goals. See the &lt;a href=&quot;#abstract&quot;&gt;abstract&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;BHK-2017-0013.pdf&quot;&gt;journal article¬†(PDF)&lt;&#x2F;a&gt; for more details.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;publication&quot;&gt;Publication&lt;&#x2F;h2&gt;
&lt;p&gt;Turner, J. D., M. J. Mazzoleni, J. A. Little, D. Sequeira, and B. P. Mann. ‚ÄúA
nonlinear model for the characterization and optimization of athletic training
and performance‚Äù. &lt;em&gt;Biomedical Human Kinetics,&lt;&#x2F;em&gt; 9.1 (Feb. 2017), pp. 82‚Äì93.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;BHK-2017-0013.pdf&quot;&gt;journal article¬†(PDF)&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;dx.doi.org&#x2F;10.1515&#x2F;bhk-2017-0013&quot;&gt;journal
webpage&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;&#x2F;h2&gt;
&lt;p&gt;This is the abstract from the journal article:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Study aim:&lt;&#x2F;strong&gt; Mathematical models of the relationship between training and
performance facilitate the design of training protocols to achieve
performance goals. However, current linear models do not account for
nonlinear physiological effects such as saturation and over-training. This
severely limits their practical applicability, especially for optimizing
training strategies. This study describes, analyzes, and applies a new
nonlinear model to account for these physiological effects.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Material and methods:&lt;&#x2F;strong&gt; This study considers the equilibria and step
response of the nonlinear differential equation model to show its
characteristics and trends, optimizes training protocols using genetic
algorithms to maximize performance by applying the model under various
realistic constraints, and presents a case study fitting the model to human
performance data.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Results:&lt;&#x2F;strong&gt; The nonlinear model captures the saturation and over-training effects;
produces realistic training protocols with training progression, a
high-intensity phase, and a taper; and closely fits the experimental
performance data. Fitting the model parameters to subsets of the data
identifies which parameters have the largest variability but reveals that the
performance predictions are relatively consistent.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Conclusions:&lt;&#x2F;strong&gt; These findings provide a new mathematical foundation for
modeling and optimizing athletic training routines subject to an individual‚Äôs
personal physiology, constraints, and performance goals.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;cite&gt;Turner, J.‚ÄâD., et al., Biomedical Human Kinetics, 2017.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 64</title>
		<published>2017-07-16T00:00:00+00:00</published>
		<updated>2017-07-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-64-l-zmhkq-uzifr-re0xeuw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-64-l-zmhkq-uzifr-re0xeuw/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ended the first version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&#x2F;rustdoc&quot;&gt;the rewrite of rustdoc&lt;&#x2F;a&gt; using RLS. It‚Äôs far from done but don‚Äôt hesitate to give it a try!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42503&quot;&gt;releases notes for 1.19&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42837&quot;&gt;docs on Error struct&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Emilgardis&quot;&gt;@Emilgardis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42270&quot;&gt;wrong report on closure args mismatch when a ref is expected but not found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; reordered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43251&quot;&gt;span suggestions to appear below main labels&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Others&quot;&gt;@Others&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43256&quot;&gt;panic docs for Instant::duration_since&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43176&quot;&gt;wording for E0122&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;errors when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43220&quot;&gt;TryFrom implementation for bool, f32 and f64&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43173&quot;&gt;a message when a variable name collides with a function name&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42670&quot;&gt;hint about the return code of panic!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42897&quot;&gt;pretty printing slightly&lt;&#x2F;a&gt; and tested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43152&quot;&gt;src&#x2F;doc once more&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43240&quot;&gt;the books.&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43187&quot;&gt;the Code of Conduct to the repository&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43229&quot;&gt;minor typo in std::path documentation.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42926&quot;&gt;what happens on failure in path ext is_file is_dir&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jgallag88&quot;&gt;@jgallag88&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43136&quot;&gt;warning to BufWriter documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43006&quot;&gt;some code&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43130&quot;&gt;spacing between trait functions in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43145&quot;&gt;a failure in case nothing to run was found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 19th of July 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Counting Fruit in Rust, Part 2</title>
		<published>2017-07-12T10:00:20+00:00</published>
		<updated>2017-07-12T10:00:20+00:00</updated>
		<link href="https://kitallis.github.io/hades/counting-fruit-in-rust-part-2-patdsu-pwgrjg54qeoqyi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/counting-fruit-in-rust-part-2-patdsu-pwgrjg54qeoqyi/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 63</title>
		<published>2017-07-09T00:00:00+00:00</published>
		<updated>2017-07-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-63-givqb9o9-ikmrpdqdnu5x/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-63-givqb9o9-ikmrpdqdnu5x/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;None.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42503&quot;&gt;releases notes for 1.19&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42837&quot;&gt;docs on Error struct&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fourchaux&quot;&gt;@Fourchaux&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42812&quot;&gt;basic typos in Doc Comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42670&quot;&gt;hint about the return code of panic!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Emilgardis&quot;&gt;@Emilgardis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42270&quot;&gt;wrong report on closure args mismatch when a ref is expected but not found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42897&quot;&gt;pretty printing slightly&lt;&#x2F;a&gt; and allowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42697&quot;&gt;setting the limit on std::io::Take&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;errors when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt;, cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43006&quot;&gt;some code&lt;&#x2F;a&gt; and add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43130&quot;&gt;spacing between trait functions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42836&quot;&gt;docs for Debug* structs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43093&quot;&gt;annotations to the resize fn&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42732&quot;&gt;pager support for &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain EXXXX&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boreeas&quot;&gt;@Boreeas&lt;&#x2F;a&gt; folded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42996&quot;&gt;E0612, E0613 into E0609&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43001&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt; message to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ops::Try&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42904&quot;&gt;suggestion include the line number&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43075&quot;&gt;links for typeck diagnostics without tripping tidy&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arielb1&quot;&gt;@arielb1&lt;&#x2F;a&gt; reported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43015&quot;&gt;the total number of errors on compilation failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43068&quot;&gt;markdown tests being run twice&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43050&quot;&gt;a minor fix in docs for Vec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andersk&quot;&gt;@andersk&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43041&quot;&gt;unintuitive argument order for Vec::dedup_by relation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42972&quot;&gt;toggle wrappers not generated correctly in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 12th of July 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Counting Fruit in Rust</title>
		<published>2017-07-05T10:00:58+00:00</published>
		<updated>2017-07-05T10:00:58+00:00</updated>
		<link href="https://kitallis.github.io/hades/counting-fruit-in-rust-ptwbpi4qdelpytzrgv1-d/" type="text/html"/>
		<id>https://kitallis.github.io/hades/counting-fruit-in-rust-ptwbpi4qdelpytzrgv1-d/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>RFC 1857 stabilizing Rust&#x27;s drop order has been accepted!</title>
		<published>2017-07-04T15:14:51+01:00</published>
		<updated>2017-07-04T15:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/rfc-1857-stabilizing-rust-s-drop-order-has-been-accepted-ez6vwczjcjqbnyfav2sf6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rfc-1857-stabilizing-rust-s-drop-order-has-been-accepted-ez6vwczjcjqbnyfav2sf6/</id>
		<content type="html">&lt;p&gt;If you have been following my previous posts on Rust&amp;rsquo;s drop order,
you may want to know how it all ended. In january, I summarized my
research in an RFC and submitted it for consideration of the Rust
community. Today, after six months of discussion (with around 80
replies), it has been finally accepted as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;blob&#x2F;246ff86b320a72f98ed2df92805e8e3d48b402d6&#x2F;text&#x2F;1857-stabilize-drop-order.md&quot;&gt;RFC 1857&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Besides reading the RFC itself, you may want to check my previous posts
to see the reasoning that led to it:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;blog&#x2F;enforcing-drop-order-in-rust&#x2F;&quot;&gt;Enforcing drop order&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;blog&#x2F;exploring-rusts-unspecified-drop-order&#x2F;&quot;&gt;Exploring drop order&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;blog&#x2F;thoughts-on-changing-rusts-drop-order&#x2F;&quot;&gt;Changing drop order&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 62</title>
		<published>2017-07-02T00:00:00+00:00</published>
		<updated>2017-07-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-62-vwfkomljm4j2qal8oao2n/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-62-vwfkomljm4j2qal8oao2n/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42503&quot;&gt;releases notes for 1.19&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42624&quot;&gt;a couple broken links to the reference from error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42837&quot;&gt;docs on Error struct&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42836&quot;&gt;docs for Debug* structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42732&quot;&gt;pager support for &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain EXXXX&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fourchaux&quot;&gt;@Fourchaux&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42812&quot;&gt;basic typos in Doc Comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42670&quot;&gt;hint about the return code of panic!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Emilgardis&quot;&gt;@Emilgardis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42270&quot;&gt;wrong report on closure args mismatch when a ref is expected but not found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Boreeas&quot;&gt;@Boreeas&lt;&#x2F;a&gt; folded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42996&quot;&gt;E0612, E0613 into E0609&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43001&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_on_unimplemented&lt;&#x2F;code&gt; message to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ops::Try&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42904&quot;&gt;suggestion include the line number&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42897&quot;&gt;pretty printing slightly&lt;&#x2F;a&gt; and allowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42697&quot;&gt;setting the limit on std::io::Take&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43009&quot;&gt;errors when doc comments are added where they‚Äôre unused&lt;&#x2F;a&gt;, cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;43006&quot;&gt;up some code&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42972&quot;&gt;toggle wrappers not generated correctly in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pwoolcoc&quot;&gt;@pwoolcoc&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42219&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_fail&lt;&#x2F;code&gt; test attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42865&quot;&gt;a few issues with associated consts in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42885&quot;&gt;ICE on &lt;code class=&quot;highlighter-rouge&quot;&gt;use *;&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42831&quot;&gt;docs for fmt::write&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42832&quot;&gt;docs for std::fmt::format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42669&quot;&gt;diagnostic code for lifetime errors with one named, one anonymous lifetime parameter&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42925&quot;&gt;possible &lt;code class=&quot;highlighter-rouge&quot;&gt;io::ErrorKind&lt;&#x2F;code&gt;s of &lt;code class=&quot;highlighter-rouge&quot;&gt;fs::open&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42955&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;&#x2F;&lt;&#x2F;code&gt; works as separator on Windows&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42850&quot;&gt;missing &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;&#x2F;code&gt; detection on methods with return type &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AndiDog&quot;&gt;@AndiDog&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42946&quot;&gt;compile-error.md link reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;casey&quot;&gt;@casey&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42905&quot;&gt;OsStr docs to clarify that utf8 may contain nulls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42519&quot;&gt;more error codes&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42887&quot;&gt;err methods&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42957&quot;&gt;E0619 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 5th of July 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Episode #1 - Constermash</title>
		<published>2017-06-29T17:30:00-07:00</published>
		<updated>2017-06-29T17:30:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/episode-1-constermash-telf1wzfunbealjmet2rf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/episode-1-constermash-telf1wzfunbealjmet2rf/</id>
		<content type="html">&lt;p&gt;This week we look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;2000&quot;&gt;RFC 2000&lt;&#x2F;a&gt; &amp;quot;Const Generics&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Nobody Expects the Rust Evangelism Strike Force</title>
		<published>2017-06-25T00:00:00+00:00</published>
		<updated>2017-06-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/nobody-expects-the-rust-evangelism-strike-force-rpgvzd7muid2kubpu6dw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/nobody-expects-the-rust-evangelism-strike-force-rpgvzd7muid2kubpu6dw/</id>
		<content type="html">&lt;p&gt;At some point it became a meme to ask people to rewrite their code in Rust. To the Rust community though, this is a grave insult, as this is a task that is reserved for only our most committed members. Hence the Rust Evangelism Strike Force was formed, to help preach the good word and combat this wicked meme. To try and do my part (I‚Äôm not yet accepted into the Force, but I work hard on it!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 61</title>
		<published>2017-06-25T00:00:00+00:00</published>
		<updated>2017-06-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-61-v00pi2fawnuoqv5zlbyij/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-61-v00pi2fawnuoqv5zlbyij/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pwoolcoc&quot;&gt;@pwoolcoc&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42219&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_fail&lt;&#x2F;code&gt; test attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42503&quot;&gt;releases notes for 1.19&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42865&quot;&gt;a few issues with associated consts in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42885&quot;&gt;ICE on &lt;code class=&quot;highlighter-rouge&quot;&gt;use *;&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42624&quot;&gt;a couple broken links to the reference from error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rthomas&quot;&gt;@rthomas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42831&quot;&gt;docs for fmt::write&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42837&quot;&gt;docs on Error struct&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42836&quot;&gt;docs for Debug* structs&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42832&quot;&gt;docs for std::fmt::format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42732&quot;&gt;pager support for &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain EXXXX&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fourchaux&quot;&gt;@Fourchaux&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42812&quot;&gt;basic typos in Doc Comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42431&quot;&gt;NaN handling in is_sign_negative&#x2F;positive&lt;&#x2F;a&gt; and specialisation &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42534&quot;&gt;of Iterator methods for Range&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gaurikholkar&quot;&gt;@gaurikholkar&lt;&#x2F;a&gt; adding &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42669&quot;&gt;diagnostic code for lifetime errors with one named, one anonymous lifetime parameter&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42670&quot;&gt;hint about the return code of panic!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Emilgardis&quot;&gt;@Emilgardis&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42270&quot;&gt;wrong report on closure args mismatch when a ref is expected but not found&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42519&quot;&gt;more error codes&lt;&#x2F;a&gt; and remove &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42887&quot;&gt;err methods&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42076&quot;&gt;clearer error message for Duplicate Definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42304&quot;&gt;the two types in the span label for transmute errors&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42804&quot;&gt;rustc errors colorful&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42572&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;create_dir_all&lt;&#x2F;code&gt; to create output directory in rustdoc&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42806&quot;&gt;compiler docs yet again&lt;&#x2F;a&gt;, and linked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42594&quot;&gt;directly to associated types in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; completed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42579&quot;&gt;env docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42570&quot;&gt;dedicated docstrings to Sum&#x2F;Product impl of Result&lt;&#x2F;a&gt; and simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42569&quot;&gt;FromIterator example of Result&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ucarion&quot;&gt;@ucarion&lt;&#x2F;a&gt; explicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42419&quot;&gt;what ‚ÄúRc‚Äù and ‚ÄúArc‚Äù stand for&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cramertj&quot;&gt;@cramertj&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42833&quot;&gt;span label for E0435&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;letheed&quot;&gt;@letheed&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42825&quot;&gt;ref as mutable ref in std::rc::Rc doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42787&quot;&gt;extended information for E0562; impl Trait can only be a return type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42777&quot;&gt;most ‚Äú```ignore‚Äù doc tests.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42749&quot;&gt;additions&#x2F;improvements for doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42620&quot;&gt;compile_error!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42722&quot;&gt;SUMMARY.md of the unstable book as its autogenerated&lt;&#x2F;a&gt; and introduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42705&quot;&gt;tidy lint to check for inconsistent tracking issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42585&quot;&gt;E0609&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42568&quot;&gt;0608&lt;&#x2F;a&gt;, new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42614&quot;&gt;error codes&lt;&#x2F;a&gt; and error &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42654&quot;&gt;codes new&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 28th of June 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Episode #0 - What the Hell</title>
		<published>2017-06-19T19:45:01-05:00</published>
		<updated>2017-06-19T19:45:01-05:00</updated>
		<link href="https://kitallis.github.io/hades/episode-0-what-the-hell-fvyj4xlnngswjjs6-0uyh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/episode-0-what-the-hell-fvyj4xlnngswjjs6-0uyh/</id>
		<content type="html">&lt;p&gt;This week we look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;2005&quot;&gt;RFC 2005&lt;&#x2F;a&gt; &amp;quot;Match Ergonomics Using Default Binding Modes&amp;quot;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 60</title>
		<published>2017-06-11T00:00:00+00:00</published>
		<updated>2017-06-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-60-prwv9ssla3urodpnm5maf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-60-prwv9ssla3urodpnm5maf/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42076&quot;&gt;clearer error message for Duplicate Definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pwoolcoc&quot;&gt;@pwoolcoc&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42219&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_fail&lt;&#x2F;code&gt; test attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42304&quot;&gt;the two types in the span label for transmute errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42572&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;create_dir_all&lt;&#x2F;code&gt; to create output directory in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; completed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42579&quot;&gt;env docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42570&quot;&gt;dedicated docstrings to Sum&#x2F;Product impl of Result&lt;&#x2F;a&gt; and simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42569&quot;&gt;FromIterator example of Result&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42503&quot;&gt;releases notes for 1.19&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ucarion&quot;&gt;@ucarion&lt;&#x2F;a&gt; explicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42419&quot;&gt;what ‚ÄúRc‚Äù and ‚ÄúArc‚Äù stand for&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42519&quot;&gt;more error codes&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42585&quot;&gt;E0609&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42568&quot;&gt;0608&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42378&quot;&gt;the Rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mjkillough&quot;&gt;@mjkillough&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42027&quot;&gt;direct implementations on type aliases&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;photoszzt&quot;&gt;@photoszzt&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42391&quot;&gt;better suggestion for unknown method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42307&quot;&gt;rustdoc.js use license comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42394&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self: Box&amp;lt;Self&amp;gt;&lt;&#x2F;code&gt; in list of deref methods in rustdoc&lt;&#x2F;a&gt; and renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42360&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Vector&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;FixedVector&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Slice&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; changed [vec&lt;T&gt; pronunciation](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42385).&lt;&#x2F;T&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42383&quot;&gt;multiline note for trait suggestion&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42362&quot;&gt;trait method signature when impl differs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; skipped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42485&quot;&gt;printing for skipped doc tests&lt;&#x2F;a&gt; and skipped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42437&quot;&gt;documentation files without ``` when running markdown tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfq&quot;&gt;@xfq&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42558&quot;&gt;TRPL link in README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42551&quot;&gt;cell doc example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42470&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;CString&lt;&#x2F;code&gt; methods&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42414&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cow&lt;&#x2F;code&gt; method doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42510&quot;&gt;step_by docs to say iterator instead of range&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;citizen428&quot;&gt;@citizen428&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42469&quot;&gt;doc for the assert macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42438&quot;&gt;doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42361&quot;&gt;E0602&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42387&quot;&gt;E0603 error code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tommyip&quot;&gt;@tommyip&lt;&#x2F;a&gt; only &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42580&quot;&gt;emit one error for &lt;code class=&quot;highlighter-rouge&quot;&gt;use foo::self;&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and better &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42443&quot;&gt;closure error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 14th of June 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 59</title>
		<published>2017-06-03T00:00:00+00:00</published>
		<updated>2017-06-03T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-59-kd3ssxqbvoetn8qbcbmno/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-59-kd3ssxqbvoetn8qbcbmno/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; introduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41968&quot;&gt;‚Äòui-run‚Äô test to compiletest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mjkillough&quot;&gt;@mjkillough&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42027&quot;&gt;direct implementations on type aliases.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42076&quot;&gt;clearer error message for Duplicate Definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pwoolcoc&quot;&gt;@pwoolcoc&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42219&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_fail&lt;&#x2F;code&gt; test attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;photoszzt&quot;&gt;@photoszzt&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42391&quot;&gt;better suggestion for unknown method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42307&quot;&gt;rustdoc.js use license comments.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42378&quot;&gt;the Rustdoc book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; hid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42394&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self: Box&amp;lt;Self&amp;gt;&lt;&#x2F;code&gt; in list of deref methods in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42304&quot;&gt;the two types in the span label for transmute errors.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; changed [vec&lt;T&gt; pronunciation](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42385).&lt;&#x2F;T&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42383&quot;&gt;multiline note for trait suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42361&quot;&gt;E0602&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42387&quot;&gt;E0603 error code&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41981&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;detach&lt;&#x2F;code&gt; documentation in &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::JoinHande&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41953&quot;&gt;releases notes for 1.18&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42126&quot;&gt;docs on implementing Into&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tommyip&quot;&gt;@tommyip&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42196&quot;&gt;why a closure is &lt;code class=&quot;highlighter-rouge&quot;&gt;FnOnce&lt;&#x2F;code&gt; in closure errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; unified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42260&quot;&gt;the docs of PartialEq, PartialOrd and Ord&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42252&quot;&gt;the docs for align_of and its variants&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bjorn3&quot;&gt;@bjorn3&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42355&quot;&gt;syntax highlight rust code in librustc&#x2F;dep_graph&#x2F;README.md&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42311&quot;&gt;syntax highlight all rust code in librustc&#x2F;traits&#x2F;README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42372&quot;&gt;a couple &lt;code class=&quot;highlighter-rouge&quot;&gt;Receiver&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt; and rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42347&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Receiver::recv_timeout&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42283&quot;&gt;note regarding parent module containing use statement&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42353&quot;&gt;various book repos for the next release.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42338&quot;&gt;releases notes for 1.18&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42370&quot;&gt;[[T]] -&amp;gt; [T] examples to SliceConcatExt docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42360&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Vector&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;FixedVector&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Slice&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt; and cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42286&quot;&gt;associated const value rendering&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42319&quot;&gt;error message for const extern fn&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rap2hpoutre&quot;&gt;@rap2hpoutre&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42329&quot;&gt;links to ‚Äúmodule-level documentation‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42180&quot;&gt;rustdoc man page&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42264&quot;&gt;new error codes&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42302&quot;&gt;new error codes next&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42318&quot;&gt;signature by adding parens when needed in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 7th of June 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 58</title>
		<published>2017-05-28T00:00:00+00:00</published>
		<updated>2017-05-28T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-58-fqlhykxwjp-7otnlo2ea9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-58-fqlhykxwjp-7otnlo2ea9/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41981&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;detach&lt;&#x2F;code&gt; documentation in &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::JoinHande&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41953&quot;&gt;releases notes for 1.18&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; introduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41968&quot;&gt;‚Äòui-run‚Äô test to compiletest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mjkillough&quot;&gt;@mjkillough&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42027&quot;&gt;direct implementations on type aliases.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42076&quot;&gt;clearer error message for Duplicate Definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42126&quot;&gt;docs on implementing Into&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pwoolcoc&quot;&gt;@pwoolcoc&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42219&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_fail&lt;&#x2F;code&gt; test attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tommyip&quot;&gt;@tommyip&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42196&quot;&gt;why a closure is &lt;code class=&quot;highlighter-rouge&quot;&gt;FnOnce&lt;&#x2F;code&gt; in closure errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; unified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42260&quot;&gt;the docs of PartialEq, PartialOrd and Ord&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42252&quot;&gt;the docs for align_of and its variants&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42180&quot;&gt;rustdoc man page&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42264&quot;&gt;new error codes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41980&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&#x27;static&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Send&lt;&#x2F;code&gt; constraints explanations to &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::spawn&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;neosilky&quot;&gt;@neosilky&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42131&quot;&gt;to trait bounds CSS in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42122&quot;&gt;a few entries to the Unstable Book.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42120&quot;&gt;‚Äúmuch‚Äù from unicode diagnostic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&quot;&gt;@nical&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42137&quot;&gt;to Rc and Arc documentation to favor the Rc::clone(&amp;amp;ptr) syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;citizen428&quot;&gt;@citizen428&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42236&quot;&gt;documentation for indexing&#x2F;slicing methods&lt;&#x2F;a&gt; and changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42150&quot;&gt;error count messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42241&quot;&gt;doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charliesome&quot;&gt;@charliesome&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42216&quot;&gt;‚Äòassociate type‚Äô typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Havvy&quot;&gt;@Havvy&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42159&quot;&gt;drop more&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SamWhited&quot;&gt;@SamWhited&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42195&quot;&gt;broken link to nomicon in Unsize docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42163&quot;&gt;links to option::Option&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42145&quot;&gt;names of items in cross crate reexported modules in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wallacoloo&quot;&gt;@Wallacoloo&lt;&#x2F;a&gt; mentionned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42151&quot;&gt;Vec::into_boxed_slice in documentation of [T]::into_vec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41559&quot;&gt;better error message when == operator is badly used&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41700&quot;&gt;‚Äìextend-css stable&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42198&quot;&gt;missing urls for OsStr docs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42152&quot;&gt;missing links for CStr and CString&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 31st of May 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust and CSV parsing</title>
		<published>2017-05-22T21:01:00-04:00</published>
		<updated>2017-05-22T21:01:00-04:00</updated>
		<link href="https://kitallis.github.io/hades/rust-and-csv-parsing-udhnwdpf7o6gd7ub2mtaq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-and-csv-parsing-udhnwdpf7o6gd7ub2mtaq/</id>
		<content type="html">&lt;p&gt;With &lt;code&gt;csv 1.0&lt;&#x2F;code&gt; just released, the time is ripe for a tutorial on how to read
and write CSV data in Rust. This tutorial is targeted toward beginning Rust
programmers, and is therefore full of examples and spends some time on basic
concepts. Experienced Rust programmers may find parts of this useful, but would
probably be happier with a quick skim.&lt;&#x2F;p&gt;
&lt;p&gt;For an introduction to Rust, please see the
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;second-edition&#x2F;&quot;&gt;official book&lt;&#x2F;a&gt;.
If you haven&amp;rsquo;t written any Rust code yet but have written code in another
language, then this tutorial might be accessible to you without needing to read
the book first.&lt;&#x2F;p&gt;
&lt;p&gt;The CSV library is
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;rust-csv&quot;&gt;available on Github&lt;&#x2F;a&gt;
and has
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;csv&quot;&gt;comprehensive API documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, a version of this blog post is included as a
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;csv&#x2F;1.0.0&#x2F;csv&#x2F;tutorial&#x2F;index.html&quot;&gt;tutorial&lt;&#x2F;a&gt;
in the API documentation, and is more likely to be updated as time passes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Target audience&lt;&#x2F;strong&gt;: Beginning Rust programmers.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 57</title>
		<published>2017-05-21T00:00:00+00:00</published>
		<updated>2017-05-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-57-brwvakcgminjazmqimgww/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-57-brwvakcgminjazmqimgww/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41848&quot;&gt;comma after struct update syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41980&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&#x27;static&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Send&lt;&#x2F;code&gt; constraints explanations to &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::spawn&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41981&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;detach&lt;&#x2F;code&gt; documentation in &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::JoinHande&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41953&quot;&gt;releases notes for 1.18&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;neosilky&quot;&gt;@neosilky&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42131&quot;&gt;to trait bounds CSS in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; introduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41968&quot;&gt;‚Äòui-run‚Äô test to compiletest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mjkillough&quot;&gt;@mjkillough&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42027&quot;&gt;direct implementations on type aliases.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42033&quot;&gt;some notes into suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42122&quot;&gt;a few entries to the Unstable Book.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42120&quot;&gt;‚Äúmuch‚Äù from unicode diagnostic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42076&quot;&gt;clearer error message for Duplicate Definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Idolf&quot;&gt;@Idolf&lt;&#x2F;a&gt; supported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41747&quot;&gt;#![deny(missing_docs)] together with #[proc_macro_derive]&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41559&quot;&gt;better error message when == operator is badly used&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41700&quot;&gt;‚Äìextend-css stable&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41991&quot;&gt;warnings when rustdoc html rendering differs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41489&quot;&gt;unsatisfied trait bounds note multiline&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41476&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;proc_macro&lt;&#x2F;code&gt; feature in the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41907&quot;&gt;lint for unused macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41982&quot;&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::yield_now&lt;&#x2F;code&gt; could be used&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41994&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thread::Builder&lt;&#x2F;code&gt;‚Äôs doc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41995&quot;&gt;links to the &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::LocalKey&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;@dhardy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41857&quot;&gt;loop_break_value documentation for The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;excaliburHisSheath&quot;&gt;@excaliburHisSheath&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41870&quot;&gt;docs in os::windows::ffi and os::windows::fs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;froydnj&quot;&gt;@froydnj&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41859&quot;&gt;confusion about parts required for float formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42092&quot;&gt;a nicer error for non-Unicode arguments to rustc and rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42091&quot;&gt;std::env docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42096&quot;&gt;implementors list in Rustdoc‚Äôs javascript&lt;&#x2F;a&gt;, corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42111&quot;&gt;some stability versions&lt;&#x2F;a&gt; and displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42001&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extern &quot;C&quot; fn&lt;&#x2F;code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;extern fn&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;citizen428&quot;&gt;@citizen428&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42024&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;ExitStatus&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;seeekr&quot;&gt;@seeekr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42079&quot;&gt;typo in libstd&#x2F;sync&#x2F;mpsc&#x2F;mod.rs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pravic&quot;&gt;@pravic&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42080&quot;&gt;regression introduced by jQuery removal&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42070&quot;&gt;std::env docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;faso&quot;&gt;@faso&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42028&quot;&gt;a typo in contributing.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rap2hpoutre&quot;&gt;@rap2hpoutre&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;42011&quot;&gt;collapse toggle render (css)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41772&quot;&gt;help message if a FnOnce is moved&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 24th of May 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 56</title>
		<published>2017-05-14T00:00:00+00:00</published>
		<updated>2017-05-14T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-56-uhm4eicqyw5zme0ag4atn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-56-uhm4eicqyw5zme0ag4atn/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;reference&#x2F;issues&#x2F;9&quot;&gt;Document all features in the Rust reference&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41489&quot;&gt;unsatisfied trait bounds note multiline&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41476&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;proc_macro&lt;&#x2F;code&gt; feature in the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41989&quot;&gt;backtrace formating text tips&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41848&quot;&gt;comma after struct update syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41907&quot;&gt;lint for unused macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41980&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&#x27;static&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Send&lt;&#x2F;code&gt; constraints explanations to &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::spawn&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41981&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;detach&lt;&#x2F;code&gt; documentation in &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::JoinHande&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41982&quot;&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::yield_now&lt;&#x2F;code&gt; could be used&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41953&quot;&gt;releases notes for 1.18&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kosta&quot;&gt;@kosta&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41909&quot;&gt;error message ‚Äòcan‚Äôt qualify macro invocation with ‚Äò&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dhardy&quot;&gt;@dhardy&lt;&#x2F;a&gt; add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41857&quot;&gt;loop_break_value documentation for The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;excaliburHisSheath&quot;&gt;@excaliburHisSheath&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41870&quot;&gt;docs in os::windows::ffi and os::windows::fs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;froydnj&quot;&gt;@froydnj&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41859&quot;&gt;confusion about parts required for float formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41384&quot;&gt;HTML output in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41559&quot;&gt;better error message when == operator is badly used&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41772&quot;&gt;help message if a FnOnce is moved&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41700&quot;&gt;‚Äìextend-css stable&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41520&quot;&gt;diagnostics for trace_macro instead of println&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41612&quot;&gt;generic example of std::ops::Add in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41548&quot;&gt;release notes for 1.17&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41536&quot;&gt;docs on &lt;code class=&quot;highlighter-rouge&quot;&gt;Arc&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; and Send&#x2F;Sync&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41531&quot;&gt;more ways to create a PathBuf to docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; allowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41785&quot;&gt;# to appear in rustdoc code output&lt;&#x2F;a&gt; and made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41791&quot;&gt;minor cleanup of UX guidelines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41876&quot;&gt;suggestion diagnostic API to allow for multiple suggestions&lt;&#x2F;a&gt; and upgraded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41912&quot;&gt;some comments to doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gamazeps&quot;&gt;@gamazeps&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41811&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thread::panicking&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41814&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thread::Thread&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::Builder&lt;&#x2F;code&gt; documentations&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41854&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thread::spawn&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41809&quot;&gt;the thread::park and thread::unpark documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mglagla&quot;&gt;@mglagla&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41916&quot;&gt;typo in Iterator::size_hint example comment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Eijebong&quot;&gt;@Eijebong&lt;&#x2F;a&gt; broke &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41951&quot;&gt;words in the location box of the sidebar in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41860&quot;&gt;wrong or outdated info from CString docs.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RalfJung&quot;&gt;@RalfJung&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41886&quot;&gt;typo in Unique::empty doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Migi&quot;&gt;@Migi&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41842&quot;&gt;typo in subst.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;z1mvader&quot;&gt;@z1mvader&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41838&quot;&gt;argument inference for closures when coercing into ‚Äòfn‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jz0425&quot;&gt;@jz0425&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41836&quot;&gt;rustc-ux-guidelines&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41950&quot;&gt;anchor invalid redirection to search&lt;&#x2F;a&gt;, added [markdown-before&lt;&#x2F;td&gt;
          &lt;td&gt;after-content options](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41826), fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41921&quot;&gt;search when looking to sources&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41862&quot;&gt;E0477 error message&lt;&#x2F;a&gt;.&lt;&#x2F;td&gt;
        &lt;&#x2F;tr&gt;
      &lt;&#x2F;tbody&gt;
    &lt;&#x2F;table&gt;
  &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 17th of May 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Ownership Controls Mutability</title>
		<published>2017-05-07T00:00:00+00:00</published>
		<updated>2017-05-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/ownership-controls-mutability-73yeev4dnm-q1csrvoxsd/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ownership-controls-mutability-73yeev4dnm-q1csrvoxsd/</id>
		<content type="html">&lt;p&gt;Some of the first things you learn about in Rust are its ownership and mutability systems. For ownership, you learn about the difference between owned values and borrowed references, where for mutability you learn about immutability by default and how to make a binding mutable. When I learned about this, I took them to be two different permutations that can be applied to data independently of eachother, creating distinct combinations.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 55</title>
		<published>2017-05-07T00:00:00+00:00</published>
		<updated>2017-05-07T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-55-vf4sbmreleuyrssiblwix/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-55-vf4sbmreleuyrssiblwix/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The jquery dependency &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;is being removed&lt;&#x2F;a&gt; from the rustdoc javascript. When navigating in the docs, please check if everything‚Äôs working as expected!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt;, emitted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41434&quot;&gt;diagnostic when using &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;&#x2F;code&gt; storing &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;&#x2F;code&gt; as pattern&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41489&quot;&gt;unsatisfied trait bounds note multiline&lt;&#x2F;a&gt;, used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41520&quot;&gt;diagnostics for trace_macro instead of println&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41760&quot;&gt;duplicated errors for closure type mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41476&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;proc_macro&lt;&#x2F;code&gt; feature in the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41612&quot;&gt;generic example of std::ops::Add in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41548&quot;&gt;release notes for 1.17&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41536&quot;&gt;docs on &lt;code class=&quot;highlighter-rouge&quot;&gt;Arc&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; and Send&#x2F;Sync&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41531&quot;&gt;more ways to create a PathBuf to docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; allowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41785&quot;&gt;# to appear in rustdoc code output.&lt;&#x2F;a&gt; and made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41791&quot;&gt;minor cleanup of UX guidelines.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Idolf&quot;&gt;@Idolf&lt;&#x2F;a&gt; supported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41747&quot;&gt;#![deny(missing_docs)] together with #[proc_macro_derive]&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41384&quot;&gt;HTML output in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41559&quot;&gt;better error message when == operator is badly used&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41772&quot;&gt;help message if a FnOnce is moved&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41700&quot;&gt;‚Äìextend-css stable&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41488&quot;&gt;up callable type mismatch errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41217&quot;&gt;docs of ‚Äòfence‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexeyzab&quot;&gt;@alexeyzab&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41547&quot;&gt;error message for mismatched types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;z1mvader&quot;&gt;@z1mvader&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41543&quot;&gt;the thread struct docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41784&quot;&gt;links between &lt;code class=&quot;highlighter-rouge&quot;&gt;slice::{copy,clone}_from_slice&lt;&#x2F;code&gt; in docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41688&quot;&gt;incorrect hex value in doc comment example&lt;&#x2F;a&gt;, simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41749&quot;&gt;types in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::option&lt;&#x2F;code&gt; doc comment example&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41720&quot;&gt;improvements to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::time::Duration&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;acdenisSK&quot;&gt;@acdenisSK&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41786&quot;&gt;‚Äúan‚Äù usage&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rap2hpoutre&quot;&gt;@rap2hpoutre&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41768&quot;&gt;an example to std::thread::Result type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41721&quot;&gt;ChildStdin&#x2F;ChildStdout docs to be clearer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bholley&quot;&gt;@bholley&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41730&quot;&gt;the reasoning for the Acquire&#x2F;Release handshake when dropping Arcs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41613&quot;&gt;links in RELEASES.md for 1.10.0 through 1.12.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41705&quot;&gt;ANTLR grammar&lt;&#x2F;a&gt; and unignored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41629&quot;&gt;tests which work fine now&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; minimized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40851&quot;&gt;single span suggestions into a label&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hsivonen&quot;&gt;@hsivonen&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41602&quot;&gt;why zero-length slices require a non-null pointer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;jquery dependency&lt;&#x2F;a&gt; and add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41678&quot;&gt;option to display warnings in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 10th of May 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>gnome-class: Integrating Rust and the GNOME object system</title>
		<published>2017-05-04T14:47:08+00:00</published>
		<updated>2017-05-04T14:47:08+00:00</updated>
		<link href="https://kitallis.github.io/hades/gnome-class-integrating-rust-and-the-gnome-object-system-1uxcb-xxire1saxnujwv6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/gnome-class-integrating-rust-and-the-gnome-object-system-1uxcb-xxire1saxnujwv6/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 54</title>
		<published>2017-04-30T00:00:00+00:00</published>
		<updated>2017-04-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-54-r3plophiv1zt7srlt-e96/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-54-r3plophiv1zt7srlt-e96/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The jquery dependency &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;is being removed&lt;&#x2F;a&gt; from the rustdoc javascript. When navigating in the docs, please check if everything‚Äôs working as expected!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt;, emitted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41434&quot;&gt;diagnostic when using &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;&#x2F;code&gt; storing &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;&#x2F;code&gt; as pattern&lt;&#x2F;a&gt;, cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41488&quot;&gt;up callable type mismatch errors&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41489&quot;&gt;unsatisfied trait bounds note multiline&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41520&quot;&gt;diagnostics for trace_macro instead of println&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41217&quot;&gt;docs of ‚Äòfence‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41476&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;proc_macro&lt;&#x2F;code&gt; feature in the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ranma42&quot;&gt;@ranma42&lt;&#x2F;a&gt; generate &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41600&quot;&gt;XZ-compressed tarballs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexeyzab&quot;&gt;@alexeyzab&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41547&quot;&gt;error message for mismatched types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41612&quot;&gt;generic example of std::ops::Add in doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41548&quot;&gt;release notes for 1.17&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; improved [docs on Arc&lt;T&gt; and Send&#x2F;Sync](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41536) and added [more ways to create a PathBuf to docs](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41531).&lt;&#x2F;T&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;z1mvader&quot;&gt;@z1mvader&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41543&quot;&gt;the thread struct docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;jquery dependency&lt;&#x2F;a&gt;, reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41384&quot;&gt;HTML output in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41559&quot;&gt;better error message when == operator is badly used&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; removes &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41433&quot;&gt;display of &lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;&#x2F;code&gt; on tuple struct diagnostics&lt;&#x2F;a&gt; and pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41523&quot;&gt;at variable moved by closure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; specified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41442&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;write_all&lt;&#x2F;code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;ErrorKind::Interrupted&lt;&#x2F;code&gt; errors&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41518&quot;&gt;a copy-paste error in &lt;code class=&quot;highlighter-rouge&quot;&gt;Instant::sub_duration&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41438&quot;&gt;links and examples for various mspc pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hsivonen&quot;&gt;@hsivonen&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41602&quot;&gt;why zero-length slices require a non-null pointer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; bumped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41572&quot;&gt;mdbook dep to pick up new ‚Äòcreate missing‚Äô toggle feature.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;moosingin3space&quot;&gt;@moosingin3space&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41636&quot;&gt;process::exit in mem::forget docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cuviper&quot;&gt;@cuviper&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41613&quot;&gt;links in RELEASES.md for 1.10.0 through 1.12.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41526&quot;&gt;up TcpStream example&lt;&#x2F;a&gt;, addressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41499&quot;&gt;platform-specific behavior in TcpStream::shutdown&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41535&quot;&gt;up vec guarantee around capacity&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41528&quot;&gt;‚Äúside effect‚Äù in peek‚Äôs docs&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41527&quot;&gt;the doc index&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41500&quot;&gt;the word ‚Äòlength‚Äô in Vec::len‚Äôs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40634&quot;&gt;more explanation on RefCell::get_mut&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41501&quot;&gt;error message for invalid module location&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 3rd of May 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 53</title>
		<published>2017-04-23T00:00:00+00:00</published>
		<updated>2017-04-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-53-nrkandydlybt6berf1af/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-53-nrkandydlybt6berf1af/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;After a long debate, it has been decided to keep hoedown testing&#x2F;rendering by default in rustdoc. However, you can test pulldown by running rustdoc with &lt;code class=&quot;highlighter-rouge&quot;&gt;-Z unstable-options enable-commonmark&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The jquery dependency &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;is being removed&lt;&#x2F;a&gt; from the rustdoc javascript. When navigating in the docs, please check if everything‚Äôs working as expected!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt;, emitted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41434&quot;&gt;diagnostic when using &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;&#x2F;code&gt; storing &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn&lt;&#x2F;code&gt; as pattern&lt;&#x2F;a&gt; and did &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41433&quot;&gt;not show &lt;code class=&quot;highlighter-rouge&quot;&gt;::&lt;&#x2F;code&gt; on tuple struct diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepancheg&quot;&gt;@stepancheg&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40747&quot;&gt;BufRead::is_eof documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41217&quot;&gt;docs of ‚Äòfence‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41476&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;proc_macro&lt;&#x2F;code&gt; feature in the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; specified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41442&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;write_all&lt;&#x2F;code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;ErrorKind::Interrupted&lt;&#x2F;code&gt; errors&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41438&quot;&gt;links and examples for various mspc pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;insaneinside&quot;&gt;@insaneinside&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41346&quot;&gt;display of duplicate bounds for ‚Äú‚Ä¶but the following trait bounds were not satisfied‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40634&quot;&gt;more explanation on RefCell::get_mut&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;jquery dependency&lt;&#x2F;a&gt; and reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41384&quot;&gt;HTML output in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41245&quot;&gt;visual clutter of multiline start when possible&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41214&quot;&gt;a way to get shorter spans until &lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;&#x2F;code&gt; for pointing at defs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40987&quot;&gt;Convert docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40812&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Child&lt;&#x2F;code&gt; docs to not have a note section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41295&quot;&gt;top level sections to the Unstable Book.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41236&quot;&gt;E0101 and E0102 logic into new E0282 mechanism&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;@jonhoo&lt;&#x2F;a&gt; renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41262&quot;&gt;compiler_barrier to compiler_fence&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41280&quot;&gt;a list of headings to the sidebar in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexeyzab&quot;&gt;@alexeyzab&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41264&quot;&gt;old docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41376&quot;&gt;docs and examples for PathBuf::file_name and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41348&quot;&gt;std::path docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41365&quot;&gt;link to book repo&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41374&quot;&gt;mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41391&quot;&gt;disclaimer from bootstrap&#x2F;README.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrickn&quot;&gt;@mbrickn&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41403&quot;&gt;links to use https&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41290&quot;&gt;hoedown big comeback&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41342&quot;&gt;debug infinite loop&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41405&quot;&gt;line display for hoedown&lt;&#x2F;a&gt; and re-enabled &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41431&quot;&gt;hoedown by default&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 26th of April 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 52</title>
		<published>2017-04-17T00:00:00+00:00</published>
		<updated>2017-04-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-52-81hagscrgfslo1z-gyv9v/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-52-81hagscrgfslo1z-gyv9v/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The jquery dependency &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;is being removed&lt;&#x2F;a&gt; from the rustdoc javascript. When navigating in the docs, please check if everything‚Äôs working as expected!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt;, reduced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41245&quot;&gt;visual clutter of multiline start when possible&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41214&quot;&gt;a way to get shorter spans until &lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;&#x2F;code&gt; for pointing at defs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepancheg&quot;&gt;@stepancheg&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40747&quot;&gt;BufRead::is_eof documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40987&quot;&gt;Convert docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40812&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Child&lt;&#x2F;code&gt; docs to not have a note section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41295&quot;&gt;top level sections to the Unstable Book.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41236&quot;&gt;E0101 and E0102 logic into new E0282 mechanism&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;@jonhoo&lt;&#x2F;a&gt; renamed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41262&quot;&gt;compiler_barrier to compiler_fence&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41280&quot;&gt;a list of headings to the sidebar in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41217&quot;&gt;docs of ‚Äòfence‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexeyzab&quot;&gt;@alexeyzab&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41264&quot;&gt;old docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40634&quot;&gt;more explanation on RefCell::get_mut&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41307&quot;&gt;jquery dependency&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41290&quot;&gt;hoedown big comeback&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41084&quot;&gt;formatting of fn signatures and where clauses to match style rfcs in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40565&quot;&gt;an explicit help message for binop type mismatch&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41136&quot;&gt;end line display of multiline annotations&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41087&quot;&gt;proper span for tuple index parsed as float&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40653&quot;&gt;couple minor improvements for tidy error handling&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagebind&quot;&gt;@sagebind&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41008&quot;&gt;examples for ThreadId&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40829&quot;&gt;ChildStderr docs to be clearer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pirate&quot;&gt;@pirate&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40765&quot;&gt;contribution instructions to stdlib docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41103&quot;&gt;channel error docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41243&quot;&gt;minor nits in primitive str&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41240&quot;&gt;docs for std::sync::Weak&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41266&quot;&gt;docs for std::rc::Rc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41125&quot;&gt;std::hash docs&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41286&quot;&gt;various improvements in std::collections docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;palango&quot;&gt;@palango&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41122&quot;&gt;module documentation for std::f32 and std::f64&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tedsta&quot;&gt;@tedsta&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41311&quot;&gt;magenta error codes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaron1011&quot;&gt;@Aaron1011&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41172&quot;&gt;rustdoc infinitely recursing when an external crate reexports itself&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; bumped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41281&quot;&gt;book repos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nodakai&quot;&gt;@nodakai&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41183&quot;&gt;hoedown license&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41249&quot;&gt;invalid associated type rendering in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 19th of April 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 51</title>
		<published>2017-04-09T00:00:00+00:00</published>
		<updated>2017-04-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-51-b4ooyuxwtelvwqntoexub/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-51-b4ooyuxwtelvwqntoexub/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The markdown renderer in rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;has been changed&lt;&#x2F;a&gt;! We replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hoedown&#x2F;hoedown&quot;&gt;hoedown&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;pulldown-cmark&lt;&#x2F;a&gt;. Bugs might appear after this switch so any feedback is very welcomed!&lt;&#x2F;p&gt;
&lt;p&gt;However, thanks to everyone‚Äôs efforts, all known issues have been fixed. Don‚Äôt forget to check if your document is common-mark compliant!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;labels&#x2F;T-doc&quot;&gt;T-doc&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41084&quot;&gt;formatting of fn signatures and where clauses to match style rfcs in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40565&quot;&gt;an explicit help message for binop type mismatch&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41136&quot;&gt;end line display of multiline annotations&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41087&quot;&gt;proper span for tuple index parsed as float&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40653&quot;&gt;couple minor improvements for tidy error handling&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagebind&quot;&gt;@sagebind&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41008&quot;&gt;examples for ThreadId&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepancheg&quot;&gt;@stepancheg&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40747&quot;&gt;BufRead::is_eof documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40987&quot;&gt;Convert docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40812&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Child&lt;&#x2F;code&gt; docs to not have a note section&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40829&quot;&gt;ChildStderr docs to be clearer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pirate&quot;&gt;@pirate&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40765&quot;&gt;contribution instructions to stdlib docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41103&quot;&gt;channel error docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41125&quot;&gt;std::hash docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;palango&quot;&gt;@palango&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41122&quot;&gt;module documentation for std::f32 and std::f64&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40634&quot;&gt;more explanation on RefCell::get_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41111&quot;&gt;Markdown issues in the docs&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41112&quot;&gt;pulldown-cmark for Markdown HTML rendering in rustdox&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40775&quot;&gt;using enum when a variant is used as a type&lt;&#x2F;a&gt;, identified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40815&quot;&gt;missing item category in &lt;code class=&quot;highlighter-rouge&quot;&gt;impl&lt;&#x2F;code&gt;s&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41062&quot;&gt;recommendations of private fields called as method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41019&quot;&gt;typo in doc comments for swap_remove&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40927&quot;&gt;a note about overflow for fetch_add&#x2F;fetch_sub&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40949&quot;&gt;some docs for VecDeque&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40999&quot;&gt;option API docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41014&quot;&gt;link in std::thread docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pgerber&quot;&gt;@pgerber&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41007&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs::DirBuilder&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;donniebishop&quot;&gt;@donniebishop&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40997&quot;&gt;links to types in from_utf8 description&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40992&quot;&gt;links to from_utf8 methods in Utf8Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technius&quot;&gt;@Technius&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40981&quot;&gt;links and some examples to std::sync::mpsc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40977&quot;&gt;the description for BarrierWaitResult&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GAJaloyan&quot;&gt;@GAJaloyan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40797&quot;&gt;mistakes in the README.md file&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;@japaric&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41135&quot;&gt;some existing unstable features&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; collapsed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41131&quot;&gt;docblock before showing label in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rap2hpoutre&quot;&gt;@rap2hpoutre&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41090&quot;&gt;example to std::process::abort&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41066&quot;&gt;links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40919&quot;&gt;support for image, rules and footnotes in the new rustdoc markdown renderer&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40608&quot;&gt;mutex‚Äôs docs inconsistency&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41043&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;sup&amp;gt;&lt;&#x2F;code&gt; html balise&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 12th of April 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Runtime-fmt, a runtime formatting crate</title>
		<published>2017-04-05T15:42:00-07:00</published>
		<updated>2017-04-05T15:42:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/runtime-fmt-a-runtime-formatting-crate-pl-qosqvcqra1qn3unwo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/runtime-fmt-a-runtime-formatting-crate-pl-qosqvcqra1qn3unwo/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;runtime-fmt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;runtime-fmt&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; is a small, nightly-only, safe Rust crate which provides
variants of the six standard formatting macros which validate their format
strings at runtime. It has feature parity with &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fmt&lt;&#x2F;code&gt; and accepts exactly
the same syntax for format strings and arguments, with the additional feature
of supporting format strings which are not known at compile time.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;macro_use&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;crate&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;runtime_fmt&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;format_string&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, {}!&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;nd&quot;&gt;rt_println!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;format_string&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;world&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;
&lt;span class=&quot;nd&quot;&gt;rt_println!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bogus {} reference&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap_err&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;
&lt;span class=&quot;nd&quot;&gt;rt_println!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bogus }{ format string&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.unwrap_err&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Applications include internationalization, configuration, and modding. For
example, designers might be allowed to adjust text with interspersed values in
a video game, or command-line users could specify what shape the output should
be.&lt;&#x2F;p&gt;
&lt;p&gt;The core implementation is under 300 SLOC, plus 550 or
so to embed &lt;code class=&quot;highlighter-rouge&quot;&gt;libfmt_macros&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;implementation&quot;&gt;Implementation&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;runtime-fmt&lt;&#x2F;code&gt; is safe. It achieves direct feature-parity with the standard
formatting macros by using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;blob&#x2F;9b0b5b45dbd268aba0a79453f506bfe00bb57042&#x2F;src&#x2F;libfmt_macros&#x2F;lib.rs&quot;&gt;same code&lt;&#x2F;a&gt; that &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;&#x2F;code&gt; uses to parse format
strings. Somewhat awkwardly, this code is included inline in the crate rather
than linked in, because it is distributed only dynamically, and most Rust users
don‚Äôt want to link &lt;code class=&quot;highlighter-rouge&quot;&gt;libstd&lt;&#x2F;code&gt; dynamically.
On top of format string parsing, &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc&lt;&#x2F;code&gt; includes elaborate machinery for
converting the parsed format string into an AST for macro expansion. Because
&lt;code class=&quot;highlighter-rouge&quot;&gt;runtime-fmt&lt;&#x2F;code&gt; does not need to work on the AST level, and can make assumptions
about the values returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;libfmt_macros&lt;&#x2F;code&gt;, this conversion is vastly
simplified.&lt;&#x2F;p&gt;
&lt;p&gt;All format specifiers are supported. Recognizing at runtime whether a given
argument supports a given format string is achieved through specialization,
implementing internal shadow traits of the standard formatting traits which
return &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;&#x2F;code&gt; when unavailable, and surfacing this as an error to users.&lt;&#x2F;p&gt;
&lt;p&gt;All errors are encapsulated in an &lt;code class=&quot;highlighter-rouge&quot;&gt;enum Error&lt;&#x2F;code&gt;, returned within a &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;&#x2F;code&gt; from
all the macros. Syntax errors are returned as-is, including descriptions
similar to those generated by rustc, and other types of error variants are
available, including &lt;code class=&quot;highlighter-rouge&quot;&gt;std::io::Error&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fmt::Error&lt;&#x2F;code&gt; variants which may
be returned when using &lt;code class=&quot;highlighter-rouge&quot;&gt;rt_write!&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;rt_writeln!&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The crate requires nightly for obvious reasons; access to the formatting
machinery isn‚Äôt stable, and might never be. That said, it changes rarely, and
the crate is unlikely to break often. The use of specialization described
earlier also requires nightly.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;test-suite&quot;&gt;Test Suite&lt;&#x2F;h2&gt;
&lt;p&gt;This crate passes the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;blob&#x2F;80654862831e27f249f05bcb50552510f1b5f643&#x2F;src&#x2F;test&#x2F;run-pass&#x2F;ifmt.rs&quot;&gt;main body of tests&lt;&#x2F;a&gt; from rustc‚Äôs test suite, as
well as a small smattering of tests written specifically for &lt;code class=&quot;highlighter-rouge&quot;&gt;runtime-fmt&lt;&#x2F;code&gt;. I
intend to continue to expand the test suite, both to include more tests from
rustc and to more rigorously ensure that format string and argument
combinations which ought to error do.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;future-expansion&quot;&gt;Future Expansion&lt;&#x2F;h2&gt;
&lt;p&gt;Some performance is left on the table in the initial implementation.
Particularly, format strings are re-parsed each time the string is to be
formatted. I have an idea on how to fix this, revolving around specifying a
struct or tuple type in &lt;code class=&quot;highlighter-rouge&quot;&gt;rt_format_args!&lt;&#x2F;code&gt; once during parsing, where the format
string is parsed and types are resolved and checked, and then supplying values
of that struct type which can be formatted quickly by the prebuilt formatter.&lt;&#x2F;p&gt;
&lt;p&gt;Most of &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fmt&lt;&#x2F;code&gt; is also available in &lt;code class=&quot;highlighter-rouge&quot;&gt;core&lt;&#x2F;code&gt;. The library currently uses heap
allocation in many instances, but it may be possible to adapt it to use static
buffers or other trickery in those situations and thereby allow the library
to be used under &lt;code class=&quot;highlighter-rouge&quot;&gt;#[no_std]&lt;&#x2F;code&gt;, just like the builtin formatting macros.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Addendum&lt;&#x2F;em&gt;: thanks &lt;code class=&quot;highlighter-rouge&quot;&gt;illegalprime&lt;&#x2F;code&gt; on IRC for pointing out that the snippet at
the top of the blog post didn‚Äôt demonstrate error handling.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Calling Rust From Python</title>
		<published>2017-04-02T00:00:00-06:00</published>
		<updated>2017-04-02T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/calling-rust-from-python-cddtdgnsdebmfgewrin7l/" type="text/html"/>
		<id>https://kitallis.github.io/hades/calling-rust-from-python-cddtdgnsdebmfgewrin7l/</id>
		<content type="html">&lt;p&gt;Hello! This is a detailed example of exposing Rust code to other languages (in this case, Python). Most articles I‚Äôve seen that cover this topic uses really trivial example functions, skipping over a lot of the complexity. Even the better ones out there typically don‚Äôt have a pre-existing, reasonably complex program to work with. I‚Äôm going to start with trivial functions and build my way up to being able to define a scene for my raytracer in Python using a series of calls to Rust, then render it and return the resulting image data back to Python.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 50</title>
		<published>2017-04-02T00:00:00+00:00</published>
		<updated>2017-04-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-50-yahrzzcvhzmwehhmrsga/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-50-yahrzzcvhzmwehhmrsga/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The markdown renderer in rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;has been changed&lt;&#x2F;a&gt;! We replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hoedown&#x2F;hoedown&quot;&gt;hoedown&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;pulldown-cmark&quot;&gt;pulldown-cmark&lt;&#x2F;a&gt;. Bugs might appear after this switch so any feedback is very welcomed! An issue has been opened &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;40912&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40775&quot;&gt;using enum when a variant is used as a type&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40767&quot;&gt;to definition when modifying field of immutable variable&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40857&quot;&gt;at fields that make the type recursive&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40565&quot;&gt;an explicit help message for binop type mismatch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mandeep&quot;&gt;@mandeep&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41019&quot;&gt;typo in doc comments for swap_remove&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40653&quot;&gt;couple minor improvements for tidy error handling&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40927&quot;&gt;a note about overflow for fetch_add&#x2F;fetch_sub&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40949&quot;&gt;some docs for VecDeque&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40999&quot;&gt;option API docs&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40706&quot;&gt;documentation of next_power_of_two&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41014&quot;&gt;link to current() in std::thread docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pgerber&quot;&gt;@pgerber&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41007&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs::DirBuilder&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sagebind&quot;&gt;@sagebind&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;41008&quot;&gt;examples for ThreadId&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepancheg&quot;&gt;@stepancheg&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40747&quot;&gt;BufRead::is_eof documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maccoda&quot;&gt;@maccoda&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40987&quot;&gt;Convert docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;donniebishop&quot;&gt;@donniebishop&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40997&quot;&gt;links to types in from_utf8 description&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40992&quot;&gt;links to from_utf8 methods in Utf8Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technius&quot;&gt;@Technius&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40981&quot;&gt;links and some examples to std::sync::mpsc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40812&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Child&lt;&#x2F;code&gt; docs to not have a note section&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40829&quot;&gt;ChildStderr docs to be clearer&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40977&quot;&gt;the description for BarrierWaitResult&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pirate&quot;&gt;@pirate&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40765&quot;&gt;contribution instructions to stdlib docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tschottdorf&quot;&gt;@tschottdorf&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40413&quot;&gt;error when violating &lt;code class=&quot;highlighter-rouge&quot;&gt;for&amp;lt;&#x27;a&amp;gt; T: &#x27;a&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GAJaloyan&quot;&gt;@GAJaloyan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40797&quot;&gt;mistakes in the README.md file&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;@icefoxen&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40719&quot;&gt;a tiny update to rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40919&quot;&gt;support for image, rules and footnotes in the new rustdoc markdown renderer&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40608&quot;&gt;mutex‚Äôs docs inconsistency&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40634&quot;&gt;more explanation on RefCell::get_mut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40866&quot;&gt;linking for Once docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40871&quot;&gt;links for Atomics docs&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40828&quot;&gt;rustdoc to accept &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;&#x2F;code&gt; at the start of a markdown file&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;donniebishop&quot;&gt;@donniebishop&lt;&#x2F;a&gt; modified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40935&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;&#x2F;code&gt; structs descriptions&lt;&#x2F;a&gt;, linked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40907&quot;&gt;str in from_utf_unchecked&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40824&quot;&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;fromStr&lt;&#x2F;code&gt; implementation example&lt;&#x2F;a&gt; and linked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40819&quot;&gt;ParseBoolError to from_str method of bool&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; synced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40694&quot;&gt;all unstable features with Unstable Book; add tidy lint.&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40786&quot;&gt;all unstable features to Unstable Book.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pirate&quot;&gt;@pirate&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40763&quot;&gt;helpful hint in io docs about how ? is not allowed in main()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;topecongiro&quot;&gt;@topecongiro&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40728&quot;&gt;overlapping_inherent_impls lint a hard error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaloJaffre&quot;&gt;@MaloJaffre&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40898&quot;&gt;unused feature from error index generator&lt;&#x2F;a&gt; and avoid &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40901&quot;&gt;linking to a moved page in rust.html&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SamWhited&quot;&gt;@SamWhited&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40934&quot;&gt;the docs for the write and writeln macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DaseinPhaos&quot;&gt;@DaseinPhaos&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40925&quot;&gt;missing link in unstable-book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rap2hpoutre&quot;&gt;@rap2hpoutre&lt;&#x2F;a&gt; added&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40904&quot;&gt;example to std::process::abort&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40888&quot;&gt;the rustdoc sidebar white on &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;&#x2F;code&gt; pages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ctjhoa&quot;&gt;@ctjhoa&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40869&quot;&gt;os::linux documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abonander&quot;&gt;@abonander&lt;&#x2F;a&gt; memorized &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40814&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pub use&lt;&#x2F;code&gt;-reexported macros so they don‚Äôt appear twice in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40816&quot;&gt;suggetion for field used as method&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;irfanhudda&quot;&gt;@irfanhudda&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40897&quot;&gt;typo in libcore&#x2F;char.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40864&quot;&gt;various book modules&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40838&quot;&gt;std::net docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stepancheg&quot;&gt;@stepancheg&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40783&quot;&gt;Cursor::new position is 0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TigleyM&quot;&gt;@TigleyM&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40682&quot;&gt;docs for std::str&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40853&quot;&gt;broken Markdown and bad links in the error index&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40852&quot;&gt;compiler docs again&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alanstoate&quot;&gt;@alanstoate&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40837&quot;&gt;string references in asciiext&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wallacoloo&quot;&gt;@Wallacoloo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40833&quot;&gt;typo in char::to_uppercase documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pulldown in rustdoc&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pull in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40703&quot;&gt;missing urls in ptr docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 5th of April 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>A comparison of regex engines</title>
		<published>2017-03-28T00:00:00+00:00</published>
		<updated>2017-03-28T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/a-comparison-of-regex-engines-sfixkdfyhtax2i-zto9ew/" type="text/html"/>
		<id>https://kitallis.github.io/hades/a-comparison-of-regex-engines-sfixkdfyhtax2i-zto9ew/</id>
		<content type="html">&lt;script src=&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;Chart.js&#x2F;2.5.0&#x2F;Chart.bundle.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h1&gt;
&lt;p&gt;Regular expressions (or just regex) are commonly used in pattern search algorithms. There are many different
regex engines available with different support of expressions, performance constraints and language bindings.
Based on the previous work of John Maddock (See his own &lt;a href=&quot;http:&#x2F;&#x2F;www.boost.org&#x2F;doc&#x2F;libs&#x2F;1_41_0&#x2F;libs&#x2F;regex&#x2F;doc&#x2F;gcc-performance.html&quot;&gt;regex comparison&lt;&#x2F;a&gt;)
and the sljit project (See their &lt;a href=&quot;http:&#x2F;&#x2F;sljit.sourceforge.net&#x2F;regex_perf.html&quot;&gt;regex comparison&lt;&#x2F;a&gt;)
I want to give an overview of actively developed engines regarding their performance.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;test-setup&quot;&gt;Test setup&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;hardware&quot;&gt;Hardware&lt;&#x2F;h2&gt;
&lt;p&gt;The performance is measured only on my Dell notebook. It‚Äôs not the newest one, but it doesn‚Äôt matter because
I used the same hardware for all engines and I‚Äôm interested in the performance results compared to each other.
But here are some hardware information:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Chassis: Dell Latitude E7450&lt;&#x2F;li&gt;
  &lt;li&gt;CPU: Intel¬Æ Core‚Ñ¢ i5-5300U&lt;&#x2F;li&gt;
  &lt;li&gt;RAM: 16GB&lt;&#x2F;li&gt;
  &lt;li&gt;SSD: Samsung PM85 256GB&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;software&quot;&gt;Software&lt;&#x2F;h2&gt;
&lt;p&gt;The used software is also not the latest, but newer than the default packages of my installed Ubuntu 16.04:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;GCC 6.2.0&lt;&#x2F;li&gt;
  &lt;li&gt;Rustc 1.16.0 and 1.17.0-nightly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I want to get the execution time to find a match of each engine for the following regular expression:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Twain&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(?i)Twain&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-z]shing&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Huck[a-zA-Z]+|Saw[a-zA-Z]+&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\b\w+nn\b&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-q][^u-z]{13}x&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Tom|Sawyer|Huckleberry|Finn&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(?i)Tom|Sawyer|Huckleberry|Finn&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.{0,2}(Tom|Sawyer|Huckleberry|Finn)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.{2,4}(Tom|Sawyer|Huckleberry|Finn)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Tom.{10,25}river|river.{10,25}Tom&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z]+ing&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\s[a-zA-Z]{0,12}ing\s&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;([A-Za-z]awyer|[A-Za-z]inn)\s&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[&quot;&#x27;][^&quot;&#x27;]{0,30}[?!\.][\&quot;&#x27;]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\u221E|\u2713&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\p{Sm}&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The set of expressions is not representative, but is sufficient to get an overview.&lt;&#x2F;p&gt;
&lt;p&gt;To measure the performance I modified the existing benchmark tool of the sljit project.
The tool is available on github: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-leipzig&#x2F;regex-performance&quot;&gt;regex-performance&lt;&#x2F;a&gt;.
The base tool of the sljit project supported already the following regex engines:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kkos&#x2F;oniguruma&quot;&gt;Oniguruma&lt;&#x2F;a&gt;, v6.1.3&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;google&#x2F;re2&quot;&gt;RE2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;laurikari&#x2F;tre&quot;&gt;Tre&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.pcre.oashrg&quot;&gt;PCRE2&lt;&#x2F;a&gt;, v10.23&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I added support for two more engines:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;01org&#x2F;hyperscan&quot;&gt;Hyperscan&lt;&#x2F;a&gt;, v4.4.1&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;regex&#x2F;regex&#x2F;index.html&quot;&gt;Rust regex crate&lt;&#x2F;a&gt;, v0.2.1&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pcre2&quot;&gt;PCRE2&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Perl Compatible Regular Expressions (PCRE) is a regular expression C library inspired by the regular expression
capabilities in the Perl programming language. PCRE2 is the name used for a revised API for the PCRE library.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Beside the standard matching algorithm PCRE2 is shipped with an alternative algorithm based on a
deterministic finite automate (&lt;em&gt;DFA&lt;&#x2F;em&gt;) which operates in a different way and is not Perl-compatible.
A detailed description is provided within the &lt;a href=&quot;http:&#x2F;&#x2F;www.pcre.org&#x2F;current&#x2F;doc&#x2F;html&#x2F;pcre2matching.html&quot;&gt;man pages&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A heavyweight optimized variant is shipped too: the just-in-time (&lt;em&gt;JIT&lt;&#x2F;em&gt;) compiling can greatly speed up pattern matching.&lt;&#x2F;p&gt;
&lt;p&gt;To get comparable results, the Unicode support has to be enabled with the configuration option &lt;code class=&quot;highlighter-rouge&quot;&gt;--enable-unicode&lt;&#x2F;code&gt;.
The JIT feature is optional and has to be enabled with the option &lt;code class=&quot;highlighter-rouge&quot;&gt;--enable-jit&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hyperscan&quot;&gt;Hyperscan&lt;&#x2F;h3&gt;
&lt;p&gt;Hyperscan is a &lt;a href=&quot;https:&#x2F;&#x2F;01.org&#x2F;hyperscan&quot;&gt;01.org&lt;&#x2F;a&gt; open source project:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Hyperscan is a high-performance multiple regex matching library.
It follows the regular expression syntax of the commonly-used libpcre library, yet functions as a standalone library
with its own API written in C. Hyperscan uses hybrid automata techniques to allow simultaneous matching of large numbers 
of regular expressions, as well as matching of regular expressions across streams of data.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Hyperscan is a mature library with over 10 years of development. The focus of Hyperscan is the x86 platform and the library
uses hardware accelerators such as AVX to optimize the throughput.&lt;&#x2F;p&gt;
&lt;p&gt;By default, Hyperscan does not care about the start of a match. Getting the start of a match requires the set flag
&lt;code class=&quot;highlighter-rouge&quot;&gt;HS_FLAG_SOM_LEFTMOST&lt;&#x2F;code&gt; for compiling a pattern. The flag costs some performance but is required to get
comparable results.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-regex-crate&quot;&gt;Rust regex crate&lt;&#x2F;h3&gt;
&lt;p&gt;A Rust crate is a synonymous for a ‚Äòlibrary‚Äô or ‚Äòpackage‚Äô. The &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;regex&#x2F;regex&#x2F;index.html&quot;&gt;Rust regex crate&lt;&#x2F;a&gt;
provides functions for parsing, compiling, and executing regular expressions:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Its syntax is similar to Perl-style regular expressions, but lacks a few features like look around and back-references.
In exchange, all searches execute in linear time with respect to the size of the regular expression and search text.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Except the Rust crate all engines are written in C or C++ including the test tool. It was a requirement to have
C-binding of the used engine. So an interface was necessary to call the Rust functions within C.
The solution uses the Rusts FFI (foreign function interface) to build a static
library which just counts the matches for a given expression. The complete library consists of 3 functions with less
than 50 lines of code. The main Rust function to get the matches is:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;no_mangle&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;regex_matches&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;raw_exp&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u8&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u64&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u64&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Box&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;from_raw&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;raw_exp&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;slice&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;from_raw_parts&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;let&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;findings&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;=&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;exp&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.find_iter&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;s&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.count&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;();&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;Box&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;into_raw&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;exp&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;);&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;findings&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;as&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;u64&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The function gets a raw pointer to a previously compiled expression (&lt;code class=&quot;highlighter-rouge&quot;&gt;raw_exp&lt;&#x2F;code&gt;), a raw pointer to the input c-string
(&lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;&#x2F;code&gt;) and the length of the input string (&lt;code class=&quot;highlighter-rouge&quot;&gt;len&lt;&#x2F;code&gt;). At the first the function gets the compiled expression from the
corresponding raw pointer and the input string. The converting from a raw pointer into a type is unsafe, that‚Äôs why
the code parts have to be wrapped with &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe {}&lt;&#x2F;code&gt;. After all the number of matches is gathered with a call of
&lt;code class=&quot;highlighter-rouge&quot;&gt;exp.find_iter(s).count()&lt;&#x2F;code&gt;. To use the compiled expression in following function calls, the raw
pointer from the expression is gathered again. This effects that the lifetime of the expression still remains after returning.
At the end the function returns the number of matches as a 64bit value to the caller.&lt;&#x2F;p&gt;
&lt;p&gt;The corresping C function prototype is:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;       &lt;span class=&quot;c1&quot;&gt;&#x2F;&#x2F; anonymous declaration
&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;kt&quot;&gt;uint64_t&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;regex_matches&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Regex&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;kt&quot;&gt;uint64_t&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;str_len&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;h1 id=&quot;results&quot;&gt;Results&lt;&#x2F;h1&gt;
&lt;p&gt;To get the test results of the test tool call within the build directory of the tool:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.&#x2F;src&#x2F;regex_perf -f ..&#x2F;3200.txt -o results.csv
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The tool prints the details and writes the results per test and engine to &lt;code class=&quot;highlighter-rouge&quot;&gt;results.csv&lt;&#x2F;code&gt;.
At the end a short summary of the results is printed:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Total Results:
[      pcre] time:  12626.7 ms, score:      8 points,
[  pcre-dfa] time:  14135.2 ms, score:      0 points,
[  pcre-jit] time:   1050.6 ms, score:     47 points,
[       re2] time:    946.1 ms, score:     26 points,
[      onig] time:   2475.8 ms, score:      4 points,
[       tre] time:  10508.4 ms, score:      0 points,
[     hscan] time:    299.7 ms, score:     72 points,
[rust_regex] time:   3681.5 ms, score:     47 points,
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;timings&quot;&gt;Timings&lt;&#x2F;h2&gt;
&lt;p&gt;On the basis of a CSV-file I do some analytics. At first I summarize the overall execution time per engine.
The following chart shows the details:&lt;&#x2F;p&gt;
&lt;div&gt;&lt;canvas id=&quot;timing_chart&quot; height=&quot;400&quot;&gt;&lt;&#x2F;canvas&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
    var ctx = document.getElementById(&quot;timing_chart&quot;);
    var myChart = new Chart(ctx, {
        type: &#x27;horizontalBar&#x27;,
        data: {
            labels: [&quot;pcre-dfa&quot;, &quot;pcre&quot;, &quot;tre&quot;, &quot;rust_regex&quot;, &quot;onig&quot;, &quot;pcre-jit&quot;, &quot;re2&quot;, &quot;hscan&quot;],
            datasets: [{
                label: &#x27;Timing&#x27;,
                data: [14135.1, 12626.6, 10508.5, 3681.5, 2475.9, 1050.6, 946.0, 299.5],
                backgroundColor: [
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(54, 162, 235, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;
                ],
                borderColor: [
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(54, 162, 235, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;
                ],
                borderWidth: 1
            }]
        },
        options: {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: &#x27;ms&#x27;
                    }
                }]
            }
        }
    });
&lt;&#x2F;script&gt;
&lt;p&gt;Hyperscan is the fastest engine with a total execution time of ~300ms (~3x less time than 2nd) and the Rust regex crate
gets the 5th place with ~3700ms. It seems that the Rust regex crate is not the fastest solution in place.&lt;&#x2F;p&gt;
&lt;p&gt;But: what happens if one expression is really slow? This test distorts the overall result of the engine.
Therefor I implement a simple result scoring. For each test the fastest engine can earn 5 points, the 2nd 4 points
and so on. This limits the impact of a single slow expression. The following chart shows the score points per engine:&lt;&#x2F;p&gt;
&lt;div&gt;&lt;canvas id=&quot;score_chart&quot; height=&quot;400&quot;&gt;&lt;&#x2F;canvas&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
    var ctx = document.getElementById(&quot;score_chart&quot;);
    var myChart = new Chart(ctx, {
        type: &#x27;horizontalBar&#x27;,
        data: {
            labels: [&quot;tre&quot;, &quot;pcre-dfa&quot;, &quot;onig&quot;, &quot;pcre&quot;, &quot;re2&quot;, &quot;rust_regex&quot;, &quot;pcre-jit&quot;, &quot;hscan&quot;],
            datasets: [{
                label: &#x27;Score&#x27;,
                data: [0, 0, 4, 8, 26, 47, 47, 72],
                backgroundColor: [
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(54, 162, 235, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    &#x27;rgba(64, 64, 64, 0.2)&#x27;
                ],
                borderColor: [
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(54, 162, 235, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;,
                    &#x27;rgba(64, 64, 64, 1)&#x27;
                ],
                borderWidth: 1
            }]
        },
        options: {
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero:true
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: &#x27;points&#x27;
                    }
                }]
            }
        }
    });
&lt;&#x2F;script&gt;
&lt;p&gt;Hyperscan is still the number one, but the Rust regex crate gets the 2nd place together with PCRE2-JIT.
The results look better than the absolute timings, but it seems that one or more expressions are slow in their execution time.&lt;&#x2F;p&gt;
&lt;p&gt;So it‚Äôs time to take a look into the results for each expression. The following chart compares the average timings
of all engines per expression against the measured value of the Rust regex crate.
The secondary y-axis displays the ratio of the Rust value and the average value in percentage.&lt;&#x2F;p&gt;
&lt;div&gt;&lt;canvas id=&quot;rust_chart&quot; height=&quot;600&quot;&gt;&lt;&#x2F;canvas&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
    var ctx = document.getElementById(&quot;rust_chart&quot;);
    var myChart = new Chart(ctx, {
        type: &#x27;bar&#x27;,
        data: {
            labels: [
                &quot;Twain&quot;, &quot;(?i)Twain&quot;, &quot;[a-z]shing&quot;, &quot;Huck[a-zA-Z]+|Saw[a-zA-Z]+&quot;,
                &quot;\b\w+nn\b&quot;, &quot;[a-q][^u-z]{13}x&quot;, &quot;Tom|Sawyer|Huckleberry|Finn&quot;, &quot;(?i)Tom|Sawyer|Huckleberry|Finn&quot;,
                &quot;.{0,2}(Tom|Sawyer|Huckleberry|Finn)&quot;,&quot;.{2,4}(Tom|Sawyer|Huckleberry|Finn)&quot;,
                &quot;Tom.{10,25}river|river.{10,25}Tom&quot;, &quot;[a-zA-Z]+ing&quot;, &quot;\s[a-zA-Z]{0,12}ing\s&quot;,
                &quot;([A-Za-z]awyer|[A-Za-z]inn)\s&quot;, &quot;[\&quot;&#x27;][^\&quot;&#x27;]{0,30}[?!\.][\&quot;&#x27;]&quot;, &quot;‚àû|‚úì&quot;, &quot;\p{Sm}&quot;
            ],
            datasets: [
                {
                    type: &#x27;bar&#x27;,
                    label: &#x27;AVG&#x27;,
                    yAxisID: &#x27;timing&#x27;,
                    data: [39.2, 90.4, 219.4, 69.3, 424.9, 833.5, 95.0, 253.4, 1129.5, 1252.4, 81.5, 427.0, 213.9, 334.9, 73.2, 45.2, 132.9],
                    backgroundColor: &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    borderColor: &#x27;rgba(64, 64, 64, 1)&#x27;,
                    borderWidth: 1
                },
                {
                    type: &#x27;bar&#x27;,
                    label: &#x27;Rust&#x27;,
                    yAxisID: &#x27;timing&#x27;,
                    data: [2.2, 41.9, 7.0, 5.5, 193.7, 3077.9, 39.9, 40.2, 34.2, 34.4, 28.6, 15.8, 40.5, 34.2, 12.5, 39.1, 33.9],
                    backgroundColor: &#x27;rgba(54, 162, 235, 0.2)&#x27;,
                    borderColor: &#x27;rgba(54, 162, 235, 1)&#x27;,
                    borderWidth: 1
                },
                {
                    type: &#x27;line&#x27;,
                    label: &#x27;Rust&#x2F;AVG&#x27;,
                    yAxisID: &#x27;ratio&#x27;,
                    data: [5.6, 46.3, 3.2, 7.9, 45.6, 369.3, 42.0, 15.9, 3.0, 2.7, 35.1, 3.7, 18.9, 10.2, 17.1, 86.6, 25.5],
                    borderColor: &#x27;rgba(255,99,132,1)&#x27;,
                    backgroundColor: &#x27;white&#x27;,
                    borderWidth: 2,
                    fill: false
                }
            ]
        },
        options: {
            maintainAspectRatio: false,
            scales: {
                yAxes: [
                    {
                        id: &#x27;timing&#x27;,
                        scaleLabel: {
                            display: true,
                            labelString: &#x27;ms&#x27;
                        },
                        type: &#x27;logarithmic&#x27;,
                        position: &#x27;left&#x27;,
                        ticks: {
                            beginAtZero:true
                        }
                    }, {
                        id: &#x27;ratio&#x27;,
                        scaleLabel: {
                            display: true,
                            labelString: &#x27;%&#x27;
                        },
                        type: &#x27;linear&#x27;,
                        position: &#x27;right&#x27;,
                        ticks: {
                            beginAtZero:true
                        }
                    }
                ]
            }
        }
    });
&lt;&#x2F;script&gt;
&lt;p&gt;The red curve has 3 major peeks of expressions for which the regex crate does not perform well.
The expressions are:&lt;&#x2F;p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-q][^u-z]{13}x&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;‚àû|‚úì&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(?i)Twain&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Especially the execution of the first of those three expression is done very slow.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;improvements&quot;&gt;Improvements&lt;&#x2F;h2&gt;
&lt;p&gt;With the first results of the benchmark I opened the ticket &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;regex&#x2F;issues&#x2F;350&quot;&gt;rust-lang&#x2F;regex&#x2F;350&lt;&#x2F;a&gt;
to get feedback regarding my findings. Andrew Gallant alias &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&quot;&gt;BurntSushi&lt;&#x2F;a&gt;
gave me great feedback with some improvement proposals.&lt;&#x2F;p&gt;
&lt;p&gt;One improvement is to use the SIMD feature of the regex crate. This feature is currently available in the Rust nightly
built, so I have to install the nightly toolchain too. I adjust the projects cmake scripts to detect whether a nightly
compiler is used and the SIMD feature is supported. So the rust toolchain can be switched with
&lt;code class=&quot;highlighter-rouge&quot;&gt;rustup default nightly-x86_64-unknown-linux-gnu&lt;&#x2F;code&gt; and the tool has to be reconfigured and build again to get
the new results.&lt;&#x2F;p&gt;
&lt;div&gt;&lt;canvas id=&quot;rust_simd_chart&quot; height=&quot;600&quot;&gt;&lt;&#x2F;canvas&gt;&lt;&#x2F;div&gt;
&lt;script&gt;
    var ctx = document.getElementById(&quot;rust_simd_chart&quot;);
    var myChart = new Chart(ctx, {
        type: &#x27;bar&#x27;,
        data: {
            labels: [
                &quot;Twain&quot;, &quot;(?i)Twain&quot;, &quot;[a-z]shing&quot;, &quot;Huck[a-zA-Z]+|Saw[a-zA-Z]+&quot;,
                &quot;\b\w+nn\b&quot;, &quot;[a-q][^u-z]{13}x&quot;, &quot;Tom|Sawyer|Huckleberry|Finn&quot;, &quot;(?i)Tom|Sawyer|Huckleberry|Finn&quot;,
                &quot;.{0,2}(Tom|Sawyer|Huckleberry|Finn)&quot;,&quot;.{2,4}(Tom|Sawyer|Huckleberry|Finn)&quot;,
                &quot;Tom.{10,25}river|river.{10,25}Tom&quot;, &quot;[a-zA-Z]+ing&quot;, &quot;\s[a-zA-Z]{0,12}ing\s&quot;,
                &quot;([A-Za-z]awyer|[A-Za-z]inn)\s&quot;, &quot;[\&quot;&#x27;][^\&quot;&#x27;]{0,30}[?!\.][\&quot;&#x27;]&quot;, &quot;‚àû|‚úì&quot;, &quot;\p{Sm}&quot;
            ],
            datasets: [
                {
                    type: &#x27;bar&#x27;,
                    label: &#x27;stable&#x27;,
                    yAxisID: &#x27;timing&#x27;,
                    data: [2.2, 41.9, 7, 5.5, 193.7, 3077.9, 39.9, 40.2, 34.2, 34.4, 28.6, 15.8, 40.5, 34.2, 12.5, 39.1, 33.9],
                    backgroundColor: &#x27;rgba(64, 64, 64, 0.2)&#x27;,
                    borderColor: &#x27;rgba(64, 64, 64, 1)&#x27;,
                    borderWidth: 1
                },
                {
                    type: &#x27;bar&#x27;,
                    label: &#x27;nightly&#x27;,
                    yAxisID: &#x27;timing&#x27;,
                    data: [2, 3.7, 5.9, 3.9, 179.9, 3120.6, 4.3, 40.3, 35.2, 34.7, 5.2, 16.8, 41.8, 34.4, 11.6, 3.6, 34.8],
                    backgroundColor: &#x27;rgba(54, 162, 235, 0.2)&#x27;,
                    borderColor: &#x27;rgba(54, 162, 235, 1)&#x27;,
                    borderWidth: 1
                },
                {
                    type: &#x27;line&#x27;,
                    label: &#x27;nightly&#x2F;stable&#x27;,
                    yAxisID: &#x27;ratio&#x27;,
                    data: [90.91, 8.83, 84.29, 70.91, 92.88, 101.39, 10.78, 100.25, 102.92, 100.87, 18.18, 106.33, 103.21, 100.58, 92.80, 9.21, 102.65],
                    borderColor: &#x27;rgba(255,99,132,1)&#x27;,
                    backgroundColor: &#x27;white&#x27;,
                    borderWidth: 2,
                    fill: false
                }
            ]
        },
        options: {
            maintainAspectRatio: false,
            scales: {
                yAxes: [
                    {
                        id: &#x27;timing&#x27;,
                        scaleLabel: {
                            display: true,
                            labelString: &#x27;ms&#x27;
                        },
                        type: &#x27;logarithmic&#x27;,
                        position: &#x27;left&#x27;,
                        ticks: {
                            beginAtZero:true
                        }
                    }, {
                        id: &#x27;ratio&#x27;,
                        scaleLabel: {
                            display: true,
                            labelString: &#x27;%&#x27;
                        },
                        type: &#x27;linear&#x27;,
                        position: &#x27;right&#x27;,
                        ticks: {
                            beginAtZero:true
                        }
                    }
                ]
            }
        }
    });
&lt;&#x2F;script&gt;
&lt;p&gt;The chart shows that the expressions &lt;code class=&quot;highlighter-rouge&quot;&gt;‚àû|‚úì&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;(?i)Twain&lt;&#x2F;code&gt; benefit by using the SIMD feature,
but not the expression &lt;code class=&quot;highlighter-rouge&quot;&gt;[a-q][^u-z]{13}x&lt;&#x2F;code&gt;. This expression requires backtracking.
The Rust regex crates uses a finite state machine based algorithm, which lacks for back-references and backtracking.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matches&quot;&gt;Matches&lt;&#x2F;h2&gt;
&lt;p&gt;Regarding the found matches I found some deviations. At first, the libraries oniguruma and tre do not support
Unicode category expressions like &lt;code class=&quot;highlighter-rouge&quot;&gt;\p{Sm}&lt;&#x2F;code&gt;. This expression matches all mathematical symbols like &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;&#x2F;code&gt;.
The Rust regex crate matches additionally the symbol &lt;code class=&quot;highlighter-rouge&quot;&gt;‚àû&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Hyperscan returns more matches than other engines, e.g. 977 for the expression &lt;code class=&quot;highlighter-rouge&quot;&gt;Huck[a-zA-Z]+|Saw[a-zA-Z]+&lt;&#x2F;code&gt; whereas
all other engines are finding 262 matches. Hyperscan reports all matches. The expression &lt;code class=&quot;highlighter-rouge&quot;&gt;Saw[a-zA-Z]+&lt;&#x2F;code&gt; returns the
following matches for input &lt;code class=&quot;highlighter-rouge&quot;&gt;Sawyer&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Sawy&lt;&#x2F;li&gt;
  &lt;li&gt;Sawye&lt;&#x2F;li&gt;
  &lt;li&gt;Sawyer&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All other engines report just one match: Sawy (non-greedy semantics) or Sawyer (greedy semantics).&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;The Rust regex crate is now something about 2 years old, but tends to edge mature engines like PCRE2 and
Hyperscan. Depending on the used expressions the Rust regex crate is a good choice for pattern matchings.
Thanks to all contributors of the regex crate for their awesome work.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;related-work&quot;&gt;Related work&lt;&#x2F;h1&gt;
&lt;p&gt;The regex crate contains it‚Äôs own benchmark harness with a lot expressions and support for:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;PCRE&lt;&#x2F;li&gt;
  &lt;li&gt;PCRE2&lt;&#x2F;li&gt;
  &lt;li&gt;RE2&lt;&#x2F;li&gt;
  &lt;li&gt;Oniguruma&lt;&#x2F;li&gt;
  &lt;li&gt;TCL&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This benchmark can be used to get another view on the performance of the engines.
Please see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;regex&#x2F;tree&#x2F;master&#x2F;bench&quot;&gt;bench subdirectory of the crates repository&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a Raytracer in Rust - Part 3 - Reflection and Refraction</title>
		<published>2017-03-27T00:00:00-06:00</published>
		<updated>2017-03-27T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-3-reflection-and-refraction-ytaigifdalmmx3ph1qlhj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-3-reflection-and-refraction-ytaigifdalmmx3ph1qlhj/</id>
		<content type="html">&lt;p&gt;Hello again, and welcome to the final part of my series on writing a raytracer in Rust (Part 1, Part 2). Previously we implemented a basic raytracer which could handle diffuse shading of planes and spheres with multiple objects and multiple lights. This time, we‚Äôll add texturing, reflection and transparent objects.
First, I‚Äôve refactored the common parts of Sphere and Plane out to a separate structure. Since this post is all about handling more complex surface properties, we‚Äôll need a structure to represent them and avoid duplication.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 49</title>
		<published>2017-03-26T00:00:00+00:00</published>
		<updated>2017-03-26T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-49-efzyv6-heabigd4gjkhwn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-49-efzyv6-heabigd4gjkhwn/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md : last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pulldown in rustdoc&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pull in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukaramu&quot;&gt;@lukaramu&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40803&quot;&gt;CONTRIBUTING.md regarding documentation contributions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;s3rvac&quot;&gt;@s3rvac&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40794&quot;&gt;formatting in the docs for std::process::Command::envs()&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40648&quot;&gt;a typo in path.rs docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40756&quot;&gt;markdown links to pdqsort&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40619&quot;&gt;docs for sort_unstable to unstable book&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40722&quot;&gt;various fixes to wording consistency in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40567&quot;&gt;documentation sorting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;manuel-rhdt&quot;&gt;@manuel-rhdt&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40715&quot;&gt;doc error for ExactSizeIterator&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40627&quot;&gt;diagnostic for incorrect &lt;code class=&quot;highlighter-rouge&quot;&gt;pub (restriction)&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SamWhited&quot;&gt;@SamWhited&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40723&quot;&gt;explanation for E0090 error message&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40692&quot;&gt;str docs consistently punctuated&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cldfire&quot;&gt;@Cldfire&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40725&quot;&gt;duplicated styling in main.css&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jswalden&quot;&gt;@jswalden&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40621&quot;&gt;a spelling error in HashMap documentation, and slightly reworded surrounding text for precision&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; extracted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40332&quot;&gt;book into a submodule&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dwrensha&quot;&gt;@dwrensha&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40576&quot;&gt;innacuracy in mir TerminatorKind::SwitchInt docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DaseinPhaos&quot;&gt;@DaseinPhaos&lt;&#x2F;a&gt; fixed&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40667&quot;&gt;typo in &lt;code class=&quot;highlighter-rouge&quot;&gt;ptr&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jdhorwitz&quot;&gt;@jdhorwitz&lt;&#x2F;a&gt; cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40502&quot;&gt;up visuals on error index&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40312&quot;&gt;process docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40689&quot;&gt;whitespace around ‚Äú=‚Äù in assoc items&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40690&quot;&gt;invalid linking in iter docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40671&quot;&gt;missing urls in Option enum&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40587&quot;&gt;invalid debug display for associated consts&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 29th of March 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a Raytracer in Rust - Part 2 - Light and Shadow</title>
		<published>2017-03-20T00:00:00-06:00</published>
		<updated>2017-03-20T00:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-2-light-and-shadow-xin4ecqjtszbyacqfd8mj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-2-light-and-shadow-xin4ecqjtszbyacqfd8mj/</id>
		<content type="html">&lt;p&gt;Welcome to Part 2 of my series on writing a raytracer in Rust. If you haven‚Äôt already, you may wish to read Part 1. Previously, we implemented a basic raytracer which can render only a single sphere with no lighting. This time, we‚Äôll add multiple objects, planes, and basic lighting.
Multiple Objects It‚Äôs pretty easy to change our scene definition to contain a Vec of spheres instead of just a single one.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 48</title>
		<published>2017-03-19T00:00:00+00:00</published>
		<updated>2017-03-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-48-p6elq2dfqgcujraz64kaz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-48-p6elq2dfqgcujraz64kaz/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md - Last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pulldown in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40452&quot;&gt;basic documentation&#x2F;examples for six unstable features&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40505&quot;&gt;a few improvements to the &lt;code class=&quot;highlighter-rouge&quot;&gt;core::hash&lt;&#x2F;code&gt; top-level docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40458&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;OsStr&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;OsString&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40456&quot;&gt;function invokation parens from documentation links&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40457&quot;&gt;usages of ‚ÄòOSX‚Äô (and other old names) to ‚ÄòmacOS‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tschottdorf&quot;&gt;@tschottdorf&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40453&quot;&gt;wording in the -{W,A,F,D} options&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;projektir&quot;&gt;@projektir&lt;&#x2F;a&gt; using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40496&quot;&gt;X headings #39850&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40466&quot;&gt;doc about highlighting code in other languages #40301&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40467&quot;&gt;README.md to point to the correct doc location&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40463&quot;&gt;style issues&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;llogiq&quot;&gt;@llogiq&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40495&quot;&gt;grammar format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40586&quot;&gt;sort_unstable to unstable book&lt;&#x2F;a&gt;, linked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40520&quot;&gt;core::slice to std::slice&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40517&quot;&gt;incorrect feature from the 1.16 relnotes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kevinmehall&quot;&gt;@kevinmehall&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40536&quot;&gt;documentation for Vec::dedup_by.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ericfindlay&quot;&gt;@ericfindlay&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40499&quot;&gt;very minor documentation detail about Unicode and Japanese&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40497&quot;&gt;sidebar not extending to the bottom of the page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40387&quot;&gt;the non-dropping of &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;&#x2F;code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;ptr::write{,_unaligned}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40526&quot;&gt;docs required again&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 22nd of March 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing the tokio-io Crate</title>
		<published>2017-03-17T00:00:00+00:00</published>
		<updated>2017-03-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-the-tokio-io-crate-qbnyh-yhxtcz6oy5yfknv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-the-tokio-io-crate-qbnyh-yhxtcz6oy5yfknv/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Put your Trust in Rust ‚Äì Shipping Now in Firefox</title>
		<published>2017-03-12T21:15:32+00:00</published>
		<updated>2017-03-12T21:15:32+00:00</updated>
		<link href="https://kitallis.github.io/hades/put-your-trust-in-rust-shipping-now-in-firefox-jzqmo-cvwqxajbdq2lu1o/" type="text/html"/>
		<id>https://kitallis.github.io/hades/put-your-trust-in-rust-shipping-now-in-firefox-jzqmo-cvwqxajbdq2lu1o/</id>
		<content type="html">&lt;p&gt;At Mozilla, security is one of our highest priorities, as the openness and accessibility of the Internet are threatened when user safety and privacy is not protected. Seven years ago &amp;#8230; &lt;a class=&quot;go&quot; href=&quot;https:&#x2F;&#x2F;blog.mozilla.org&#x2F;firefox&#x2F;put-trust-rust-shipping-now-firefox&#x2F;&quot;&gt;Read more&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The post &lt;a rel=&quot;nofollow&quot; href=&quot;https:&#x2F;&#x2F;blog.mozilla.org&#x2F;firefox&#x2F;put-trust-rust-shipping-now-firefox&#x2F;&quot;&gt;Put your Trust in Rust &amp;#8211; Shipping Now in Firefox&lt;&#x2F;a&gt; appeared first on &lt;a rel=&quot;nofollow&quot; href=&quot;https:&#x2F;&#x2F;blog.mozilla.org&#x2F;firefox&quot;&gt;The Firefox Frontier&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 47</title>
		<published>2017-03-12T00:00:00+00:00</published>
		<updated>2017-03-12T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-47-rpq-udlw9tozvqasjv95e/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-47-rpq-udlw9tozvqasjv95e/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md - Last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40452&quot;&gt;basic documentation&#x2F;examples for six unstable features.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tschottdorf&quot;&gt;@tschottdorf&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40453&quot;&gt;wording in the -{W,A,F,D} options&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39814&quot;&gt;invalid call on non-function error message&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40338&quot;&gt;hoedown with pulldown in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40265&quot;&gt;the style of the sidebar in rustdoc output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jdhorwitz&quot;&gt;@jdhorwitz&lt;&#x2F;a&gt; helped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40226&quot;&gt;people find String::as_bytes() for UTF-8&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40154&quot;&gt;unstable book to the bookshelf&lt;&#x2F;a&gt; and extracted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40222&quot;&gt;nomicon to its own repo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39713&quot;&gt;‚Äúpattern doesn‚Äôt bind x‚Äù messages&lt;&#x2F;a&gt;, pointed to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39202&quot;&gt;enclosing block&#x2F;fn on nested unsafe&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40287&quot;&gt;incorrect span label formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40258&quot;&gt;description of closure coercion feature&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39835&quot;&gt;release notes for 1.16&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bjorn3&quot;&gt;@bjorn3&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40146&quot;&gt;docs of rusty parts of typeck&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nashenas88&quot;&gt;@Nashenas88&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40345&quot;&gt;missing backtick typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40316&quot;&gt;a typo in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40092&quot;&gt;suggestion span error with a line containing multibyte characters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DirkyJerky&quot;&gt;@DirkyJerky&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40423&quot;&gt;docs in &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque::resize&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tbu-&quot;&gt;@tbu-&lt;&#x2F;a&gt; distinguished &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40386&quot;&gt;the ways &lt;code class=&quot;highlighter-rouge&quot;&gt;CStr::from_bytes_with_nul&lt;&#x2F;code&gt; can fail&lt;&#x2F;a&gt;, documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40335&quot;&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;str.to_{lower,upper}case&lt;&#x2F;code&gt; return &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40333&quot;&gt;handling of &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;&#x2F;code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;ptr::write&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40268&quot;&gt;normalization error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crazymerlyn&quot;&gt;@crazymerlyn&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40326&quot;&gt;link to COMPILER_TESTS.md in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joelgallant&quot;&gt;@joelgallant&lt;&#x2F;a&gt; made some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40321&quot;&gt;README formatting in configure&#x2F;make section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mmatyas&quot;&gt;@mmatyas&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40292&quot;&gt;text formatting in README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;malbarbo&quot;&gt;@malbarbo&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40293&quot;&gt;extra space in test description (of a mod test)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oconnor663&quot;&gt;@oconnor663&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40283&quot;&gt;docs for Args and ArgsOs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40419&quot;&gt;associated consts display&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40299&quot;&gt;missing example for Display::fmt&lt;&#x2F;a&gt;, cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40278&quot;&gt;rustdoc css&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40327&quot;&gt;missing urls in some macros doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 15th of March 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>LaTeX Tips</title>
		<published>2017-03-08T23:31:54-05:00</published>
		<updated>2017-03-08T23:31:54-05:00</updated>
		<link href="https://kitallis.github.io/hades/latex-tips-v0tkthhcdkppez2jwdmmf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/latex-tips-v0tkthhcdkppez2jwdmmf/</id>
		<content type="html">&lt;p&gt;LaTeX is a great system for typesetting reports, articles, letters, and even
posters and presentations, but it takes a while to find a set of useful
packages and tune it to your personal style. This page is a collection of
useful tips, tricks, and advice that I‚Äôve learned while working with LaTeX. I‚Äôm
assuming that you‚Äôre familiar with the basics of LaTeX; if you‚Äôre not, I
recommend starting with the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikibooks.org&#x2F;wiki&#x2F;LaTeX&quot;&gt;LaTeX Wikibook&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;All LaTeX output images on this page link to the LaTeX source used to generate
them.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;getting-help&quot;&gt;Getting Help&lt;&#x2F;h2&gt;
&lt;p&gt;For common problems, doing a simple web search is often the quickest way to
find a solution. For problems related to a specific package, the documentation
of most packages is very comprehensive and provides usage instructions and
solutions to common problems (especially conflicts with other packages).
These are some other good resources:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;www.tex.ac.uk&#x2F;index.html&quot;&gt;UK list of TeX FAQs&lt;&#x2F;a&gt; is a great list of
common questions. For troubleshooting, see especially the sections &lt;a href=&quot;http:&#x2F;&#x2F;www.tex.ac.uk&#x2F;index.html#ThingsareGoingWronghellip&quot;&gt;‚ÄúThings
are Going Wrong‚Ä¶‚Äù&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;www.tex.ac.uk&#x2F;index.html#Whydoesitemdoemthat&quot;&gt;‚ÄúWhy does it
&lt;em&gt;do&lt;&#x2F;em&gt; that?‚Äù&lt;&#x2F;a&gt;, and &lt;a href=&quot;http:&#x2F;&#x2F;www.tex.ac.uk&#x2F;index.html#ThejoyofTeXerrors&quot;&gt;‚ÄúThe
joy of TeX errors‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;en.wikibooks.org&#x2F;wiki&#x2F;LaTeX&quot;&gt;LaTeX Wikibook&lt;&#x2F;a&gt; has nicely-organized pages and lots of examples for
common topics.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;&quot;&gt;LaTeX Stack Exchange&lt;&#x2F;a&gt; is a good place to
ask questions or search questions others have asked.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;martin-ueding.de&#x2F;posts&#x2F;common-latex-mistakes&#x2F;&quot;&gt;Martin Ueding has some additional tips&lt;&#x2F;a&gt;, especially how to
avoid common mistakes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;project-structure&quot;&gt;Project Structure&lt;&#x2F;h2&gt;
&lt;p&gt;For small to mid-size documents, I recommend the following file&#x2F;directory
structure:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;project&#x2F;
‚îú‚îÄ‚îÄ .git&#x2F;
‚îú‚îÄ‚îÄ .gitignore
‚îú‚îÄ‚îÄ fig&#x2F;
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ tikz_figure.tex
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ svg_figure.svg
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ ‚Ä¶
‚îú‚îÄ‚îÄ Makefile
‚îú‚îÄ‚îÄ mystyle.sty
‚îú‚îÄ‚îÄ document.tex
‚îî‚îÄ‚îÄ ‚Ä¶
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notice, in particular, that figures are confined to their own directory,
&lt;code&gt;fig&#x2F;&lt;&#x2F;code&gt;. Also, the style of the document (i.e. what would normally go in the
preamble) is in a separate &lt;code&gt;mystyle.sty&lt;&#x2F;code&gt; file. This keeps from cluttering up
the &lt;code&gt;.tex&lt;&#x2F;code&gt; document and makes it easy to copy your standard style between
projects.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reference-management&quot;&gt;Reference Management&lt;&#x2F;h2&gt;
&lt;p&gt;I recommend &lt;a href=&quot;http:&#x2F;&#x2F;www.jabref.org&#x2F;&quot;&gt;JabRef&lt;&#x2F;a&gt; for reference management because
it‚Äôs easy to use, is quite comprehensive, and has nice features like group
management, advanced searching, linking to downloaded full-text articles (which
is really convenient!), integrating with external tools, etc. It is compatible
with both &lt;a href=&quot;http:&#x2F;&#x2F;www.bibtex.org&#x2F;&quot;&gt;BibTeX&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;biblatex&quot;&gt;BibLaTeX&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It‚Äôs especially convenient to &lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;questions&#x2F;79251&#x2F;improving-a-workflow-for-importing-bibtex-citations&#x2F;112236#112236&quot;&gt;set up automatic import of &lt;code&gt;.bib&lt;&#x2F;code&gt; files from
your web browser&lt;&#x2F;a&gt;.
Then, you can click on the ‚Äúdownload citation‚Äù link available on most journal
article pages and directly import the citation information into JabRef.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;compilation-and-synctex&quot;&gt;Compilation and SyncTeX&lt;&#x2F;h2&gt;
&lt;p&gt;I typically use &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;GNU Emacs&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;auctex&#x2F;&quot;&gt;AUCTeX&lt;&#x2F;a&gt; for compilation, but if you use
a &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;make.html&quot;&gt;Makefile&lt;&#x2F;a&gt;, then &lt;a href=&quot;http:&#x2F;&#x2F;www.ctan.org&#x2F;pkg&#x2F;latexmk&quot;&gt;latexmk&lt;&#x2F;a&gt; makes it easy to run all of the appropriate
commands to compile the document.&lt;&#x2F;p&gt;
&lt;p&gt;It‚Äôs possible to synchronize &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;auctex&#x2F;&quot;&gt;AUCTeX&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;okular.kde.org&#x2F;&quot;&gt;Okular&lt;&#x2F;a&gt; document viewer such
that when you type &lt;code&gt;C-c C-v&lt;&#x2F;code&gt; (&lt;code&gt;TeX-view&lt;&#x2F;code&gt;) in Emacs, Okular will open the
document centered at the cursor location, and if you Shift-click in Okular,
Emacs will open the LaTeX source file with the cursor at the corresponding
location. To set up the Emacs ‚Üí Okular link, assuming AUCTeX is already
installed and configured, add the following to your &lt;code&gt;.emacs&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-elisp&quot; data-lang=&quot;elisp&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;c1&quot;&gt;;; Enable SyncTeX correlation.&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-source-correlate-mode&lt;&#x2F;span&gt; &lt;span class=&quot;no&quot;&gt;t&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-source-correlate-start-server&lt;&#x2F;span&gt; &lt;span class=&quot;no&quot;&gt;t&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-source-correlate-method&lt;&#x2F;span&gt; &lt;span class=&quot;ss&quot;&gt;&amp;#39;synctex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c1&quot;&gt;;; Use Okular as the PDF viewer.&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-view-program-selection&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;output-pdf&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;PDF Viewer&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;&#x2F;span&gt;
&lt;span class=&quot;c1&quot;&gt;;; Define %(dir) expansion for use in `TeX-view-program-list&#x27; because the expanded&lt;&#x2F;span&gt;
&lt;span class=&quot;c1&quot;&gt;;; path needs to match exactly the path listed in the *.synctex.gz file.&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-expand-list&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%(dir)&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;lambda&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;arg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;default-directory&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;setq&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;TeX-view-program-list&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;PDF Viewer&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;okular --unique file:&#x2F;&#x2F;%(dir)%o#src:%n%(dir).&#x2F;%b&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To set up the Okular ‚Üí Emacs link, open Okular&amp;rsquo;s configuration dialog with
&lt;code&gt;Settings&lt;&#x2F;code&gt; ‚Üí &lt;code&gt;Configure Okular‚Ä¶&lt;&#x2F;code&gt;, click on the &lt;code&gt;Editor&lt;&#x2F;code&gt; tab, and then select
&lt;code&gt;Emacs client&lt;&#x2F;code&gt; as your &lt;code&gt;Editor&lt;&#x2F;code&gt;. The corresponding &lt;code&gt;Command&lt;&#x2F;code&gt; is:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;emacsclient -a emacs --no-wait +%l %f
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;If you‚Äôre using &lt;a href=&quot;http:&#x2F;&#x2F;www.ctan.org&#x2F;pkg&#x2F;latexmk&quot;&gt;latexmk&lt;&#x2F;a&gt; to build your document, make sure you tell your
LaTeX engine to generate the SyncTeX file. For example, if you‚Äôre using
a &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;make.html&quot;&gt;Makefile&lt;&#x2F;a&gt; with &lt;a href=&quot;http:&#x2F;&#x2F;www.ctan.org&#x2F;pkg&#x2F;latexmk&quot;&gt;latexmk&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;xetex&#x2F;&quot;&gt;XeLaTeX&lt;&#x2F;a&gt; engine, you can use the
following rule (note the &lt;code&gt;-synctex=1&lt;&#x2F;code&gt; option):&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-makefile&quot; data-lang=&quot;makefile&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;%.pdf&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;&#x2F;span&gt; %.&lt;span class=&quot;n&quot;&gt;tex&lt;&#x2F;span&gt;
	latexmk -pdf -pdflatex&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;xelatex -synctex=1 %O %S&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;$&lt;span class=&quot;s2&quot;&gt;&amp;lt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h2 id=&quot;computation-results&quot;&gt;Computation Results&lt;&#x2F;h2&gt;
&lt;p&gt;Martin Ueding developed a great technique to automatically &lt;a href=&quot;https:&#x2F;&#x2F;martin-ueding.de&#x2F;posts&#x2F;computation-results-in-latex&#x2F;&quot;&gt;insert results from
Python computations into LaTeX documents&lt;&#x2F;a&gt;. Basically, you
generate the results with your script, (optionally) save the results to a file
to cache them, use &lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;&quot;&gt;Jinja&lt;&#x2F;a&gt; to insert the results into
your LaTeX template, and then compile the resulting LaTeX source file.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;managing-floats&quot;&gt;Managing Floats&lt;&#x2F;h2&gt;
&lt;p&gt;In LaTeX, some environments, such as figures and tables, are floating. This
means that LaTeX will position them in what it thinks is the optimal location
based on some heuristics. Unfortunately, these heuristics aren‚Äôt always ideal.&lt;&#x2F;p&gt;
&lt;p&gt;Often, it is useful to force LaTeX to place a float immediately, such as before
starting a new section. The &lt;code&gt;\clearpage&lt;&#x2F;code&gt; command forces LaTeX to place any
remaining floats and starts a new page. I like using &lt;code&gt;\clearpage&lt;&#x2F;code&gt; before each
major section of my document. If you‚Äôre tight on space, the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;placeins&quot;&gt;&lt;code&gt;placeins&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
package provides a &lt;code&gt;\FloatBarrier&lt;&#x2F;code&gt; command that places the remaining floats
without starting a new page.&lt;&#x2F;p&gt;
&lt;p&gt;LaTeX‚Äôs defaults can be overly restrictive, refusing to place many floats on a
page or leaving large amounts of white space below floats. This seems to be
particularly common in two-column layouts. In this case, some of the following
settings may be useful for you:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;c&quot;&gt;% For all pages:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\topfraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.9&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;     &lt;span class=&quot;c&quot;&gt;% max fraction of page filled by floats at top&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\bottomfraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.8&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;  &lt;span class=&quot;c&quot;&gt;% max fraction of page filled by floats at bottom&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;% For non-float pages:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setcounter&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;topnumber&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;10&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;           &lt;span class=&quot;c&quot;&gt;% max number of floats at top of page&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setcounter&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;bottomnumber&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;10&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;        &lt;span class=&quot;c&quot;&gt;% max number of floats at bottom of page&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setcounter&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;totalnumber&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;10&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;         &lt;span class=&quot;c&quot;&gt;% max number of floats on page&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setcounter&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;dbltopnumber&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;10&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;        &lt;span class=&quot;c&quot;&gt;% max number of floats on 2-column page&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\dbltopfraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.9&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;  &lt;span class=&quot;c&quot;&gt;% max fraction of 2-column page taken up by column-spanning floats at top&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\textfraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.1&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;    &lt;span class=&quot;c&quot;&gt;% min fraction of page taken up by text&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;% For float pages:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\floatpagefraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.7&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;	  &lt;span class=&quot;c&quot;&gt;% min fraction of page taken up by floats (must be less than \topfraction)&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\dblfloatpagefraction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;0.7&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;c&quot;&gt;% min fraction of 2-column page taken up by floats&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;cite&gt;Modified version of settings
from
&lt;a href=&quot;http:&#x2F;&#x2F;aty.sdsu.edu&#x2F;~aty&#x2F;bibliog&#x2F;latex&#x2F;floats.html#preamble&quot;&gt;Controlling LaTeX floats&lt;&#x2F;a&gt; by
Andrew T. Young.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;
&lt;p&gt;See &lt;a href=&quot;http:&#x2F;&#x2F;www.tex.ac.uk&#x2F;FAQ-floats.html&quot;&gt;Moving tables and figures in LaTeX&lt;&#x2F;a&gt;
for some other tips for wrangling floats.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matching-matplotlib-style&quot;&gt;Matching Matplotlib Style&lt;&#x2F;h2&gt;
&lt;p&gt;With a little bit of work, it&amp;rsquo;s possible to make &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.org&#x2F;&quot;&gt;Matplotlib&lt;&#x2F;a&gt; (Python
plotting library) use LaTeX for typesetting text with the same style as the
rest of your document. The following technique seems to work most of the time:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Place your LaTeX config for typesetting math in &lt;code&gt;mymath.sty&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Create a file &lt;code&gt;plt.py&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;cycler&lt;&#x2F;span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;cycler&lt;&#x2F;span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib&lt;&#x2F;span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.backends.backend_pgf&lt;&#x2F;span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;FigureCanvasPgf&lt;&#x2F;span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;&#x2F;span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;def&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;get_preamble&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;style_path&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;preamble&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;style_path&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;style_file&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;&#x2F;span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;style_file&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;startswith&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;sa&quot;&gt;r&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;\ProvidesPackage&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;preamble&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;preamble&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;def&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;color&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex_style&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;mymath.sty&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex_engine&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;xelatex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;&#x2F;span&gt;
&lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;Initialize the settings.&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex_engine&lt;&#x2F;span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;xelatex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;lualatex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;pdflatex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;}:&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;matplotlib&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;backend_bases&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;register_backend&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;pdf&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;FigureCanvasPgf&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;font&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;family&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;serif&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;pgf&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;preamble&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;get_preamble&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;tex_style&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rcfonts&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;texsystem&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;tex_engine&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;tex_engine&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;latex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;text&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;usetex&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;text.latex&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;unicode&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;font&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;family&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;serif&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;serif&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;Computer Modern&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;raise&lt;&#x2F;span&gt; &lt;span class=&quot;ne&quot;&gt;ValueError&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;Unrecognized tex engine: &lt;&#x2F;span&gt;&lt;span class=&quot;si&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;tex_engine&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;axes&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;prop_cycle&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;cycler&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;color&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;k&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;k&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;k&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;k&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;cycler&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;linestyle&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s1&quot;&gt;&#x27;-&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;--&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;:&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s1&quot;&gt;&#x27;-.&#x27;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;])))&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;li&gt;&lt;&#x2F;p&gt;
&lt;li&gt;&lt;p&gt;In the plotting script, import &lt;code&gt;plt&lt;&#x2F;code&gt; and call &lt;code&gt;plt.init()&lt;&#x2F;code&gt; (passing in any
options that are different from the defaults) to set up Matplotlib.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;If you use this technique, you have to be careful about what you put in
&lt;code&gt;mymath.sty&lt;&#x2F;code&gt;, and Matplotlib still won&amp;rsquo;t let you use custom commands that
you&amp;rsquo;ve defined, but it generally works fairly well for simple cases. For more
information, see the LaTeX-related options in &lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.org&#x2F;users&#x2F;customizing.html&quot;&gt;Matplotlib&amp;rsquo;s customization
documentation&lt;&#x2F;a&gt; and see the
&lt;a href=&quot;http:&#x2F;&#x2F;matplotlib.org&#x2F;users&#x2F;pgf.html&quot;&gt;documentation on typesetting with XeLaTeX&#x2F;LuaLaTeX&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mathematics&quot;&gt;Mathematics&lt;&#x2F;h2&gt;
&lt;p&gt;One of LaTeX‚Äôs strengths is typesetting mathematics.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;math-environments&quot;&gt;Math Environments&lt;&#x2F;h3&gt;
&lt;p&gt;Use the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;amsmath&quot;&gt;&lt;code&gt;amsmath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;amsfonts&quot;&gt;&lt;code&gt;amssymb&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; packages for more math environments and
commands. In particular, the &lt;code&gt;align&lt;&#x2F;code&gt;, &lt;code&gt;aligned&lt;&#x2F;code&gt;, and &lt;code&gt;gathered&lt;&#x2F;code&gt; environments
are very useful.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;math-symbols&quot;&gt;Math Symbols&lt;&#x2F;h3&gt;
&lt;p&gt;I prefer typesetting mathematics in the style of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ISO_80000-2&quot;&gt;ISO¬†80000‚Äë2&lt;&#x2F;a&gt; (with some
minor modifications), which unfortunately is somewhat different from the
default LaTeX style. To achieve this, I use two different sets of packages,
based on whether I‚Äôm using &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;xetex&#x2F;&quot;&gt;XeLaTeX&lt;&#x2F;a&gt; (which supports the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
package) or &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;applications&#x2F;pdftex&#x2F;&quot;&gt;pdfLaTeX&lt;&#x2F;a&gt; (which doesn‚Äôt).&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôre using &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;xetex&#x2F;&quot;&gt;XeLaTeX&lt;&#x2F;a&gt;, the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package is great because it
supports a wider variety of symbols and styles than the defaults, and as a nice
bonus, it lets you type your math in Unicode. This is how I like to include it
in my documents:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[math-style=ISO,bold-style=ISO,nabla=upright,partial=upright]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;unicode-math&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setmathfont&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;latinmodern-math.otf&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\setmathfont&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[range=\mathbb]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;texgyretermes-math.otf&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Then, you can define convenient commands for bold italic vectors (&lt;code&gt;\vec&lt;&#x2F;code&gt;), bold
italic matrices (&lt;code&gt;\mat&lt;&#x2F;code&gt;), bold sans-serif tensors (&lt;code&gt;\tens&lt;&#x2F;code&gt;), and bold italic
(with hat) unit vectors (&lt;code&gt;\uvec&lt;&#x2F;code&gt;) like the following:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\renewcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\vec&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[1]&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbfit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbf&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt; &lt;span class=&quot;c&quot;&gt;% Nested \symbfit and \symbf to handle \vec{0}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\mat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[1]&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbfit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\tens&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[1]&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbfsf&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\uveci&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbfit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\hat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\mkern&lt;&#x2F;span&gt;-1mu &lt;span class=&quot;k&quot;&gt;\textit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\bfseries\i&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;\mkern&lt;&#x2F;span&gt;1.5mu&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\uvecj&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbfit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\hat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\textit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\bfseries\j&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;\mkern&lt;&#x2F;span&gt;1.5mu&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\DeclareRobustCommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\uvec&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[1]&lt;span class=&quot;nb&quot;&gt;{{&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\ifcsname&lt;&#x2F;span&gt; uvec&lt;span class=&quot;k&quot;&gt;\detokenize&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\endcsname&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;\csname&lt;&#x2F;span&gt; uvec#1&lt;span class=&quot;k&quot;&gt;\endcsname&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\else&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;\symbfit&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\symbf&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\hat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt; &lt;span class=&quot;c&quot;&gt;% Nested \symbfit and \symbf to handle \uvec{0}&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\fi&lt;&#x2F;span&gt;
&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;I haven&amp;rsquo;t fully refined my configuration for &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;applications&#x2F;pdftex&#x2F;&quot;&gt;pdfLaTeX&lt;&#x2F;a&gt;. That said,
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;bm&quot;&gt;&lt;code&gt;bm&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package is the most reliable option I‚Äôve found for making bold
italic characters. I also had some success with using the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;isomath&quot;&gt;&lt;code&gt;isomath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
and &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;mathdesign&quot;&gt;&lt;code&gt;mathdesign&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; packages with the Utopia font, like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[utopia]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;mathdesign&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;isomath&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\vec&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\vectorsym&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\uvec&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[1]&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\vectorsym&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\hat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;#1&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\mat&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\matrixsym&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\tens&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\tensorsym&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h3 id=&quot;delimiters&quot;&gt;Delimiters&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package provides convenient commands to typeset delimiters.
Note that if you‚Äôre using &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; with the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package,
you must include &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in your preamble before &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Personally, I prefer redefining the &lt;code&gt;\del&lt;&#x2F;code&gt; command provided by &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to
another name because I use &lt;code&gt;\del&lt;&#x2F;code&gt; to refer to the del operator &lt;strong&gt;‚àá&lt;&#x2F;strong&gt; (a nabla
vector). To redefine &lt;code&gt;\del&lt;&#x2F;code&gt; to e.g. &lt;code&gt;\prn&lt;&#x2F;code&gt;, use&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\let\prn\del&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;I always use &lt;code&gt;\prn&lt;&#x2F;code&gt; and the delimiter commands provided by &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;
(&lt;code&gt;\sbr&lt;&#x2F;code&gt;, &lt;code&gt;\cbr&lt;&#x2F;code&gt;, etc.) for scaled delimiters instead of the standard LaTeX
&lt;code&gt;\left&lt;&#x2F;code&gt; and &lt;code&gt;\right&lt;&#x2F;code&gt; commands for scaling delimiters, because they reduce
typing and my editor (&lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;GNU Emacs&lt;&#x2F;a&gt;) makes it very easy to manipulate
expressions surrounded by simple delimiter pairs (like curly braces). My editor
also makes it easy to identify matched&#x2F;unmatched curly braces. In contrast,
trying to make sure the &lt;code&gt;\left&lt;&#x2F;code&gt; and &lt;code&gt;\right&lt;&#x2F;code&gt; commands are always properly
paired is a pain.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;derivatives&quot;&gt;Derivatives&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package provides convenient commands to typeset derivatives
and differentials, in particular the &lt;code&gt;\od&lt;&#x2F;code&gt;, &lt;code&gt;\pd&lt;&#x2F;code&gt;, &lt;code&gt;\md&lt;&#x2F;code&gt;, and &lt;code&gt;\dif&lt;&#x2F;code&gt; commands
and their variants. Note that if you‚Äôre using &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; with
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package, you must include &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;commath&quot;&gt;&lt;code&gt;commath&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; in your preamble
before &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;One problem is that, by default, LaTeX typesets the &lt;code&gt;\partial&lt;&#x2F;code&gt; character in
partial derivatives as slanted instead of upright. (The ISO convention is that
all operators, including differential operators, should be typeset upright.)&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôre using &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;xetex&#x2F;&quot;&gt;XeLaTeX&lt;&#x2F;a&gt;, you can get an upright &lt;code&gt;\partial&lt;&#x2F;code&gt; character simply
by using the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;unicode-math&quot;&gt;&lt;code&gt;unicode-math&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package with the &lt;code&gt;partial=upright&lt;&#x2F;code&gt; option. This
gives output like the following:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___128w.png 128w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___32w.png 32w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___48w.png 48w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___64w.png 64w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unicode-math-example___96w.png 96w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 4rem) 4rem, (min-width: 2rem) 100vw, 2rem&amp;quot;
style=&amp;quot;width:4rem; min-width:2rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Partial derivative with upright ‚àÇ characters using unicode-math&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;If you‚Äôre using &lt;a href=&quot;https:&#x2F;&#x2F;www.tug.org&#x2F;applications&#x2F;pdftex&#x2F;&quot;&gt;pdfLaTeX&lt;&#x2F;a&gt;, you need to either take the upright &lt;code&gt;\partial&lt;&#x2F;code&gt;
character from another font or unslant the default &lt;code&gt;\partial&lt;&#x2F;code&gt; character. The
default output looks like this:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;partial-derivative-slanted-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___128w.png 128w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___32w.png 32w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___48w.png 48w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___64w.png 64w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-slanted-example___96w.png 96w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 4rem) 4rem, (min-width: 2rem) 100vw, 2rem&amp;quot;
style=&amp;quot;width:4rem; min-width:2rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Partial derivative with the default slanted ‚àÇ characters&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;To replace the default &lt;code&gt;\partial&lt;&#x2F;code&gt; character with the one from the &lt;code&gt;fourier&lt;&#x2F;code&gt;
font, you can include these commands in the preamble:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\DeclareFontEncoding&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;FML&lt;span class=&quot;nb&quot;&gt;}{}{}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\DeclareFontSubstitution&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;FML&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;futm&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;m&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;it&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\DeclareSymbolFont&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;fourier&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;FML&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;futm&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;m&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;it&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\DeclareMathSymbol&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\partialup&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\mathord&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;fourier&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;130&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\partial&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\partialup&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;&lt;cite&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;a&#x2F;27533&quot;&gt;LaTeX Stack Exchange answer&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;users&#x2F;1495&#x2F;kahen&quot;&gt;kahen&lt;&#x2F;a&gt;, ¬©¬†2011 and licensed
under &lt;a href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-sa&#x2F;3.0&#x2F;&quot;&gt;CC¬†BY‚ÄëSA¬†3.0&lt;&#x2F;a&gt;.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;
&lt;p&gt;which results in output like this:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___125w.png 125w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___31w.png 31w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___47w.png 47w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___63w.png 63w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-fourier-example___94w.png 94w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 3.9375rem) 3.9375rem, (min-width: 1.96875rem) 100vw, 1.96875rem&amp;quot;
style=&amp;quot;width:3.9375rem; min-width:1.96875rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Partial derivative with upright ‚àÇ character from fourier font&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;‚ÄúUnslanting‚Äù the default &lt;code&gt;\partial&lt;&#x2F;code&gt; character tends to blend in better with the
surrounding text. To do this, use these commands:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;scalerel&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newsavebox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\unslantbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newlength&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\unslantdim&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\slantbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;[2][0]&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\mbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\sbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\unslantbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;#2&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\unslantdim&lt;&#x2F;span&gt;=#1&lt;span class=&quot;k&quot;&gt;\wd\unslantbox&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\hskip&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;\wd\unslantbox&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\hskip&lt;&#x2F;span&gt; -0.5&lt;span class=&quot;k&quot;&gt;\unslantdim&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\pdfsave&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\pdfsetmatrix&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;1 0 #1 1&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\llap&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usebox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\unslantbox&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;c&quot;&gt;%&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\pdfrestore&lt;&#x2F;span&gt;
        &lt;span class=&quot;k&quot;&gt;\hskip&lt;&#x2F;span&gt; 0.5&lt;span class=&quot;k&quot;&gt;\unslantdim&lt;&#x2F;span&gt;
&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand\unslant&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[2][-.25]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\ThisStyle&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\slantbox&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[#1]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;\SavedStyle&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}}}&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;\let\partialslanted\partial&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\renewcommand*&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\partial&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\unslant&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\partialslanted&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;cite&gt;Modified version
of &lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;a&#x2F;239823&quot;&gt;this LaTeX Stack Exchange answer&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;tex.stackexchange.com&#x2F;users&#x2F;34505&#x2F;john-kormylo&quot;&gt;John Kormylo&lt;&#x2F;a&gt;,
¬©¬†2015 and licensed under &lt;a href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-sa&#x2F;3.0&#x2F;&quot;&gt;CC¬†BY‚ÄëSA¬†3.0&lt;&#x2F;a&gt;.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;
&lt;p&gt;which results in output like this:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___128w.png 128w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___32w.png 32w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___48w.png 48w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___64w.png 64w,
&#x2F;media&#x2F;teximg&#x2F;partial-derivative-upright-unslant-example___96w.png 96w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 4rem) 4rem, (min-width: 2rem) 100vw, 2rem&amp;quot;
style=&amp;quot;width:4rem; min-width:2rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Partial derivative with upright ‚àÇ character by unslanting the default&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;h2 id=&quot;useful-packages-by-topic&quot;&gt;Useful Packages by Topic&lt;&#x2F;h2&gt;
&lt;p&gt;This is a collection of useful packages that I usually include in my documents,
organized by topic.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;page-layout-e-g-margins&quot;&gt;Page Layout (e.g. Margins)&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;geometry&quot;&gt;&lt;code&gt;geometry&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package makes it simple to adjust page layout. In most of my
documents, I include the following line to get 1‚Äâinch margins:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[margin=1in]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;geometry&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h3 id=&quot;numbers-and-units&quot;&gt;Numbers and Units&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;siunitx&quot;&gt;&lt;code&gt;siunitx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package provides commands for correctly typesetting numbers
and units according to SI&#x2F;ISO&#x2F;NIST standards and makes it easy to switch
between styles of unit display. You can typeset numbers with the &lt;code&gt;\num&lt;&#x2F;code&gt;
command, such as &lt;code&gt;\num{4.135667662(25)e-15}&lt;&#x2F;code&gt;, which yields&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;siunitx-num-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___146w.png 146w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___194w.png 194w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___291w.png 291w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___388w.png 388w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-num-example___97w.png 97w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 12.125rem) 12.125rem, (min-width: 6.0625rem) 100vw, 6.0625rem&amp;quot;
style=&amp;quot;width:12.125rem; min-width:6.0625rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Example of typesetting a number with the \num command&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;You can typeset units with the &lt;code&gt;\si&lt;&#x2F;code&gt; command. You can specify the units by
typing the literal representation (e.g.¬†&lt;code&gt;\si{m&#x2F;s}&lt;&#x2F;code&gt;) or by using commands
provided by &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;siunitx&quot;&gt;&lt;code&gt;siunitx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. The advantage of using the commands is that
adjusting the format of all of the units later is simply a matter of changing
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;siunitx&quot;&gt;&lt;code&gt;siunitx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; configuration. An example of using the command format is
&lt;code&gt;\si{\micro\meter\candela\squared\per\second}&lt;&#x2F;code&gt;, which yields&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;siunitx-si-unit-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___120w.png 120w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___159w.png 159w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___40w.png 40w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___60w.png 60w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-si-unit-example___80w.png 80w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 5rem) 5rem, (min-width: 2.5rem) 100vw, 2.5rem&amp;quot;
style=&amp;quot;width:5rem; min-width:2.5rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Example of typesetting units with the \si command&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;You can typeset physical quantities (numbers with units) with the &lt;code&gt;\SI&lt;&#x2F;code&gt;
command, such as &lt;code&gt;\SI{9.81}{\meter\per\second\squared}&lt;&#x2F;code&gt;, which yields&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;siunitx-physical-quantity-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___114w.png 114w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___152w.png 152w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___38w.png 38w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___57w.png 57w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-physical-quantity-example___76w.png 76w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 4.75rem) 4.75rem, (min-width: 2.375rem) 100vw, 2.375rem&amp;quot;
style=&amp;quot;width:4.75rem; min-width:2.375rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Example of typesetting a physical quantity with the \SI command&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;If you prefer a slash instead of negative exponents, you can add
&lt;code&gt;\sisetup{per-mode=symbol}&lt;&#x2F;code&gt; after loading &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;siunitx&quot;&gt;&lt;code&gt;siunitx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. Note that the
&lt;code&gt;\num&lt;&#x2F;code&gt;, &lt;code&gt;\si&lt;&#x2F;code&gt;, and &lt;code&gt;\SI&lt;&#x2F;code&gt; commands can be used in both text and math mode.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;siunitx&quot;&gt;&lt;code&gt;siunitx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; also provides an &lt;code&gt;S&lt;&#x2F;code&gt; column type that aligns numbers by their
decimal point and typesets numbers in the same way as the &lt;code&gt;\num&lt;&#x2F;code&gt; command. Note
that you have to be careful to wrap your headers in curly braces. Additionally,
it‚Äôs a good idea to specify &lt;code&gt;table-format&lt;&#x2F;code&gt; for the &lt;code&gt;S&lt;&#x2F;code&gt; columns to ensure the
headers are properly centered. (Otherwise, they‚Äôre centered about the decimal
point.) For example:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\begin&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;tabular&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
  &lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;
    @&lt;span class=&quot;nb&quot;&gt;{}&lt;&#x2F;span&gt;
    &amp;gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}l&amp;lt;{&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
    S[table-format=-2.3(1)]
    S[table-format=3.3(1)]
    @&lt;span class=&quot;nb&quot;&gt;{}&lt;&#x2F;span&gt;
  &lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\toprule&lt;&#x2F;span&gt;
  &lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\text&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;Parameter&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;First&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;Second&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;\\&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\midrule&lt;&#x2F;span&gt;
  a &#x2F; &lt;span class=&quot;k&quot;&gt;\si&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\angstrom&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 1.234(2) &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 5.678(4) &lt;span class=&quot;k&quot;&gt;\\&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\theta&lt;&#x2F;span&gt; &#x2F; &lt;span class=&quot;k&quot;&gt;\si&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\degree&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; -90.34(4) &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 104.45(7) &lt;span class=&quot;k&quot;&gt;\\&lt;&#x2F;span&gt;
  q &#x2F; &lt;span class=&quot;k&quot;&gt;\si&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\micro\meter&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 0.532 &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 0.894 &lt;span class=&quot;k&quot;&gt;\\&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\gamma&lt;&#x2F;span&gt; &#x2F; &lt;span class=&quot;k&quot;&gt;\si&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\per\kilo\gram&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 2.734 &lt;span class=&quot;nb&quot;&gt;&amp;amp;&lt;&#x2F;span&gt; 1.485 &lt;span class=&quot;k&quot;&gt;\\&lt;&#x2F;span&gt;
  &lt;span class=&quot;k&quot;&gt;\bottomrule&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\end&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;tabular&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;yields&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;siunitx-s-column-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___145w.png 145w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___217w.png 217w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___289w.png 289w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___434w.png 434w,
&#x2F;media&#x2F;teximg&#x2F;siunitx-s-column-example___579w.png 579w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 18.0625rem) 18.0625rem, (min-width: 9.03125rem) 100vw, 9.03125rem&amp;quot;
style=&amp;quot;width:18.0625rem; min-width:9.03125rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Table with one math column and two S columns&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;h3 id=&quot;graphics&quot;&gt;Graphics&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;graphicx&quot;&gt;&lt;code&gt;graphicx&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package works well for including most types of external
images (e.g. JPG, PNG, EPS, PDF) but does not have support for SVG images.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;svg&quot;&gt;&lt;code&gt;svg&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package makes it easy to include SVG images by converting them to
PDFs with &lt;a href=&quot;https:&#x2F;&#x2F;inkscape.org&#x2F;&quot;&gt;Inkscape&lt;&#x2F;a&gt;. It also makes it possible to compile the text in your
SVGs with LaTeX so the formatting of the text and equations matches your
document. Note that using &lt;a href=&quot;http:&#x2F;&#x2F;tex.stackexchange.com&#x2F;a&#x2F;74693&quot;&gt;MS Windows requires some special configuration&lt;&#x2F;a&gt; and using &lt;a href=&quot;#svg-subcaption-workaround&quot;&gt;the &lt;code&gt;subcaption&lt;&#x2F;code&gt; package
requires a workaround&lt;&#x2F;a&gt;. Also note that on all
platforms, you need to use the &lt;code&gt;-shell-escape&lt;&#x2F;code&gt; option with pdfLaTeX for this to
work. For example, if you‚Äôre using a &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;make.html&quot;&gt;Makefile&lt;&#x2F;a&gt; with &lt;a href=&quot;http:&#x2F;&#x2F;www.ctan.org&#x2F;pkg&#x2F;latexmk&quot;&gt;latexmk&lt;&#x2F;a&gt;, then you
could write your rule like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-makefile&quot; data-lang=&quot;makefile&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;%.pdf&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;&#x2F;span&gt; %.&lt;span class=&quot;n&quot;&gt;tex&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;wildcard&lt;&#x2F;span&gt; *&lt;span class=&quot;nv&quot;&gt;.svg&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;&#x2F;span&gt;
	latexmk -pdf -pdflatex&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pdflatex -shell-escape %O %S&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;$&lt;span class=&quot;s2&quot;&gt;&amp;lt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;pgf&quot;&gt;&lt;code&gt;tikz&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package is great for drawing complex technical diagrams that
would be difficult to draw by other means. As a nice bonus, the source of the
diagram is plain text, so it works well with version control. For example, I
drew this image with &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;pgf&quot;&gt;&lt;code&gt;tikz&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;tikz-schematic-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___1143w.png 1143w,
&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___286w.png 286w,
&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___429w.png 429w,
&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___572w.png 572w,
&#x2F;media&#x2F;teximg&#x2F;tikz-schematic-example___857w.png 857w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 35.75rem) 35.75rem, (min-width: 17.875rem) 100vw, 17.875rem&amp;quot;
style=&amp;quot;width:35.75rem; min-width:17.875rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Tilted disc with off-center hole illustrating multiple rotated 3-D coordinate systems&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;You can find many additional examples at &lt;a href=&quot;https:&#x2F;&#x2F;texample.net&#x2F;tikz&#x2F;examples&#x2F;&quot;&gt;TeXample.net&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Often, the best way to include a &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;pgf&quot;&gt;&lt;code&gt;tikz&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; image in your document is to create
it in a separate file, and then include it with the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;standalone&quot;&gt;&lt;code&gt;standalone&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package.
This way, you can render the image by itself quickly while you‚Äôre editing it,
and your main document stays clean.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;captions&quot;&gt;Captions&lt;&#x2F;h3&gt;
&lt;p&gt;I prefer the captions to be smaller than the body text. You can achieve this
with the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;caption&quot;&gt;&lt;code&gt;caption&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package. It also provides the &lt;code&gt;\captionof&lt;&#x2F;code&gt; command,
which is useful for cover pages. Include the package like this to get small
captions:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[font=small]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;caption&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Often, it‚Äôs useful to have multiple subfigures&#x2F;subtables make up an overall
figure&#x2F;table and be able to label&#x2F;cross-reference the subfigures&#x2F;subtables
individually. The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;subcaption&quot;&gt;&lt;code&gt;subcaption&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package works well for this, in particular
the &lt;code&gt;subfigure&lt;&#x2F;code&gt;&#x2F;&lt;code&gt;subtable&lt;&#x2F;code&gt; environments and the &lt;code&gt;\subcaptionbox&lt;&#x2F;code&gt; command.
Include the package like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;subcaption&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Here&amp;rsquo;s an example of using the &lt;code&gt;subfigure&lt;&#x2F;code&gt; environment:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;subcaption-subfigure-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___213w.png 213w,
&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___319w.png 319w,
&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___426w.png 426w,
&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___638w.png 638w,
&#x2F;media&#x2F;teximg&#x2F;subcaption-subfigure-example___851w.png 851w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 26.625rem) 26.625rem, (min-width: 13.3125rem) 100vw, 13.3125rem&amp;quot;
style=&amp;quot;width:26.625rem; min-width:13.3125rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Subfigure environment example using subcaption package, illustrating two subfigures side-by-side.&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;&lt;a id=&quot;svg-subcaption-workaround&quot;&gt;&lt;&#x2F;a&gt; Note that if you use
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;subcaption&quot;&gt;&lt;code&gt;subcaption&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package with the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;svg&quot;&gt;&lt;code&gt;svg&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package, you need to add the
following to your preamble (before including &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;svg&quot;&gt;&lt;code&gt;svg&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;) to avoid conflicts
between the packages:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;scrlfile&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\PreventPackageFromLoading&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;subfig&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h3 id=&quot;table-formatting&quot;&gt;Table Formatting&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;booktabs&quot;&gt;&lt;code&gt;booktabs&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package makes it easy to generate professional-looking
tables with a minimum of effort (only three commands for most tables), such as
this one:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;booktabs-simple-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___164w.png 164w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___245w.png 245w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___327w.png 327w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___491w.png 491w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-simple-example___654w.png 654w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 20.4375rem) 20.4375rem, (min-width: 10.2188rem) 100vw, 10.2188rem&amp;quot;
style=&amp;quot;width:20.4375rem; min-width:10.2188rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Simple table using booktabs package, with horizontal borders at top, below header row, and at bottom.&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;Here&amp;rsquo;s a more complex example from the documentation:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;booktabs-complex-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___139w.png 139w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___208w.png 208w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___277w.png 277w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___416w.png 416w,
&#x2F;media&#x2F;teximg&#x2F;booktabs-complex-example___555w.png 555w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 17.3125rem) 17.3125rem, (min-width: 8.65625rem) 100vw, 8.65625rem&amp;quot;
style=&amp;quot;width:17.3125rem; min-width:8.65625rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;More complex table using booktabs package, with a full-width border at the top, partial width between the two header rows, full-width below the lower header row, and full-width at the bottom.&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;In some cases, the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;tabu&quot;&gt;&lt;code&gt;tabu&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package is easier to use than the built-in LaTeX
&lt;code&gt;tabular&lt;&#x2F;code&gt; environment, such as when creating tables inside of equations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;code-listings&quot;&gt;Code Listings&lt;&#x2F;h3&gt;
&lt;p&gt;Use the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;listings&quot;&gt;&lt;code&gt;listings&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package. It allows you to include external files as code
listings, easily cross-reference the listings, and format the listings nicely.
This is how I like include the package:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;listings&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\lstset&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;frame=single,basicstyle=&lt;span class=&quot;k&quot;&gt;\small\ttfamily&lt;&#x2F;span&gt;,showstringspaces=false&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;and here&amp;rsquo;s an example of the output:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;teximg&#x2F;listings-example.tex&quot;&gt;
        &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;teximg&#x2F;listings-example___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;teximg&#x2F;listings-example___1246w.png 1246w,
&#x2F;media&#x2F;teximg&#x2F;listings-example___312w.png 312w,
&#x2F;media&#x2F;teximg&#x2F;listings-example___467w.png 467w,
&#x2F;media&#x2F;teximg&#x2F;listings-example___623w.png 623w,
&#x2F;media&#x2F;teximg&#x2F;listings-example___935w.png 935w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 38.9375rem) 38.9375rem, (min-width: 19.4688rem) 100vw, 19.4688rem&amp;quot;
style=&amp;quot;width:38.9375rem; min-width:19.4688rem&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;alt=&amp;quot;Simple listing using the listings package, showing the source code of the .tex file in a figure.&amp;quot;&amp;gt;
&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;figure&gt;
&lt;h3 id=&quot;hyperlinks-urls-and-pdf-metadata&quot;&gt;Hyperlinks, URLs, and PDF Metadata&lt;&#x2F;h3&gt;
&lt;p&gt;Use the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;hyperref&quot;&gt;&lt;code&gt;hyperref&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package to automatically create links for
cross-references, to allow you create external links to URLs, and to allow you
to edit the metadata of the output PDF. For example, I include
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;hyperref&quot;&gt;&lt;code&gt;hyperref&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package like this (I define &lt;code&gt;\thetitle&lt;&#x2F;code&gt; and &lt;code&gt;\theauthor&lt;&#x2F;code&gt;
elsewhere):&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[unicode,xetex]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;hyperref&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\hypersetup&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;
  colorlinks,
  citecolor = black,
  filecolor = black,
  linkcolor = black,
  urlcolor = black,
  pdftitle = &lt;span class=&quot;k&quot;&gt;\thetitle&lt;&#x2F;span&gt;,
  pdfauthor = &lt;span class=&quot;k&quot;&gt;\theauthor&lt;&#x2F;span&gt;,
  pdfdisplaydoctitle = true
&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;You can create a hyperlinked URL like this: &lt;code&gt;\url{https:&#x2F;&#x2F;archive.org}&lt;&#x2F;code&gt;, and
you can create a named external link like this:
&lt;code&gt;\href{https:&#x2F;&#x2F;archive.org}{Internet Archive}&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cross-referencing&quot;&gt;Cross-Referencing&lt;&#x2F;h3&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;cleveref&quot;&gt;&lt;code&gt;cleveref&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package makes it easy to correctly format cross references.
For example, you can write &lt;code&gt;\cref{fig:foo,fig:bar}&lt;&#x2F;code&gt; instead of
&lt;code&gt;figures~\ref{fig:foo} and~\ref{fig:bar}&lt;&#x2F;code&gt;. I change the &lt;code&gt;\creflastjunction&lt;&#x2F;code&gt;
from the default to add a serial comma:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;cleveref&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\newcommand&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\creflastconjunction&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}{&lt;&#x2F;span&gt;, and~&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Note that you must include the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;cleveref&quot;&gt;&lt;code&gt;cleveref&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package &lt;em&gt;after&lt;&#x2F;em&gt; you include
the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;hyperref&quot;&gt;&lt;code&gt;hyperref&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;header-and-footer&quot;&gt;Header and Footer&lt;&#x2F;h3&gt;
&lt;p&gt;I like to have a fancy header that gives the current section, document title,
and author‚Äôs name. I use the &lt;a href=&quot;http:&#x2F;&#x2F;ctan.org&#x2F;pkg&#x2F;fancyhdr&quot;&gt;&lt;code&gt;fancyhdr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; package:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;fancyhdr&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\fancyhf&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\fancyhead&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[L]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\leftmark&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\fancyhead&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[C]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\MakeUppercase&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\thetitle&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\fancyhead&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[R]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\MakeUppercase&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\theauthor&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\fancyfoot&lt;&#x2F;span&gt;&lt;span class=&quot;na&quot;&gt;[C]&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;\thepage&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;\pagestyle&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;&#x2F;span&gt;fancy&lt;span class=&quot;nb&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 46</title>
		<published>2017-03-05T00:00:00+00:00</published>
		<updated>2017-03-05T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-46-nrywcfmpk8wz9nmkzfryb/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-46-nrywcfmpk8wz9nmkzfryb/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40265&quot;&gt;the style of the sidebar in rustdoc output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jdhorwitz&quot;&gt;@jdhorwitz&lt;&#x2F;a&gt; helped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40226&quot;&gt;people find String::as_bytes() for UTF-8&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40154&quot;&gt;unstable book to the bookshelf&lt;&#x2F;a&gt; and extracted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40222&quot;&gt;nomicon to its own repo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; cleaned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39713&quot;&gt;up ‚Äúpattern doesn‚Äôt bind x‚Äù messages&lt;&#x2F;a&gt; and pointed to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39202&quot;&gt;enclosing block&#x2F;fn on nested unsafe&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40258&quot;&gt;description of closure coercion feature&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39835&quot;&gt;release notes for 1.16&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md - Last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;APTy&quot;&gt;@APTy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39007&quot;&gt;docs and tests for join_multicast_{v4,v6}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39814&quot;&gt;invalid call on non-function error message&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pmer&quot;&gt;@pmer&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40102&quot;&gt;‚ÄúmacOS‚Äù terminology consistently&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40056&quot;&gt;.&#x2F;configure with config.toml in README.md and CONTRIBUTING.md&lt;&#x2F;a&gt; and adde &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39738&quot;&gt;notes about capacity effects to Vec::truncate()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40213&quot;&gt;the reference into a submodule&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40151&quot;&gt;mdbook version&lt;&#x2F;a&gt; and sorted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40153&quot;&gt;unstable book alphabetically&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;iKevinY&quot;&gt;@iKevinY&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40170&quot;&gt;link in &lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;&#x2F;code&gt; docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;letmaik&quot;&gt;@letmaik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40194&quot;&gt;wrong word used in book page ‚Äúconst and static‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;d-e-s-o&quot;&gt;@d-e-s-o&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40175&quot;&gt;inconsistency in error output in guessing-game.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MajorBreakfast&quot;&gt;@MajorBreakfast&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40169&quot;&gt;‚Äúthe‚Äù in the docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40144&quot;&gt;unit-like structs code sample in the docs&lt;&#x2F;a&gt;, changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40142&quot;&gt;‚Äúpointers‚Äù to ‚Äúreferences‚Äù in structs docs&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40131&quot;&gt;lifetime elision docs clearer&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40115&quot;&gt;present perfect instead of simple past in the loop docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robinst&quot;&gt;@robinst&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40122&quot;&gt;an example for how to provide stdin using std::process::Command&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40121&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40057&quot;&gt;nightly-only experimental API display&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40081&quot;&gt;missing url in sync structs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40033&quot;&gt;missing urls and examples for Condvar docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39944&quot;&gt;associated constant rendering in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40126&quot;&gt;missing docs and examples for fmt::Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 8th of March 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 45</title>
		<published>2017-02-26T00:00:00+00:00</published>
		<updated>2017-02-26T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-45-fgwovymvc5emzu3w2-tq7/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-45-fgwovymvc5emzu3w2-tq7/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Nothing.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39835&quot;&gt;release notes for 1.16&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pmer&quot;&gt;@pmer&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40102&quot;&gt;‚ÄúmacOS‚Äù terminology consistently&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SimonSapin&quot;&gt;@SimonSapin&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39986&quot;&gt;docs for the proc_macro crate&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40056&quot;&gt;.&#x2F;configure with config.toml in README.md and CONTRIBUTING.md&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39738&quot;&gt;notes about capacity effects to Vec::truncate()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; distinguished &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39458&quot;&gt;guesses from suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39441&quot;&gt;help rather than span note for no method error; a slight rephrasing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39300&quot;&gt;code in &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40057&quot;&gt;nightly-only experimental API display&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40081&quot;&gt;missing url in sync structs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39814&quot;&gt;invalid call on non-function error message&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40033&quot;&gt;missing urls and examples for Condvar docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39944&quot;&gt;associated constant rendering in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mp4096&quot;&gt;@mp4096&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39955&quot;&gt;better explanation for return values for min, max functions for the Iterator trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39953&quot;&gt;suggestions for unknown macros imported with &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39855&quot;&gt;the reference to mdbook&lt;&#x2F;a&gt;, created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39866&quot;&gt;the Unstable Book&lt;&#x2F;a&gt;, reenabled &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39976&quot;&gt;the linkchecker for books&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39966&quot;&gt;mdbook version&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arthurprs&quot;&gt;@arthurprs&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39937&quot;&gt;spelling in hashmap comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JDemler&quot;&gt;@JDemler&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39845&quot;&gt;Documentation for Custom Attributes and Error Reporting in Procedural Macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&quot;&gt;@jrmuizel&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39304&quot;&gt;obsolete documentation about drop-flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mina86&quot;&gt;@mina86&lt;&#x2F;a&gt; updated The Book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39777&quot;&gt;binary prefixed are defined by IEC and not in SI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tclfs&quot;&gt;@tclfs&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40078&quot;&gt;a typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynicaldevil&quot;&gt;@cynicaldevil&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40031&quot;&gt;test for inclusive_range_syntax in compile-fail test suite&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rufflewind&quot;&gt;@Rufflewind&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40069&quot;&gt;Gankro‚Äôs table to nomicon&#x2F;src&#x2F;phantom-data.md&lt;&#x2F;a&gt; and resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39748&quot;&gt;ambiguities of Generics in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;danobi&quot;&gt;@danobi&lt;&#x2F;a&gt; moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40086&quot;&gt;COMPILER_TESTS.md out of the root directory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39905&quot;&gt;properly note&#x2F;expected details&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39940&quot;&gt;indentation of error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tomwhoiscontrary&quot;&gt;@tomwhoiscontrary&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40071&quot;&gt;another typo in procedural macros chapter of the Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mbrubeck&quot;&gt;@mbrubeck&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39886&quot;&gt;additional docs for Vec, String, and slice trait impls&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ArtBears&quot;&gt;@ArtBears&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39965&quot;&gt;a typo in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; set &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39859&quot;&gt;rustdoc ‚Äìtest files‚Äô path relative to the current directory&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39765&quot;&gt;file not found for module error&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40010&quot;&gt;missing urls and examples into Barrier structs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;40052&quot;&gt;missing urls in MutexGuard docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 1st of March 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>One Year With Rust</title>
		<published>2017-02-25T00:00:00+00:00</published>
		<updated>2017-02-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/one-year-with-rust-7ppadivv1oynt23vcmiln/" type="text/html"/>
		<id>https://kitallis.github.io/hades/one-year-with-rust-7ppadivv1oynt23vcmiln/</id>
		<content type="html">&lt;h1 id=&quot;i-wrote-a-full-featured-application-in-rust-and-so-can-you&quot;&gt;I wrote a full featured application in rust, and so can you!&lt;&#x2F;h1&gt;
&lt;p&gt;This past year has been one of the most exciting years of programming for me,
and a large part of that is due to the programming language rust. It has been
nine months since I started writing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;artifact&lt;&#x2F;a&gt;, and about a year since I
first started learning rust. Artifact is in its final beta release, and I
couldn‚Äôt possibly be happier with the rust language.&lt;&#x2F;p&gt;
&lt;p&gt;Before writing python at my current job as a Software Engineer in Test, I was an
Electrical Engineer who mostly had experience with C for microcontrollers.
When I first learned python it was an absolute breath of fresh air ‚Äì I felt
like I could develop for every-day needs (other than microcontrollers) with
very little effort. The code was beautiful, easy to read and fairly easy to
write. I felt like there was no other language for me.&lt;&#x2F;p&gt;
&lt;p&gt;After writing python for more than a year as my day job however, I started to
see the rough edges of the language. Making small changes caused catastrophic
trivial problems like AttributeErrors to propagate throughout the code base.
Since our code was not well unit tested (its own problem to be sure) these
problems, coupled with a dynamic language like python, quickly became a
nightmare.&lt;&#x2F;p&gt;
&lt;p&gt;When I started to think about what kind of testing would need to be done to
mitigate these problems I balked: unit tests would basically have to be written
to validate not just a function but &lt;em&gt;callers&lt;&#x2F;em&gt; of the function to make sure they
were passing in the right type. The looseness of python was going to require a
huge amount of boilerplate and pain.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Note: tools like mypy would help alleviate some of these issues, and we are
currently using Pycharm‚Äôs type checking for all new code. However, there are
still problems (such as exception handling) which make you afraid when writing
python code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;That‚Äôs when I started looking for a new languages, and the two I decided to
check out were Go and rust.&lt;&#x2F;p&gt;
&lt;p&gt;I have to admit, I really really &lt;em&gt;loved&lt;&#x2F;em&gt; the design concepts of Go. Keep it
simple, keep the number of concepts small, and try and stay out of your way as
much as possible. I wrote a bit with Go and it was exactly as it billed itself
to be: dead simple, no frills, almost no abstraction at all. Actually kind of
pythonic in a strange way, but with a type system and more robust error
handling. It stayed out of my way‚Ä¶ but made me do everything. Although Go
contains a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;&#x2F;code&gt; loop it doesn‚Äôt have any concept of iterators (except the one
built into the langauge). This kind of magic bothered me at some deep level.&lt;&#x2F;p&gt;
&lt;p&gt;After spending a week doing the Go tutorials I decided that although I liked the
language alright it just wasn‚Äôt &lt;em&gt;fun&lt;&#x2F;em&gt;. I wasn‚Äôt learning anything, and if I
ever wanted to use it at a job I could easily pick up the language in a few
weeks. Possibly more importantly, my EE background chimed in ‚Äì ‚Äúcould you write
an Operating System in this? How about code on a microcontroller?.‚Äù I have to
admit, I am the kind of person who want‚Äôs a language that is completely general
purpose and can be used for &lt;em&gt;any&lt;&#x2F;em&gt; task, and Go wasn‚Äôt that language. It was very
clearly designed for one specific purpose ‚Äì and that wasn‚Äôt a purpose I was
very interested in.&lt;&#x2F;p&gt;
&lt;p&gt;That left me with rust, which had recently reached 1.0 and was &lt;em&gt;extremely
capable&lt;&#x2F;em&gt; of doing anything I might want it to do. Plus, it offered things which
were completely new: concurrency without fear, safety without garbage
collection and abstraction without cost. I was enthralled, and dove in quickly. I
found the borrow checker surprisingly easy to learn (much easier to learn that
trying to do an equivalent thing in C), and although passing around lifetimes
threw me for a loop for a long time (I was missing that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&#x27;a, &#x27;b: &#x27;a&amp;gt;&lt;&#x2F;code&gt; means
that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&#x27;b&lt;&#x2F;code&gt; outlives &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&#x27;a&lt;&#x2F;code&gt;) progress was good.&lt;&#x2F;p&gt;
&lt;p&gt;It was around that time that my work held a training on Risk Based Testing, and
my entire opinion of the software development community‚Äôs best practices were
completely torn down. I quickly realized that we should be writing down our
requirements, linking them to our design specifications and writing out the high
risk test cases for &lt;em&gt;every project&lt;&#x2F;em&gt;, no matter how small. Doing so was a
&lt;em&gt;pillar of good software development&lt;&#x2F;em&gt;, and we weren‚Äôt doing it.&lt;&#x2F;p&gt;
&lt;p&gt;I quickly realized why - there were no good tools for us to do it in a way that
made it easier for us to do our jobs. I wanted to do this for small projects,
so I started looking for a simple command line tool that could get the job
done‚Ä¶ and hit a dead end. How could this be? How could such a simple and
important thing not exist? All I needed to do is name an artifact, write down a
description, and be able to link it to other artifacts. This is a simple
problem.&lt;&#x2F;p&gt;
&lt;p&gt;You can probably guess what happened next: I decided to create it. Hundreds of
hours of learning and programming later my tiny and simple command line tool
is now a full featured application with a whole suite of submodules
and static and hosted web-page support (I learned Elm too!). It has entered its
final beta release, with 1.0 slated for sometime next month.&lt;&#x2F;p&gt;
&lt;p&gt;The code base has grown to be larger than I expected, about 7000 lines of code.
I have refactored the &lt;em&gt;design documents&lt;&#x2F;em&gt; at least 3 times (something that was
very easy using the artifact tool) and have refactored large amounts of the
codebase several times more than that. My fairly extensive unit tests have
smoothed those efforts, but the rust language itself has been nothing less than
spectacular. People often say of rust ‚Äúif it compiles, it runs‚Äù ‚Äì and they
aren‚Äôt wrong. I can remove or change a critical struct or function base and
typically only have to fix the compiler errors. Adding new features is almost as
simple.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;In conclusion, I wrote a large and feature full application in rust and so can
you! Some say that rust‚Äôs libraries are not mature, but for these purposes they
are extremely well developed and supported. When I think about how things would
have been had I written artifact using python (a language with arguably the
&lt;em&gt;most&lt;&#x2F;em&gt; mature libraries) I run away scared. Every time I had refactored my
library would have been hours of grueling effort running and rerunning the
commands trying to hunt down every new bug. With rust, the compiler tells me
almost 100% of what needs to be fixed.&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôre interested in simple quality development best practices, check out my
new open source book &lt;a href=&quot;https:&#x2F;&#x2F;vitiral.gitbooks.io&#x2F;simple-quality&#x2F;content&#x2F;&quot;&gt;Simple Quality&lt;&#x2F;a&gt; and its associated tool &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;artifact&quot;&gt;artifact&lt;&#x2F;a&gt;.
It has been a pleasure working on them, and I look forward to help improve the
quality best practices of the software development community for years to come.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a Raytracer in Rust - Part 1 - First Rays</title>
		<published>2017-02-20T11:00:00-06:00</published>
		<updated>2017-02-20T11:00:00-06:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-1-first-rays-dgmp1winke02fltwjy-bf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-raytracer-in-rust-part-1-first-rays-dgmp1winke02fltwjy-bf/</id>
		<content type="html">&lt;p&gt;Hello! This is part one of a short series of posts on writing a simple raytracer in Rust. I‚Äôve never written one of these before, so it should be a learning experience all around.
So what is a raytracer anyway? The short version is it‚Äôs a computer program that traces the paths of simulated rays of light through a scene to produce high-quality 3D-rendered images. Despite that, it also happens to be the simplest way to render 3D images.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 44</title>
		<published>2017-02-19T00:00:00+00:00</published>
		<updated>2017-02-19T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-44-ew3um0odlis8c88obcrv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-44-ew3um0odlis8c88obcrv/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc --test&lt;&#x2F;code&gt; output has been updated and merged! Now it looks like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; rustdoc --test some_file.rs
the&#x2F;path&#x2F;some_file.rs - Foo::foo (line 43) ... ok
the&#x2F;path&#x2F;some_file.rs - Foo::bar (line 79) ... ok
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mp4096&quot;&gt;@mp4096&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39955&quot;&gt;better explanation for return values for min, max functions for the Iterator trait&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39953&quot;&gt;suggestions for unknown macros imported with &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39738&quot;&gt;notes about capacity effects to Vec::truncate()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39855&quot;&gt;the reference to mdbook&lt;&#x2F;a&gt; and create &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39866&quot;&gt;the Unstable Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;arthurprs&quot;&gt;@arthurprs&lt;&#x2F;a&gt; fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39937&quot;&gt;spelling in hashmap comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JDemler&quot;&gt;@JDemler&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39845&quot;&gt;Documentation for Custom Attributes and Error Reporting in Procedural Macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&quot;&gt;@jrmuizel&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39304&quot;&gt;obsolete documentation about drop-flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mina86&quot;&gt;@mina86&lt;&#x2F;a&gt; updated The Book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39777&quot;&gt;binary prefixed are defined by IEC and not in SI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md - Last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39944&quot;&gt;associated constant rendering in rustdoc&lt;&#x2F;a&gt;, set &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39859&quot;&gt;rustdoc ‚Äìtest files‚Äô path relative to the current directory&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39765&quot;&gt;file not found for module error&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39814&quot;&gt;invalid call on non-function error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39760&quot;&gt;grammar on field init docs&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39758&quot;&gt;duplicated ‚Äúparameter‚Äù in E0089 text&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JordiPolo&quot;&gt;@JordiPolo&lt;&#x2F;a&gt; substituted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39756&quot;&gt;try! for ? in the Result documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jimmycuadra&quot;&gt;@jimmycuadra&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39740&quot;&gt;a stability span only if needed in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notriddle&quot;&gt;@notriddle&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39697&quot;&gt;the item type to the tooltip&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39654&quot;&gt;attributes on all item types in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39862&quot;&gt;wording in LocalKey documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39844&quot;&gt;sys&#x2F;mod doc and mod import order adjust&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39839&quot;&gt;doc consistent with var name&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39784&quot;&gt;a typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Stebalien&quot;&gt;@Stebalien&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39904&quot;&gt;String::split_off documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CBenoit&quot;&gt;@CBenoit&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39847&quot;&gt;a typo in procedural macros chapter of the Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WRONGWAY4YOU&quot;&gt;@WRONGWAY4YOU&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39846&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39836&quot;&gt;types in to_owned doctest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DaseinPhaos&quot;&gt;@DaseinPhaos&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39840&quot;&gt;procedural-macros.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mina86&quot;&gt;@mina86&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39775&quot;&gt;GNU extensions in the example when they were unnecessary in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; ported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39633&quot;&gt;books to mdbook&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ahmedcharles&quot;&gt;@ahmedcharles&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39778&quot;&gt;some typos in the core::fmt docs.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39743&quot;&gt;tested item in the rustdoc ‚Äìtest output&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39928&quot;&gt;missing urls for env functions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39788&quot;&gt;filename when running rustdoc ‚Äìtest on a markdown file&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 22nd of February 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Resume</title>
		<published>2017-02-15T00:00:00+00:00</published>
		<updated>2017-02-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/resume-gzappaijke9rxr9fskd9q/" type="text/html"/>
		<id>https://kitallis.github.io/hades/resume-gzappaijke9rxr9fskd9q/</id>
		<content type="html">&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;&#x2F;h2&gt;
&lt;p&gt;Mechanical engineering Ph.D.¬†candidate with research and industry experience in reinforcement learning, nonlinear dynamical systems, mechanical simulation, electromechanical controls, numerical optimization, state estimation, testing and verification, data analysis, and software development.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;education&quot;&gt;Education&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Ph.D.¬†Mechanical Engineering
‚Äì 4.00¬†GPA
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Duke University
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2015‚Äìpresent
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Durham,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2017 National Defense Science &amp;amp; Engineering Graduate (NDSEG) Fellow:&lt;&#x2F;em&gt; Merit-based, national, full-ride fellowship&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2015 James¬†B.¬†Duke Fellow:&lt;&#x2F;em&gt; Merit-based, four-year fellowship&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2015 Pratt&#x2F;Gardner Fellow:&lt;&#x2F;em&gt; Merit-based fellowship&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
B.S.¬†Mechanical Engineering
‚Äì Valedictorian, 4.00¬†GPA
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
North Carolina State University
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2011‚Äì2015
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Raleigh,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Minors:&lt;&#x2F;em&gt; Spanish &amp;amp; Computer Programming&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2015 NCSU Mech.¬†&amp;amp; Aero.¬†Engineering Senior Award for Leadership&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2014 Goldwater Scholar:&lt;&#x2F;em&gt; Merit-based, national scholarship&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;2011 NCSU Park Scholar:&lt;&#x2F;em&gt; Merit-based, full-ride scholarship&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;publications-presentations&quot;&gt;Publications &amp;amp; Presentations&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Little, J. A., J. D. Turner, and B. P. Mann. ‚ÄúImproving empirical characteristic multiplier estimation through a change of basis‚Äù. &lt;em&gt;Journal of Sound and Vibration,&lt;&#x2F;em&gt; 488 (Dec.¬†2020).
(&lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1016&#x2F;j.jsv.2020.115613&quot;&gt;publisher&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Wang, X.-S., J. D. Turner, and B. P. Mann. ‚ÄúConstrained attractor selection using deep reinforcement learning‚Äù. &lt;em&gt;Journal of Vibration and Control&lt;&#x2F;em&gt; (May 2020).
(&lt;a href=&quot;https:&#x2F;&#x2F;doi.org&#x2F;10.1177&#x2F;1077546320930144&quot;&gt;publisher&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Turner, J. D., L. H. Manring, and B. P. Mann. ‚ÄúReinforcement learning for active damping of harmonically excited pendulum with highly nonlinear actuator‚Äù. &lt;em&gt;Nonlinear Structures and Systems, Volume 1: Proceedings of the 37th IMAC, Jan.¬†2019,&lt;&#x2F;em&gt; (2020), pp.¬†119‚Äì123.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;reinforcement-learning-for-nonlinear-active-damping&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Turner, J. D., M. J. Mazzoleni, J. A. Little, D. Sequeira, and B. P. Mann. ‚ÄúA nonlinear model for the characterization and optimization of athletic training and performance‚Äù. &lt;em&gt;Biomedical Human Kinetics,&lt;&#x2F;em&gt; 9.1 (Feb.¬†2017), pp.¬†82‚Äì93.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;nonlinear-model-athletic-training&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Turner, J. D. and B. P. Mann. ‚ÄúSensitivity of final field position to the punt initial conditions in American football‚Äù. &lt;em&gt;Proceedings of the ASME 2016 International Design Engineering Technical Conferences &amp;amp; Computers and Information in Engineering Conference.&lt;&#x2F;em&gt; Charlotte, NC, August 2016.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;football-punts&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Turner, J. D. and Y. Zhu. ‚ÄúThree-dimensional structures from electrically-activated self-folding of polymer sheets‚Äù. &lt;em&gt;Summer Undergraduate Research Symposium.&lt;&#x2F;em&gt; North Carolina State University. Raleigh, NC, July 2014.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;self-folding&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Mack, C. M., B. J. Lin, J. D. Turner, A. F. Johnstone, L. D. Burgoon, and T. J. Shafer. ‚ÄúBurst and principal components analyses of MEA data for 16 chemicals describe at least three effects classes‚Äù. &lt;em&gt;NeuroToxicology,&lt;&#x2F;em&gt; 40 (Jan.¬†2014), pp.¬†75‚Äì85.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;neuronal-networks&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-publication&quot;&gt;
Qin, Q., R. W. Mailen, J. D. Turner, Y. Liu, J. Genzer, M. D. Dickey, and Y. Zhu. ‚ÄúSelf-folding of polymer sheets into origami: modeling and experiments‚Äù. &lt;em&gt;SEM Annual Conference and Exposition on Experimental and Applied Mechanics.&lt;&#x2F;em&gt; Lombard, IL, June 2013.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;self-folding&#x2F;&quot;&gt;more¬†info&lt;&#x2F;a&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;work-research-experience&quot;&gt;Work &amp;amp; Research Experience&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Duke University, Dept.¬†of Mechanical Engineering &amp;amp; Materials Science
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Graduate Researcher
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
Aug.¬†2015 ‚Äì present
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Durham,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Conducted independent research involving reinforcement learning, embedded controls, nonlinear dynamics, optimization, and data analysis.&lt;&#x2F;li&gt;
&lt;li&gt;Designed, built, configured, and documented a computer cluster for the lab group; trained the group to use the cluster.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
U.S. Naval Research Laboratory
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
NREIP Research Intern
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
June‚ÄìSep. 2020
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Washington, D.C., (remote)
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Conducted independent research involving reinforcement learning for control of an AUV and particle filtering for state estimation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Applied Research Associates
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Engineering Intern
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
May‚ÄìAug. 2015
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Raleigh,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Designed and developed graphical, memory management, and simulation components of vulnerability assessment engineering software.&lt;&#x2F;li&gt;
&lt;li&gt;Developed custom Python scripts for version control, data visualization and analysis, and systems integration route visualization.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
N.C. State Univ., Dept.¬†of Mechanical &amp;amp; Aerospace Engineering
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Undergraduate Researcher
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
Sept.¬†2011 ‚Äì May¬†2015
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Raleigh,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Developed automatically foldable structures out of prestrained polymer sheets using nanowire film to generate localized heating.&lt;&#x2F;li&gt;
&lt;li&gt;Designed and fabricated equipment and samples, developed procedures, tested samples, analyzed results, devised improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Deere &amp;amp; Company
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Product Research &amp;amp; Development Engineering Intern
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
May‚ÄìAug. 2013
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Waterloo,¬†IA
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Developed and tested the control software for the power takeoff (PTO) on 5M&#x2F;5R series tractors. Started with no functioning PTO; by the end of the summer, had fully functional PTO with new mode of operation and superior performance than previous model tractors.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Applied Research Associates
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Engineering Intern
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
May‚ÄìAug. 2012
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Raleigh,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Performed and improved validation testing, analysis, and debugging for accreditation of state-of-the-art munitions effects simulation software.&lt;&#x2F;li&gt;
&lt;li&gt;Received the &lt;em&gt;Above and Beyond the Call of Duty Award.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
U.S.¬†Environmental Protection Agency
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Research Intern
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
Summer¬†2010 &amp;amp; Summer¬†2011
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-location&quot;&gt;
Durham,¬†NC
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Developed multiple custom computer programs and scripts to analyze experimental data; modified existing software to work with EPA‚Äôs data.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;leadership-involvement-service&quot;&gt;Leadership, Involvement, &amp;amp; Service&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
Open Source Software Project Manager
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2018‚Äìpresent
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;ndarray, ndarray-npy, ndarray-rand, ndarray-stats, ndarray-linalg, py_literal&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
National Honor&#x2F;Professional Societies
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2011‚Äìpresent
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tau Beta Pi, Phi Beta Kappa, Phi Kappa Phi, ASME, SIAM&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
University Honor Societies
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2011‚Äìpresent
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Society of Duke Fellows, NCSU Golden Chain, NCSU University Honors Program&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
N.C. State Engineers‚Äô Council
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Department Representative, Secretary, Committee Chair
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2011‚Äì2015
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Managed two events with panels, mock interviews, and group sessions to prepare 280 students for Engineering Career Fairs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;resume-entry-head&quot;&gt;
&lt;span class=&quot;resume-entry-left&quot;&gt;
&lt;span class=&quot;resume-entry-name&quot;&gt;
General H. Hugh Shelton Leadership Center
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-title&quot;&gt;
Coach&#x2F;Mentor&#x2F;Trainer, Organizing Subcommittee Chairman, Peer Leader
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;resume-entry-right&quot;&gt;
&lt;span class=&quot;resume-entry-date&quot;&gt;
2008‚Äì2013
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;other-formats&quot;&gt;Other Formats&lt;&#x2F;h2&gt;
&lt;p&gt;In addition to viewing this page, you can
download &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;resume-web.pdf&quot;&gt;my resume as PDF&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;resume-web.txt&quot;&gt;my resume as plain text&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;build-system&quot;&gt;Build System&lt;&#x2F;h2&gt;
&lt;p&gt;I maintain my resume in &lt;a href=&quot;https:&#x2F;&#x2F;www.git-scm.com&#x2F;&quot;&gt;Git&lt;&#x2F;a&gt; and build it from &lt;a href=&quot;http:&#x2F;&#x2F;yaml.org&#x2F;&quot;&gt;YAML&lt;&#x2F;a&gt;-formatted data files
with templates for HTML, PDF (via LaTeX), plain text, &lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;&quot;&gt;Sphinx&lt;&#x2F;a&gt;, and Markdown
output. See &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;pages&#x2F;resume-build-system&#x2F;&quot;&gt;Resume Build System&lt;&#x2F;a&gt; for more on how this system works.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 43</title>
		<published>2017-02-12T00:00:00+00:00</published>
		<updated>2017-02-12T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-43-yy1xmqluq2ztcwbvftrtb/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-43-yy1xmqluq2ztcwbvftrtb/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc --test&lt;&#x2F;code&gt; output has been updated. Now it looks like this (or at least it‚Äôll when &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39743&quot;&gt;#39743&lt;&#x2F;a&gt; will get merged):&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; rustdoc --test some_file.rs
the&#x2F;path&#x2F;some_file.rs - Foo::foo (line 43) ... ok
the&#x2F;path&#x2F;some_file.rs - Foo::bar (line 79) ... ok
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39738&quot;&gt;notes about capacity effects to Vec::truncate()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39757&quot;&gt;the return value of zero-size&#x2F;zero-heap pointer types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39760&quot;&gt;grammar on field init docs&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39758&quot;&gt;duplicated ‚Äúparameter‚Äù in E0089 text&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Rufflewind&quot;&gt;@Rufflewind&lt;&#x2F;a&gt; resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39748&quot;&gt;ambiguities in the Generics in the Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JordiPolo&quot;&gt;@JordiPolo&lt;&#x2F;a&gt; substituted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39756&quot;&gt;try! for ? in the Result documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jimmycuadra&quot;&gt;@jimmycuadra&lt;&#x2F;a&gt; included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39740&quot;&gt;a stability span only if needed in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dowwie&quot;&gt;@Dowwie&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39691&quot;&gt;attributes.md - Last sentence updated to reflect support for custom attributes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39713&quot;&gt;‚Äúpattern doesn‚Äôt bind x‚Äù messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;notriddle&quot;&gt;@notriddle&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39697&quot;&gt;the item type to the tooltip&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39654&quot;&gt;attributes on all item types in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39441&quot;&gt;help rather than span note for no method error; a slight rephrasing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; distinguished &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39458&quot;&gt;guesses from suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&quot;&gt;@jrmuizel&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39304&quot;&gt;obsolete documentation about drop-flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;APTy&quot;&gt;@APTy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39007&quot;&gt;docs and tests for join_multicast_{v4,v6}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39743&quot;&gt;tested item in the rustdoc ‚Äìtest output&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39554&quot;&gt;error message when two-arg assert_eq! receives a trailing comma&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39444&quot;&gt;a better error message for unknown derive messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39361&quot;&gt;error message for uninferrable types #38812&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JordiPolo&quot;&gt;@JordiPolo&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39545&quot;&gt;deprecation warning to indicate custom derive support was removed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39312&quot;&gt;full path being output with &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc -h&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rspeer&quot;&gt;@rspeer&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39174&quot;&gt;a misleading statement in&lt;code class=&quot;highlighter-rouge&quot;&gt;Iterator.nth()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluecereal&quot;&gt;@bluecereal&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38436&quot;&gt;if-let.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phungleson&quot;&gt;@phungleson&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39459&quot;&gt;short hand struct doc&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39443&quot;&gt;suggestions to use things which weren‚Äôt found either&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskrycho&quot;&gt;@chriskrycho&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37928&quot;&gt;RFC 1623: static lifetime elision.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39374&quot;&gt;lie about #[cfg] from reference&lt;&#x2F;a&gt; and changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39707&quot;&gt;span_notes to notes in E0368&#x2F;E0369&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39710&quot;&gt;1.15.1 relnotes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sgrif&quot;&gt;@sgrif&lt;&#x2F;a&gt; explicitly mentioned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39701&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::reserve&lt;&#x2F;code&gt; is based on len not capacity&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Aaronepower&quot;&gt;@Aaronepower&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39725&quot;&gt;nightly book with installing nightly instructions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39708&quot;&gt;set operations documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39589&quot;&gt;impl disambiguation in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Gheoan&quot;&gt;@Gheoan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39620&quot;&gt;missing comma&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; re-wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39593&quot;&gt;the doc index page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39002&quot;&gt;Debug implementations for libcollection structs&lt;&#x2F;a&gt;, displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39597&quot;&gt;correct filename with ‚Äìtest option&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39649&quot;&gt;missing urls on join_paths&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39621&quot;&gt;missing urls for current_dir&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 15th of February 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 42</title>
		<published>2017-02-05T00:00:00+00:00</published>
		<updated>2017-02-05T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-42-4wnkayejfpu1itkm7zirw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-42-4wnkayejfpu1itkm7zirw/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39554&quot;&gt;error message when two-arg assert_eq! receives a trailing comma&lt;&#x2F;a&gt; and used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39441&quot;&gt;help rather than span note for no method error; a slight rephrasing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39444&quot;&gt;a better error message for unknown derive messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;APTy&quot;&gt;@APTy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39007&quot;&gt;docs and tests for join_multicast_{v4,v6}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39361&quot;&gt;error message for uninferrable types #38812&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JordiPolo&quot;&gt;@JordiPolo&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39545&quot;&gt;deprecation warning to indicate custom derive support was removed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39312&quot;&gt;full path being output with &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc -h&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rspeer&quot;&gt;@rspeer&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39174&quot;&gt;a misleading statement in &lt;code class=&quot;highlighter-rouge&quot;&gt;Iterator.nth()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluecereal&quot;&gt;@bluecereal&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38436&quot;&gt;if-let.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; distinguished &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39458&quot;&gt;guesses from suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39300&quot;&gt;code in &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39202&quot;&gt;to enclosing block&#x2F;fn on nested unsafe&lt;&#x2F;a&gt; and detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39231&quot;&gt;missing &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;&#x2F;code&gt; on methods with return type &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phungleson&quot;&gt;@phungleson&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39459&quot;&gt;short hand struct doc&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39443&quot;&gt;suggestions to use things which weren‚Äôt found either&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskrycho&quot;&gt;@chriskrycho&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37928&quot;&gt;RFC 1623: static lifetime elision.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39374&quot;&gt;lie about #[cfg] from reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39002&quot;&gt;Debug implementations for libcollection structs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39513&quot;&gt;missing urls and small nits&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wilfred&quot;&gt;@Wilfred&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39389&quot;&gt;minor grammar fix ‚Äòcan not‚Äô -&amp;gt; ‚Äòcannot‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39116&quot;&gt;clearer error message using &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str + &amp;amp;str&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38103&quot;&gt;note for individual lint name in messages set via lint group attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39299&quot;&gt;the lack of mutability inside an Rc in std:rc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;@alexcrichton&lt;&#x2F;a&gt; suppressed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39354&quot;&gt;warnings&#x2F;errors with rustdoc ‚Äìtest&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39517&quot;&gt;relnotes for 1.15.1&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phungleson&quot;&gt;@phungleson&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39486&quot;&gt;a tiny doc wording change&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apasel422&quot;&gt;@apasel422&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39196&quot;&gt;nomicon to describe &lt;code class=&quot;highlighter-rouge&quot;&gt;#[may_dangle]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tspiteri&quot;&gt;@tspiteri&lt;&#x2F;a&gt; marked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39416&quot;&gt;FFI functions with unsafety icon in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Freyskeyd&quot;&gt;@Freyskeyd&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38823&quot;&gt;doc cfg(test) and tests directory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39405&quot;&gt;minor doc Option improvements&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39506&quot;&gt;missing urls in HashMap&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39407&quot;&gt;missing url in convert module&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 8th of February 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>`typed_csv`</title>
		<published>2017-02-04T00:00:00+00:00</published>
		<updated>2017-02-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/typed-csv-zgrmm2us00-jfhm3kikqh/" type="text/html"/>
		<id>https://kitallis.github.io/hades/typed-csv-zgrmm2us00-jfhm3kikqh/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;typed_csv&quot;&gt;GitHub page&lt;&#x2F;a&gt; for more
information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 41</title>
		<published>2017-01-29T00:00:00+00:00</published>
		<updated>2017-01-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-41-so3lhptjoalqdyeyg2dqp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-41-so3lhptjoalqdyeyg2dqp/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wilfred&quot;&gt;@Wilfred&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39389&quot;&gt;minor grammar fix ‚Äòcan not‚Äô -&amp;gt; ‚Äòcannot‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cengizIO&quot;&gt;@cengizIO&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39361&quot;&gt;error message for uninferrable types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mgattozzi&quot;&gt;@mgattozzi&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39116&quot;&gt;clearer error message using &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str + &amp;amp;str&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39312&quot;&gt;full path being output with &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc -h&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39374&quot;&gt;lie about #[cfg] from reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canndrew&quot;&gt;@canndrew&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39009&quot;&gt;warning for () to ! switch&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38103&quot;&gt;note for individual lint name in messages set via lint group attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jrmuizel&quot;&gt;@jrmuizel&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39304&quot;&gt;obsolete documentation about drop-flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; highlighted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39300&quot;&gt;code in &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc --explain&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39299&quot;&gt;the lack of mutability inside an Rc in std:rc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rspeer&quot;&gt;@rspeer&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39174&quot;&gt;a misleading statement in &lt;code class=&quot;highlighter-rouge&quot;&gt;Iterator.nth()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39233&quot;&gt;more references between lowercase&#x2F;uppercase operations.&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39221&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ffi::OsString&lt;&#x2F;code&gt; fucntions&#x2F;methods.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38961&quot;&gt;wording around sort guarantees&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DirkyJerky&quot;&gt;@DirkyJerky&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39200&quot;&gt;docs for atomic orderings: link to the ‚Äònomicon article for further reading&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cesarb&quot;&gt;@cesarb&lt;&#x2F;a&gt; updated The Book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39191&quot;&gt;size and align in trait object vtables are used&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jtxx000&quot;&gt;@jtxx000&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39378&quot;&gt;typo in librustc_trans&#x2F;collector.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;osa1&quot;&gt;@osa1&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39360&quot;&gt;typos in libsyntax&#x2F;tokenstream.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39314&quot;&gt;the first sentence in slice::sort&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39344&quot;&gt;a few links in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39321&quot;&gt;doc comment typo fix&lt;&#x2F;a&gt;, reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39267&quot;&gt;a doc comment rewording&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39238&quot;&gt;a comment wording&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39139&quot;&gt;to immutable arg&#x2F;fields when trying to use as &amp;amp;mut&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39214&quot;&gt;multiple labels when some don‚Äôt have message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;das-g&quot;&gt;@das-g&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39278&quot;&gt;book: refer to &lt;code class=&quot;highlighter-rouge&quot;&gt;add_two&lt;&#x2F;code&gt; as ‚Äútested function‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ConnyOnny&quot;&gt;@ConnyOnny&lt;&#x2F;a&gt; updted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38794&quot;&gt;match enum warning in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Wilfred&quot;&gt;@Wilfred&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39248&quot;&gt;missing URL to release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Eijebong&quot;&gt;@Eijebong&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39242&quot;&gt;minor typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;utkarshkukreti&quot;&gt;@utkarshkukreti&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38648&quot;&gt;all &lt;code class=&quot;highlighter-rouge&quot;&gt;try!&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;&#x2F;code&gt; in documentation examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39224&quot;&gt;missing urls for OsStr and OsString&lt;&#x2F;a&gt;, forced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39222&quot;&gt;backline on all where in docs&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39340&quot;&gt;doc generation if doc comments only filled with ‚Äòwhite‚Äô characters&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39306&quot;&gt;note for E0117&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38819&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39276&quot;&gt;missing urls for array docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 1st of February 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 40</title>
		<published>2017-01-22T00:00:00+00:00</published>
		<updated>2017-01-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-40-smxd4greepnsoruqjzbfj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-40-smxd4greepnsoruqjzbfj/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39233&quot;&gt;more references between lowercase&#x2F;uppercase operations.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38961&quot;&gt;wording around sort guarantees&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluecereal&quot;&gt;@bluecereal&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38436&quot;&gt;if-let.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DirkyJerky&quot;&gt;@DirkyJerky&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39200&quot;&gt;docs for atomic orderings: link to the ‚Äònomicon article for further reading&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rspeer&quot;&gt;@rspeer&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39174&quot;&gt;a misleading statement in &lt;code class=&quot;highlighter-rouge&quot;&gt;Iterator.nth()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cesarb&quot;&gt;@cesarb&lt;&#x2F;a&gt; updated The Book: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39191&quot;&gt;size and align in trait object vtables are used&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apasel422&quot;&gt;@apasel422&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39196&quot;&gt;nomicon to describe &lt;code class=&quot;highlighter-rouge&quot;&gt;#[may_dangle]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;APTy&quot;&gt;@APTy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39007&quot;&gt;docs and tests for join_multicast_{v4,v6} for UDP socket&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Freyskeyd&quot;&gt;@Freyskeyd&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38823&quot;&gt;doc cfg(test) and tests directory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;insaneinside&quot;&gt;@insaneinside&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38930&quot;&gt;src&#x2F;libcore&#x2F;ops.rs docs for RFC#1228 (Placement Left Arrow)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39224&quot;&gt;missing urls for OsStr and OsString&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;, forced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39222&quot;&gt;backline on all where in docs&lt;&#x2F;a&gt;, added ref &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;suggestion&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39076&quot;&gt;primitive types stability attributes in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;radix&quot;&gt;@radix&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39072&quot;&gt;minor improvement to strange grammar in E0525&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39065&quot;&gt;doc examples &amp;amp; description in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::os::unix::ffi&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39028&quot;&gt;minor improvements to docs in std::env structures&#x2F;functions&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38761&quot;&gt;‚Äòplatform-specific‚Äô section to &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep_ms&lt;&#x2F;code&gt; to match &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39221&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ffi::OsString&lt;&#x2F;code&gt; fucntions&#x2F;methods&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39165&quot;&gt;a few improvements to the slice docs&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38457&quot;&gt;improvements to ‚Äòinclude‚Äô macro documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38966&quot;&gt;1.15 release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38922&quot;&gt;a couple of bad Markdown links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ranma42&quot;&gt;@ranma42&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39203&quot;&gt;that &lt;code class=&quot;highlighter-rouge&quot;&gt;Metadata&lt;&#x2F;code&gt; can be obtained from &lt;code class=&quot;highlighter-rouge&quot;&gt;symlink_metadata&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheCycoONE&quot;&gt;@TheCycoONE&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39135&quot;&gt;when range is removed by drain&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grimreaper&quot;&gt;@grimreaper&lt;&#x2F;a&gt; fixed a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39121&quot;&gt;minor typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;king6cong&quot;&gt;@king6cong&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39115&quot;&gt;doc wording&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;richard-imaoka&quot;&gt;@richard-imaoka&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39091&quot;&gt;error explanation for E0491&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39069&quot;&gt;missing blank space issue&lt;&#x2F;a&gt; and specified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39210&quot;&gt;the result of integer cast on boolean&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 25th of January 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Handshake Patterns</title>
		<published>2017-01-21T00:00:00+00:00</published>
		<updated>2017-01-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/handshake-patterns-yku21egxftkbnrudmd1y/" type="text/html"/>
		<id>https://kitallis.github.io/hades/handshake-patterns-yku21egxftkbnrudmd1y/</id>
		<content type="html">&lt;p&gt;The problem: defining a ‚Äòhandshake‚Äô protocol between two traits You have a problem that decomposes in this way: you want any type which implements trait Alpha to be composable with any type which implements trait Omega‚Ä¶
That is, if Foo and Bar are both Alphas and Baz and Quux are both Omegas, you can compose Foo with Baz or Quux, and the same with Bar, and so on.
This is not a trivial problem.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 39</title>
		<published>2017-01-15T00:00:00+00:00</published>
		<updated>2017-01-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-39-lwlqq36hodfgoq-ek-vzp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-39-lwlqq36hodfgoq-ek-vzp/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38843&quot;&gt;rustdoc rendering for unstable features&lt;&#x2F;a&gt;! The rendering is available on &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;convert&#x2F;trait.TryFrom.html&quot;&gt;nightly docs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; gave &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39076&quot;&gt;primitive types stability attributes in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;radix&quot;&gt;@radix&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39072&quot;&gt;minor improvement to strange grammar in E0525&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39065&quot;&gt;doc examples &amp;amp; description in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::os::unix::ffi&lt;&#x2F;code&gt;.&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39028&quot;&gt;minor improvements to docs in std::env structures&#x2F;functions.&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38761&quot;&gt;‚Äòplatform-specific‚Äô section to &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep_ms&lt;&#x2F;code&gt; to match &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep&lt;&#x2F;code&gt;.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jmdyck&quot;&gt;@jmdyck&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39043&quot;&gt;a link to the second edition of The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38961&quot;&gt;wording around sort guarantees&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; taught &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38955&quot;&gt;diagnostics to highlight text&lt;&#x2F;a&gt; and provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38168&quot;&gt;disambiguated syntax for candidates in E0034&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;APTy&quot;&gt;@APTy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39007&quot;&gt;docs and tests for join_multicast_{v4,v6}&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38966&quot;&gt;1.15 release notes&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù sug‚Ä¶&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilio&quot;&gt;@emilio&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38825&quot;&gt;an attribute to ignore collecting tests per-item in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38922&quot;&gt;a couple of bad Markdown links&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;insaneinside&quot;&gt;@insaneinside&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38930&quot;&gt;src&#x2F;libcore&#x2F;ops.rs docs for RFC#1228 (Placement Left Arrow)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskrycho&quot;&gt;@chriskrycho&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37928&quot;&gt;RFC 1623: static lifetime elision.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;utkarshkukreti&quot;&gt;@utkarshkukreti&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38648&quot;&gt;all &lt;code class=&quot;highlighter-rouge&quot;&gt;try!&lt;&#x2F;code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;&#x2F;code&gt; in documentation examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ConnyOnny&quot;&gt;@ConnyOnny&lt;&#x2F;a&gt; added warning &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38794&quot;&gt;for match enum in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39069&quot;&gt;missing blank space issue&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38819&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong prototype&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38569&quot;&gt;rustdoc highlighting of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38995&quot;&gt;docs for min&#x2F;max algorithms&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt;the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt; and taught &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38916&quot;&gt;diagnostics to correct margin of multiline messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38910&quot;&gt;safety warning on ptr::swap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38839&quot;&gt;{Path,OsStr}::{to_str,to_string_lossy} doc examples&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38581&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque::insert&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38310&quot;&gt;zero-value behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;ctlz&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;cttz&lt;&#x2F;code&gt; intrinsics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38843&quot;&gt;rustdoc rendering for unstable features&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38816&quot;&gt;more docs for CoerceUnsized and Unsize&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38929&quot;&gt;restrictions on docs in compiler-docs mode&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38841&quot;&gt;usage of rustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38836&quot;&gt;typo in tuple docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39024&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;to_owned&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;to_string&lt;&#x2F;code&gt; in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38914&quot;&gt;tidy check for lang gate tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;behnam&quot;&gt;@behnam&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;39027&quot;&gt;typo in documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BenWiederhake&quot;&gt;@BenWiederhake&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38994&quot;&gt;some typos in Nomicon&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;minaguib&quot;&gt;@minaguib&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38799&quot;&gt;docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38362&quot;&gt;instant doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38965&quot;&gt;missing doc examples for Mutex&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38946&quot;&gt;missing links and examples for path modules and structs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 18th of January 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Announcing Tokio 0.1</title>
		<published>2017-01-10T00:00:00+00:00</published>
		<updated>2017-01-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/announcing-tokio-0-1-uhfj-cf9zgqc-xdmkhdyz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/announcing-tokio-0-1-uhfj-cf9zgqc-xdmkhdyz/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 38</title>
		<published>2017-01-08T00:00:00+00:00</published>
		<updated>2017-01-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-38-rf8uitmk8k3j59uxs96u8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-38-rf8uitmk8k3j59uxs96u8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38922&quot;&gt;a couple of bad Markdown links&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38569&quot;&gt;rustdoc highlighting of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;petrochenkov&quot;&gt;@petrochenkov&lt;&#x2F;a&gt; resolved: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38890&quot;&gt;do not use ‚Äúresolve‚Äù&#x2F;‚Äùresolution‚Äù in error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38605&quot;&gt;solutions for &lt;code class=&quot;highlighter-rouge&quot;&gt;fn foo(&amp;amp;foo: Foo)&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38902&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;note: &lt;&#x2F;code&gt; prefix from type mismatch errors&lt;&#x2F;a&gt; and escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt;the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38910&quot;&gt;safety warning on ptr::swap&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37910&quot;&gt;suggestions of #[macro_use] in every case for undefined macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38839&quot;&gt;{Path,OsStr}::{to_str,to_string_lossy} doc examples.&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38581&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque::insert&lt;&#x2F;code&gt;.&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38310&quot;&gt;zero-value behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;ctlz&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;cttz&lt;&#x2F;code&gt; intrinsics.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38843&quot;&gt;rustdoc rendering for unstable features&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38816&quot;&gt;more docs for CoerceUnsized and Unsize&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;derekdreery&quot;&gt;@derekdreery&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38874&quot;&gt;vec.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shahn&quot;&gt;@shahn&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38636&quot;&gt;Extend behaviour wrt existing keys&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38841&quot;&gt;usage of rustc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emilio&quot;&gt;@emilio&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38825&quot;&gt;an attribute to ignore collecting tests per-item in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ShaunKarran&quot;&gt;@ShaunKarran&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38845&quot;&gt;docs for TcpListener example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38836&quot;&gt;typo in tuple docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Freyskeyd&quot;&gt;@Freyskeyd&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38823&quot;&gt;doc for cfg(test) and tests directory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cbreeden&quot;&gt;@cbreeden&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38704&quot;&gt;sign formatting for numeric types in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38138&quot;&gt;loop {} with abort() in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bombless&quot;&gt;@bombless&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38629&quot;&gt;doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;escape_debug&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskrycho&quot;&gt;@chriskrycho&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37928&quot;&gt;RFC 1623: static lifetime elision.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38819&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong prototype‚Äù&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38362&quot;&gt;instant doc&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; disambiguated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38414&quot;&gt;Implementors when the type name is not unique in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38859&quot;&gt;E0088&#x2F;E0090&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanxiyn&quot;&gt;@sanxiyn&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38773&quot;&gt;rustdoc ICE when an unstable feature is used&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38770&quot;&gt;custom derive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38782&quot;&gt;‚Äòstupid‚Äô and ‚Äòcrazy‚Äô in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programble&quot;&gt;@programble&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38711&quot;&gt;links to methods on all slice iterator struct docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38548&quot;&gt;missing example for Thread struct&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 11th of January 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>The Rust module system is too confusing</title>
		<published>2017-01-04T00:00:00+00:00</published>
		<updated>2017-01-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/the-rust-module-system-is-too-confusing-h-paqlbtcqpcsd8mgvtek/" type="text/html"/>
		<id>https://kitallis.github.io/hades/the-rust-module-system-is-too-confusing-h-paqlbtcqpcsd8mgvtek/</id>
		<content type="html">&lt;p&gt;A while ago I was considering an idea, so I wrote a tweet to ask what folks thought about it.
A very spirited discussion followed about the Rust module system and what the pain points with it were (indeed - whether or not there were pain points at all). Depending on your skill at navigating Twitter‚Äôs UI, you may or may not be able to read the whole discussion by following the link above.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust is About Better Citizenship</title>
		<published>2017-01-01T00:00:00+00:00</published>
		<updated>2017-01-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-is-about-better-citizenship-syrage3eriz-9007xyzoi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-is-about-better-citizenship-syrage3eriz-9007xyzoi/</id>
		<content type="html">&lt;p&gt;Steve Klabnik recently invited the Rust community to talk about how we can best sell Rust to others; not by focusing on Rust‚Äôs safety wins (which can be an abstract benefit), but on the benefits of using Rust in a wider sense. So I‚Äôve decided to chime in with what has sold (and keeps me sold!) on Rust. I want to start with a small tour through time to help you understand where I‚Äôm coming from though, before I start talking about Rust itself.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 37</title>
		<published>2017-01-01T00:00:00+00:00</published>
		<updated>2017-01-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-37-ndiyxcugbboabqbkxqsfa/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-37-ndiyxcugbboabqbkxqsfa/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; and happy new year!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; suggested &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38605&quot;&gt;solutions for &lt;code class=&quot;highlighter-rouge&quot;&gt;fn foo(&amp;amp;foo: Foo)&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt;the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt;, disambiguated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38414&quot;&gt;Implementors when the type name is not unique in rustdoc&lt;&#x2F;a&gt; and provide &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38168&quot;&gt;disambiguated syntax for candidates in E0034&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38581&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque::insert&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38457&quot;&gt;improvements to ‚Äòinclude‚Äô macro documentation&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38310&quot;&gt;zero-value behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;ctlz&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;cttz&lt;&#x2F;code&gt; intrinsics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bombless&quot;&gt;@bombless&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38629&quot;&gt;doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;escape_debug&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38138&quot;&gt;loop {} with abort() for panic in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38569&quot;&gt;rustdoc highlighting of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; update &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38216&quot;&gt;docs of slice get() and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38548&quot;&gt;missing example for Thread struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38362&quot;&gt;Instant doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38517&quot;&gt;phrasing of MSYS2 dependencies in README.md&lt;&#x2F;a&gt; and documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38630&quot;&gt;foreign variadic functions in TRPL and the reference.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38329&quot;&gt;invalid HTML in stability notices in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38671&quot;&gt;broken CSS for trait items in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programble&quot;&gt;@programble&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38711&quot;&gt;links to methods on all slice iterator struct docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jseyfried&quot;&gt;@jseyfried&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38537&quot;&gt;internal compiler error (ICE) in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucis-fluxum&quot;&gt;@lucis-fluxum&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38693&quot;&gt;typo in PartialOrd docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;agl&quot;&gt;@agl&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38662&quot;&gt;‚Äúan‚Äù before ‚Äúi32‚Äù&lt;&#x2F;a&gt; and add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38659&quot;&gt;missing apostrophe.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kellerkindt&quot;&gt;@kellerkindt&lt;&#x2F;a&gt; and suddenly &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38628&quot;&gt;a german word :O&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38491&quot;&gt;builder docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38587&quot;&gt;missing urls in Arc docs&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38611&quot;&gt;missing urls in AtomicBool docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38635&quot;&gt;missing urls for AtomicPtr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38649&quot;&gt;missing urls for atomic_int macros types&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38674&quot;&gt;missing urls for atomic fn docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 4th of January 2017 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 36</title>
		<published>2016-12-25T00:00:00+00:00</published>
		<updated>2016-12-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-36-qmcsihf5mlxplrgctv2ct/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-36-qmcsihf5mlxplrgctv2ct/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38581&quot;&gt;behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque::insert&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38517&quot;&gt;phrasing of MSYS2 dependencies in README.md&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38457&quot;&gt;improvements to ‚Äòinclude‚Äô macro documentation&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38310&quot;&gt;zero-value behavior of &lt;code class=&quot;highlighter-rouge&quot;&gt;ctlz&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;cttz&lt;&#x2F;code&gt; intrinsics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38491&quot;&gt;builder docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38587&quot;&gt;missing urls in Arc docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38548&quot;&gt;missing example for Thread struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38362&quot;&gt;instant doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt;the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nagisa&quot;&gt;@nagisa&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38518&quot;&gt;documentation of process::exit and exec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38138&quot;&gt;abort() over loop {} for panic in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chris-morgan&quot;&gt;@chris-morgan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38569&quot;&gt;rustdoc highlighting of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38329&quot;&gt;invalid HTML in stability notices in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chriskrycho&quot;&gt;@chriskrycho&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37928&quot;&gt;RFC 1623: static lifetime elision.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38443&quot;&gt;the API examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs::File&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38397&quot;&gt;platform-specific differences for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::process::exit&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38334&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;core::hash::BuildHasherDefault&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38208&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeSet&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and implement &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38006&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fmt::Debug&lt;&#x2F;code&gt; for all structures in libstd.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38427&quot;&gt;the 1.14 release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38330&quot;&gt;short summaries in search results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38150&quot;&gt;the known type when field doesn‚Äôt satisfy bound&lt;&#x2F;a&gt; and explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38505&quot;&gt;why&#x2F;when &lt;code class=&quot;highlighter-rouge&quot;&gt;.lines()&lt;&#x2F;code&gt; returns an error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt; advertised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38297&quot;&gt;Vec in LinkedList docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38158&quot;&gt;the meaning of Result iters and link to factory functions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38395&quot;&gt;a formatting nit in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;@wezm&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38013&quot;&gt;notes on testing and concurrency&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;@jonhoo&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38315&quot;&gt;E0309 explanation with motivating example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38433&quot;&gt;thread docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38236&quot;&gt;unix socket doc&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38346&quot;&gt;duration doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38572&quot;&gt;JoinHandle missing examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38513&quot;&gt;missing examples in some thread functions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38099&quot;&gt;cast suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DirkyJerky&quot;&gt;@DirkyJerky&lt;&#x2F;a&gt; created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38554&quot;&gt;hyperlink to correct documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; properly calculated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38497&quot;&gt;line length for where clauses&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clarcharr&quot;&gt;@clarcharr&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38480&quot;&gt;@import normalize.css&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;stjepang&quot;&gt;@stjepang&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38432&quot;&gt;a minor fix in the merge_sort comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 28th of December 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Idiomatic tree and graph like structures in Rust</title>
		<published>2016-12-20T00:00:00+00:00</published>
		<updated>2016-12-20T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/idiomatic-tree-and-graph-like-structures-in-rust-at2do86npn2uitzacn3uv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/idiomatic-tree-and-graph-like-structures-in-rust-at2do86npn2uitzacn3uv/</id>
		<content type="html">&lt;p&gt;If you want to create data structures which can be modified during runtime, a possible solution could lead into tree or
graph like structures. Writing tree structures in Rust is no trivial problem. Nevertheless there are some common
idiomatic ways how to handle lifetime and borrowing issues. In other languages like C&#x2F;C++ we would simply use pointers
to create graphs or trees. This is also possible in Rust, but the thing is that this would kill every benefit from the
borrow checker and could lead into the same pitfalls like in other languages.&lt;&#x2F;p&gt;
&lt;p&gt;I tried a lots of implementations of tree like structures, which should be dynamically modifiable during runtime. One of
the first implementations used interior mutability with data structures like:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;Rc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;cell&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;RefCell&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;previous&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Rc&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;RefCell&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;Box&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        ^  ^       ^   ^&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |       |   |&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |       |   - The next Node with generic &lt;code&gt;T&lt;&#x2F;code&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |       |&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |       - Heap allocated memory, needed&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |         if &lt;code&gt;T&lt;&#x2F;code&gt; is a trait object.&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  |&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |  - A mutable memory location with&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |    dynamically checked borrow rules.&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |    Needed because &lt;code&gt;Box&lt;&#x2F;code&gt; is immutable.&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        |&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;        - Reference counted pointer, will be&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;          dropped when every reference is gone.&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;          Needed to create multiple node references.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;next&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;Vec&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;Rc&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;RefCell&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;Box&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;T&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;amp;gt;&amp;amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;data&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;T&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; ...&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This is on one hand hard to understand and will on the other hand lead into runtime borrow checks, which are not that
idiomatic Rust. Furthermore back references are simply not possible with this approach, since cyclic references are not
allowed within Rust. The main reason is that cyclic references could lead very fast into memory leaks if we are not
really careful. Also, this approach is not multi threading capable, but we could use an &lt;code class=&quot;highlighter-rouge&quot;&gt;Arc&lt;&#x2F;code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;Rc&lt;&#x2F;code&gt;, which will
decrease the overall performance.&lt;&#x2F;p&gt;
&lt;p&gt;To reduce the complexity of the problem we need to reduce the lifetime complexity within the structures. A good
approach is to use a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Region-based_memory_management&quot;&gt;memory arena&lt;&#x2F;a&gt; for the Nodes, because
this implies that every element within the arena has the same lifetime. How would such an arena look like? What about a
simple vector:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Arena&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;nodes&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;A node could then look like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Node&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;parent&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;previous_sibling&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;next_sibling&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;first_child&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;last_child&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F;&#x2F; The actual data which will be stored within the tree&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;pub&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;data&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;T&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;index&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;usize&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This means we store the actual &lt;code class=&quot;highlighter-rouge&quot;&gt;Node&lt;&#x2F;code&gt; within the &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec&lt;&#x2F;code&gt;, but for creating the tree, we simply use the indexes from the
vector. To create a new node we can use this method:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;pub&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;new_node&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;NodeId&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Get the next free index&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;next_index&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;py&quot;&gt;.nodes&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.len&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; Push the node into the arena&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;py&amp;quot;&amp;gt;.nodes&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.push&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Node&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;{&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;parent&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;None&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;first_child&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;None&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;last_child&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;None&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;previous_sibling&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;None&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;next_sibling&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;None&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;data&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;data&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;});&amp;lt;&#x2F;span&amp;gt;

&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; Return the node identifier&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;NodeId&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;{&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;index&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;next_index&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;}&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This approach makes creating graph like structures very easy, where they can contain any data. A general multi
processing is also possible since parts of a vector can shared across threads safely.&lt;&#x2F;p&gt;
&lt;p&gt;To try it out, simple use the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saschagrunert&#x2F;indextree&quot;&gt;indextree crate&lt;&#x2F;a&gt; and create graph like
structures for nearly everything.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 35</title>
		<published>2016-12-18T00:00:00+00:00</published>
		<updated>2016-12-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-35-m6n-x1tlknu3svjl2tb4o/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-35-m6n-x1tlknu3svjl2tb4o/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38443&quot;&gt;the API examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs::File&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38397&quot;&gt;platform-specific differences for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::process::exit&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38334&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;core::hash::BuildHasherDefault&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38208&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeSet&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluecereal&quot;&gt;@bluecereal&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38436&quot;&gt;if-let.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; wrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38427&quot;&gt;the 1.14 release notes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38329&quot;&gt;invalid HTML in stability notices in rustdoc&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38330&quot;&gt;short summaries in search results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38328&quot;&gt;struct name as span instead of entire block&lt;&#x2F;a&gt;, disambiguated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38414&quot;&gt;Implementors when the type name is not unique in rustdoc&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37493&quot;&gt;span for trait that doesn‚Äôt implement Copy&lt;&#x2F;a&gt;, escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt;the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt;, pointed out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38150&quot;&gt;the known type when field doesn‚Äôt satisfy bound&lt;&#x2F;a&gt; and provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38168&quot;&gt;disambiguated syntax for candidates in E0034&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt; advertised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38297&quot;&gt;Vec in LinkedList docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38216&quot;&gt;docs of slice get() and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38158&quot;&gt;the meaning of Result iters and link to factory functions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38395&quot;&gt;a formatting nit in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;@wezm&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38013&quot;&gt;notes on testing and concurrency&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonhoo&quot;&gt;@jonhoo&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38315&quot;&gt;E0309 explanation with motivating example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38138&quot;&gt;abort() over loop {} for panic in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38433&quot;&gt;thread docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38236&quot;&gt;unix socket doc&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38346&quot;&gt;duration doc&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38362&quot;&gt;instant doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38057&quot;&gt;better error messages for E0282&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38264&quot;&gt;broken src links from reexported items from macros in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37941&quot;&gt;and fixed mpsc documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; avoided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38164&quot;&gt;using locally installed Source Code Pro font in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michael-zapata&quot;&gt;@michael-zapata&lt;&#x2F;a&gt; harmonised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38179&quot;&gt;rustdoc error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38122&quot;&gt;The Book for rustup&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38067&quot;&gt;more examples to UpdSocket&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 21st of December 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Thoughts on changing Rust&#x27;s drop order</title>
		<published>2016-12-12T15:14:51+01:00</published>
		<updated>2016-12-12T15:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/thoughts-on-changing-rust-s-drop-order-5v6y0oyhb9ky7jg6jkza5/" type="text/html"/>
		<id>https://kitallis.github.io/hades/thoughts-on-changing-rust-s-drop-order-5v6y0oyhb9ky7jg6jkza5/</id>
		<content type="html">&lt;p&gt;There seems to be a wide consensus that the current (unspecified) drop order
in Rust is weird and arbitrary. If you are not yet convinced, you should
definitely take a look at a previous &lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;blog&#x2F;exploring-rusts-unspecified-drop-order&#x2F;&quot;&gt;post&lt;&#x2F;a&gt;
exploring the current rules.&lt;&#x2F;p&gt;
&lt;p&gt;While changing the drop order seems attractive, there are many aspects that
need to be considered before embarking in such a quest. In this post I would
like to expand on the consequences of changing the drop order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-ideal-scenario&quot;&gt;An ideal scenario&lt;&#x2F;h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with the assumption that nobody is relying at this moment on the
current drop order. That is, all library authors abide to Rust&amp;rsquo;s best practices
and there are no crates on crates.io that rely on this implementation-specific
detail. I highly doubt this is the case, but we can assume it just for the sake
of the argument (note that a crater run would be a possible way to test whether
this assumption holds).&lt;&#x2F;p&gt;
&lt;p&gt;Suppose you are writing a library which internally uses
&lt;code&gt;unsafe&lt;&#x2F;code&gt;, but exposes a safe interface. When figuring out how to expose said
interface, you realize that you need to drop the fields in one of your structs
in a specific order. Otherwise you are treading into the realms of Undefined
Behavior.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, there has just been an RFC that changes Rust&amp;rsquo;s current drop order
to something sane. It is even stable! Of course, you decide to use it. Much
better than relying on the unergonomic workarounds we have been using up to
this moment.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;breakage&quot;&gt;Breakage&lt;&#x2F;h2&gt;
&lt;p&gt;The scenario described before seems to be ideal. However, the library would
silently break if compiled with an old enough compiler. That is, in case you
are using a compiler that knows nothing about the new drop order, the library
will trigger undefined behavior.&lt;&#x2F;p&gt;
&lt;p&gt;The issue here is that the drop order depends on the version of the compiler,
but there is nothing in the code that gives a hint about which order should
be used. Furthermore, as a library author, you don&amp;rsquo;t know which compiler will
be used by your clients, which means that you cannot trust on a given drop
order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-partial-solution&quot;&gt;A partial solution&lt;&#x2F;h2&gt;
&lt;p&gt;Any solution requires coming up with a way to ensure old compilers
reject the new code. For instance, we could require a crate attribute like
&lt;code&gt;#![stable_drop_order]&lt;&#x2F;code&gt;. This way, an old compiler would fail with the
following error:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;The attribute `stable_drop_order` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Problem solved? No way&amp;hellip;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;back-to-the-beginning&quot;&gt;Back to the beginning&lt;&#x2F;h2&gt;
&lt;p&gt;Even with the new crate attribute in place, there is still an
unanswered question: what happens if a programmer forgets to add the necessary
attribute? Which drop order would be used then? As you can see, we get the
same undesirable situation as today: the default drop order is still
unspecified and unstable.&lt;&#x2F;p&gt;
&lt;p&gt;In fact, you end up with two different drop orders. An official one, which can
be activated on a per-crate basis by using a special attribute; and an
unspecified one, which &amp;ldquo;should not be used&amp;rdquo; but is still there.&lt;&#x2F;p&gt;
&lt;p&gt;This situation would probably lead to a de facto stabilization of the
unspecified drop order. Other implementations of Rust would be forced
to copy it to avoid accidentally breaking code.&lt;&#x2F;p&gt;
&lt;p&gt;The conclusion is clear: even if we introduce a sane drop order, the current
drop order needs to be stabilized anyway. It a pity, but I think
there is no way around it. I would really love to be proven wrong.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-possible-compromise&quot;&gt;A possible compromise&lt;&#x2F;h2&gt;
&lt;p&gt;While I think that stabilizing the current drop order is the way to go,
there is still an alternative that could be considered. Namely, if a
library did not opt in to the new drop order (by using the
&lt;code&gt;#![stable_drop_order]&lt;&#x2F;code&gt; attribute), the new compiler could assume that
the author meant to use the new drop order anyway.&lt;&#x2F;p&gt;
&lt;p&gt;This way, we solve the problem described in the previous section, since there is no
longer an unspecified drop order. Furthermore, forgetting to add the attribute
would be considered a bug in the library and should be fixed by the author.&lt;&#x2F;p&gt;
&lt;p&gt;However, there are two big counter arguments for this compromise:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It is too easy to forget adding said crate attribute. It could become a very
effective footgun.&lt;&#x2F;li&gt;
&lt;li&gt;If there is &lt;em&gt;any&lt;&#x2F;em&gt; crate out there relying on the current drop order, it will silently
break when updating to a recent compiler.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The latter problem could be treated as a library bug as well. However, the
fact that the bug would only be reproducible in some versions of the compiler
makes it particularly pernicious. You would need to be very picky about
picking your dependencies after updating to a recent compiler.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;As you probably noticed, I am in favor of stabilizing the current drop order.
Once this happens, we could start thinking about introducing an alternative
opt-in drop order. However, the concrete details are subject of a different
discussion.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Exploring Rust&#x27;s unspecified drop order</title>
		<published>2016-12-12T14:14:51+01:00</published>
		<updated>2016-12-12T14:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/exploring-rust-s-unspecified-drop-order-o0hnmbqczmi8gxezvazh9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/exploring-rust-s-unspecified-drop-order-o0hnmbqczmi8gxezvazh9/</id>
		<content type="html">&lt;p&gt;After my previous &lt;a href=&quot;https:&#x2F;&#x2F;aochagavia.github.io&#x2F;blog&#x2F;enforcing-drop-order-in-rust&#x2F;&quot;&gt;post&lt;&#x2F;a&gt;, I thought it would be
interesting to run some experiments to determine the unspecified drop order
within different constructs of Rust. After you read this, I guarantee you will
understand why there is so much &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;issues&#x2F;744&quot;&gt;discussion&lt;&#x2F;a&gt; about changing
the current drop order before stabilizing it :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;TLDR:&lt;&#x2F;strong&gt; the current drop order is really weird!&lt;&#x2F;p&gt;
&lt;p&gt;In this post we are going to look at:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Local variables&lt;&#x2F;li&gt;
&lt;li&gt;Tuples&lt;&#x2F;li&gt;
&lt;li&gt;Structs and enums&lt;&#x2F;li&gt;
&lt;li&gt;Slices&lt;&#x2F;li&gt;
&lt;li&gt;Closure captures&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We will be reusing the &lt;code&gt;PrintDrop&lt;&#x2F;code&gt; struct, so here is the definition
in case you forgot it:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&amp;#39;static &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Drop &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; drop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; self) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        println&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;Dropping {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;, self.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #ae81ff&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now we are ready to go!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;local-variables&quot;&gt;Local variables&lt;&#x2F;h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with the following piece of code, testing the drop order of local
variables:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;And the output is&amp;hellip;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping y
Dropping x
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, local variables are dropped in the reverse order of their
declaration. This should come as no surprise, since new objects can store
references to previously declared ones. Therefore a different drop
order would result in dangling pointers.&lt;&#x2F;p&gt;
&lt;p&gt;The drop order of function parameters is similar, so the first parameter
in the list is the last one to be dropped. The code is omitted for the sake
of brevity, but this behavior can be trivially reproduced by writing a
function with two by-value parameters.&lt;&#x2F;p&gt;
&lt;p&gt;If you think about drop order from the perspective of data structures, the
behavior of local variables resembles the way a stack works. You
could say that they are pushed onto the stack and popped at the
end of the scope.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tuples&quot;&gt;Tuples&lt;&#x2F;h2&gt;
&lt;p&gt;After seeing the stack-like behavior of local variables, one would expect to
see something similar in other constructs. However, tuples have a little
surprise for us&amp;hellip;&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; tup &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; (PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;));&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;And the output is&amp;hellip;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping x
Dropping y
Dropping z
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Wait! Are you telling me that the variables are dropped in the same order as
they are declared? So it seems! To continue with the data structures story,
we could say that tuples behave like a queue, in which elements are enqueued
in their order of appearance and dequeued at the end of the scope.&lt;&#x2F;p&gt;
&lt;p&gt;But this is not all! There is a subtle surprise lurking around
the corner&amp;hellip; If there is a &lt;code&gt;panic&lt;&#x2F;code&gt; during construction of the tuple, the drop
order is reversed! If you don&amp;rsquo;t believe me, just run the code below:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; tup &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; (PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), panic&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;());&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;As I told you, the output is:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping y
Dropping x
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In other words, a tuple shows a queue-like drop order, unless one of the
expressions in the tuple constructor panics. In case
of a panic during construction, the drop order will be stack-like!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;EDIT:&lt;&#x2F;strong&gt; as pointed out by &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;5hw00k&#x2F;exploring_rusts_unspecified_drop_order&#x2F;db3ejx0&#x2F;&quot;&gt;birkenfeld&lt;&#x2F;a&gt; on Reddit, the stack-like
drop order actually makes sense in case of a panic. There is at this stage no tuple!
Therefore, the expressions are dropped according to the rules of local variables.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;structs-and-enums&quot;&gt;Structs and enums&lt;&#x2F;h2&gt;
&lt;p&gt;Structs present the same weird behavior as tuples. To a certain
extent this seems consistent, since a struct is arguably a tuple with named
fields instead of indices.
It seems logical that they share the same drop order. The same holds for enums.&lt;&#x2F;p&gt;
&lt;p&gt;For the sake of brevity, the code below only tests the drop order of a struct.
Of course, the same behavior is expected from tuple structs, tuple enum
variants and struct enum variants.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    x&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    y&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    z&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; foo &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        x&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        y&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        z&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    };&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And the output is&amp;hellip;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping x
Dropping y
Dropping z
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again, the order is reversed when a panic occurs during construction:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; foo &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        x&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        y&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        z&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; panic&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    };&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;As can be observed in the output below:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping y
Dropping x
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Looking at things from the bright side, at least we can say that this
behavior is consistent across all data types. Still, it feels completely
arbitrary to use a queue-like drop order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;slices&quot;&gt;Slices&lt;&#x2F;h2&gt;
&lt;p&gt;Slices show the same queue-like behavior under normal circumstances and a
stack-like behavior in the presence of a panic during construction.&lt;&#x2F;p&gt;
&lt;p&gt;Panic-free construction:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; xs &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; [PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)];&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Results in queue-like drop order:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping x
Dropping y
Dropping z
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Panic during construction:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; xs &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; [PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;), panic&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;()];&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Results in stack-like drop order:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping y
Dropping x
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Interestingly, &lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;&#x2F;code&gt; shows the same drop order. As we are used to, a panic
in the &lt;code&gt;vec![]&lt;&#x2F;code&gt; macro will reverse the drop order. However, if you
panic after constructing the &lt;code&gt;Vec&lt;&#x2F;code&gt; by manually calling &lt;code&gt;push&lt;&#x2F;code&gt; a couple of
times, the drop order will be queue-like (from Rust&amp;rsquo;s perspective
you are dropping a fully constructed &lt;code&gt;Vec&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;closure-captures&quot;&gt;Closure captures&lt;&#x2F;h2&gt;
&lt;p&gt;An intriguing construct to &lt;em&gt;close&lt;&#x2F;em&gt; this post is the case of &lt;em&gt;closure&lt;&#x2F;em&gt; captures.
We know that, under the hood, closures are actually structs that implement
the &lt;code&gt;Fn&lt;&#x2F;code&gt;, &lt;code&gt;FnMut&lt;&#x2F;code&gt; or &lt;code&gt;FnOnce&lt;&#x2F;code&gt; traits. This means that the drop order depends
on the order in which captures are declared in the generated struct.&lt;&#x2F;p&gt;
&lt;p&gt;Let&amp;rsquo;s start with a simple code example. Note that the order in which the
variables are declared is different than the order in which they are used
in the closure.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; z &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;z&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;x&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;y&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; closure &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; move &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        x; y; z;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    };&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And the output is&amp;hellip;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping x
Dropping y
Dropping z
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Based on the output it seems that the drop order is the same as the order in
which the variables appear in the closure. However, we should test what
happens in the scenario below:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; closure &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; move &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; z_ref &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;z;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    x; y; z;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;};&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Again, the output is:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping x
Dropping y
Dropping z
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, even though &lt;code&gt;z&lt;&#x2F;code&gt; appears first as a reference, it is still the
last one to be dropped. Therefore we should reformulate our hypothesis and say
that the order in which captures are dropped is the same as the order in which
they are moved. This way we ignore any references that may appear before.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, we could perform more experiments to see if there are any edge
cases to be aware about, but in the end the best approach would be to look at
the source code of the compiler. This will certainly be necessary when drop
order is stabilized.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 34</title>
		<published>2016-12-11T00:00:00+00:00</published>
		<updated>2016-12-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-34-gq7bfe8ctaxufoex03k76/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-34-gq7bfe8ctaxufoex03k76/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Since new rustc version is out, the controversial changes on docs have been merged:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Fold &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt hesitate to give your feedbacks on them!&lt;&#x2F;p&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt; advertised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38297&quot;&gt;Vec in LinkedList docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38216&quot;&gt;docs of slice get() and friends&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38057&quot;&gt;better error messages for E0282&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38215&quot;&gt;minor fix about visibility in reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; escaped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38244&quot;&gt; the deprecated and unstable reason text in rustdoc&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38150&quot;&gt;out the known type when field doesn‚Äôt satisfy bound&lt;&#x2F;a&gt;, provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38168&quot;&gt;disambiguated syntax for candidates in E0034&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37493&quot;&gt;span for trait that doesn‚Äôt implement Copy&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;federicomenaquintero&quot;&gt;@federicomenaquintero&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38247&quot;&gt;the optional extra arguments to assert_eq!() &#x2F; assert_ne!()&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38161&quot;&gt;doctests with non-feature crate attrs in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38264&quot;&gt;broken src links from reexported items from macros in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38208&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BTreeSet&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38006&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fmt::Debug&lt;&#x2F;code&gt; for all structures in libstd&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38138&quot;&gt;abort() over loop {} for panic in the Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37941&quot;&gt;and fixed mpsc documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38158&quot;&gt;meaning of Result iters and link to factory functions&lt;&#x2F;a&gt; and avoided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38164&quot;&gt;using locally installed Source Code Pro font (fixes #24355).&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;michael-zapata&quot;&gt;@michael-zapata&lt;&#x2F;a&gt; harmonised &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38179&quot;&gt;rustdoc error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;@wezm&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38013&quot;&gt;notes on testing and concurrency&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38236&quot;&gt;unix socket doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38099&quot;&gt;cast suggestions&lt;&#x2F;a&gt;, fix &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38255&quot;&gt;invalid module suggestion&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38067&quot;&gt;more examples to UpdSocket&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38065&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;&#x2F;code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Struct as Trait&amp;gt;&lt;&#x2F;code&gt; in E0323&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38121&quot;&gt;arg num mismatch errors back to their definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38105&quot;&gt;sort lines in search index and implementors js in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38225&quot;&gt;book&#x2F;ffi to use catch_unwind&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38186&quot;&gt;docs for last undocumented &lt;code class=&quot;highlighter-rouge&quot;&gt;Default&lt;&#x2F;code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;impl&lt;&#x2F;code&gt;.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38163&quot;&gt;reference definition of :tt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cardoe&quot;&gt;@cardoe&lt;&#x2F;a&gt; fixed: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38073&quot;&gt;small typo in bootstrap&#x2F;README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tarka&quot;&gt;@tarka&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38112&quot;&gt;a minor fix to testing concurrency section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38153&quot;&gt;small typo&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38123&quot;&gt;missing examples for panicking objects&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37780&quot;&gt;checkup for return statement outside of a function&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38151&quot;&gt;examples for exit function&lt;&#x2F;a&gt;, add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38189&quot;&gt;missing links to Rc doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37859&quot;&gt;missing examples for Ipv6Addr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38020&quot;&gt;part of missing UdpSocket‚Äôs urls and examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38077&quot;&gt;missing examples for IpAddr enum&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38090&quot;&gt;cloned example for Option&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38141&quot;&gt;Component examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 14th of December 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Enforcing drop order in Rust</title>
		<published>2016-12-10T14:14:51+01:00</published>
		<updated>2016-12-10T14:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/enforcing-drop-order-in-rust-vjvyzo-umhyxhn2dorr2a/" type="text/html"/>
		<id>https://kitallis.github.io/hades/enforcing-drop-order-in-rust-vjvyzo-umhyxhn2dorr2a/</id>
		<content type="html">&lt;p&gt;Some days ago I stumbled upon an old &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;issues&#x2F;744&quot;&gt;issue&lt;&#x2F;a&gt; on Rust&amp;rsquo;s GitHub
repository. While the title of the issue is &lt;em&gt;&amp;ldquo;should struct fields and array
elements be dropped in reverse declaration order (a la C++)&amp;rdquo;&lt;&#x2F;em&gt;, the discussion
also extends to whether the current drop order should be stabilized.&lt;&#x2F;p&gt;
&lt;p&gt;Surprising as it may seem, drop order in Rust is unspecified and could
theoretically be changed in the future. However, there are use cases that
require enforcing a given drop order (see, for instance, &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;41053542&#x2F;forcing-the-order-in-which-struct-fields-are-dropped&quot;&gt;this SO
question&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In the current version of Rust (1.13), as well as in the nightlies, there is no
mechanism to statically control the drop order of the fields of a struct.
This leaves a programmer with two options:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Wrapping fields in an &lt;code&gt;Option&lt;&#x2F;code&gt;-like enum.&lt;&#x2F;li&gt;
&lt;li&gt;Relying on the current (unspecified) drop order.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This post will explore how both alternatives can be used. By experimenting
with a simple problem, we will try to explain the advantages and disadvantages
of both approaches. At the end, we will also share some final thoughts on
stabilizing drop order.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;formulating-the-problem&quot;&gt;Formulating the problem&lt;&#x2F;h2&gt;
&lt;p&gt;Before defining the problem, we need a way to monitor the drop order of
struct fields. Here, we define a struct that prints a string. It will
be used in the code examples that are to follow.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;&#x2F;&#x2F; A struct that prints the contained `str` upon being dropped&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;&amp;#39;static &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;str&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;);&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Drop &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; drop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; self) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        println&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;Dropping {}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;, self.&lt;&#x2F;span&gt;&lt;span style=&quot;color: #ae81ff&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;With that out of the way, here is a minimal problem to consider. Suppose you
have the following struct, and would like &lt;code&gt;baz&lt;&#x2F;code&gt; to be dropped before &lt;code&gt;bar&lt;&#x2F;code&gt;.
If you fail to do so, Something Bad will happen.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    bar&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    baz&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;h2 id=&quot;alternative-one-wrapping-fields-in-an-option-like-enum&quot;&gt;Alternative one: wrapping fields in an &lt;code&gt;Option&lt;&#x2F;code&gt;-like enum&lt;&#x2F;h2&gt;
&lt;p&gt;Wrapping your fields is pretty straightforward if you have seen the pattern
before. For the sake of simplicity, we just use an &lt;code&gt;Option&lt;&#x2F;code&gt;, though it would
be possible to write your own enum to make things a bit more ergonomic.&lt;&#x2F;p&gt;
&lt;p&gt;After introducing an &lt;code&gt;Option&lt;&#x2F;code&gt;, the struct looks like this:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    bar&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    baz&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Option&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;PrintDrop&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;With this new struct, you can write a &lt;code&gt;Drop&lt;&#x2F;code&gt; implementation that takes the
value out of the &lt;code&gt;Option&lt;&#x2F;code&gt; and drops it:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;impl&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Drop &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; drop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; self) {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color: #75715e&quot;&gt;&#x2F;&#x2F; Drop baz by replacing it&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        self.baz &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; None;&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    }&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;You can test the code by running it in a program with the following main
function:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; main() {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; foo &lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        bar&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;bar&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;        baz&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Some(PrintDrop(&lt;&#x2F;span&gt;&lt;span style=&quot;color: #e6db74&quot;&gt;&amp;quot;baz&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt;)),&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    };&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;The output below shows that &lt;code&gt;baz&lt;&#x2F;code&gt; is dropped first and &lt;code&gt;bar&lt;&#x2F;code&gt; second, which
was exactly our intention!&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping baz
Dropping bar
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;alternative-two-relying-on-the-current-unspecified-drop-order&quot;&gt;Alternative two: relying on the current (unspecified) drop order&lt;&#x2F;h2&gt;
&lt;p&gt;Of course, it is also possible to find out in which order the fields are
dropped in the current version of Rust! It turns out that the fields are
dropped in the same order as they are declared.&lt;&#x2F;p&gt;
&lt;p&gt;In the case of &lt;code&gt;Foo&lt;&#x2F;code&gt;, this means that flipping the declaration of &lt;code&gt;baz&lt;&#x2F;code&gt; and
&lt;code&gt;bar&lt;&#x2F;code&gt; is exactly what we need:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;background: #272822&quot;&gt;&lt;pre style=&quot;line-height: 125%&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color: #66d9ef&quot;&gt;struct&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; Foo {&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    baz&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;    bar&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f92672&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color: #f8f8f2&quot;&gt; PrintDrop,&lt;&#x2F;span&gt;
&lt;span style=&quot;color: #f8f8f2&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;After this change, we can verify that everything works correctly by running
the code with a main function similar to our previous one. In fact, we get
the following output:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;Dropping baz
Dropping bar
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;which-one-should-you-use&quot;&gt;Which one should you use?&lt;&#x2F;h2&gt;
&lt;p&gt;In my opinion, the wrapper type is the Right Way To Go &amp;trade;, just because
you are not supposed to rely on unspecified behavior. The disadvantage of the latter approach seems
clear: a future version of the compiler implementing a different drop order
would break your program. This becomes even worse if you are authoring a
library, since a program that relies on it could potentially break just by
using a new version of the compiler. Even if you published a fix, it would
require &lt;em&gt;everyone&lt;&#x2F;em&gt; to update their dependencies.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, it is undeniable that the wrapper approach has disadvantages
as well:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It is clearly less ergonomic, because you can no longer use a normal type.&lt;&#x2F;li&gt;
&lt;li&gt;Each time you access the field you need to unwrap it, which means an extra
branch in your code unless the optimizer is smart enough.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;&#x2F;h2&gt;
&lt;p&gt;Given the drawbacks of having to use a runtime construct to enforce
a certain drop order, it would make sense to stabilize it. While there is
clearly consensus about the need for stabilization, it is not at all clear
whether the currently implemented drop order should be changed before it is
stabilized. The discussion is still open, as summarized by nrc in a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;issues&#x2F;744#issuecomment-231237499&quot;&gt;comment&lt;&#x2F;a&gt;
on Rust&amp;rsquo;s issue tracker.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>About</title>
		<published>2016-12-09T14:14:51+01:00</published>
		<updated>2016-12-09T14:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/about-z-wu-kocyapjdukyqa51l/" type="text/html"/>
		<id>https://kitallis.github.io/hades/about-z-wu-kocyapjdukyqa51l/</id>
		<content type="html">&lt;p&gt;There is certainly much to tell, but since I love the DRY principle (Don&amp;rsquo;t Repeat Yourself), you will find most answers to your questions only on my &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;adolfoochagavia&#x2F;&quot;&gt;LinkedIn Profile&lt;&#x2F;a&gt; üòâ.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Hello Hugo!</title>
		<published>2016-12-09T14:14:51+01:00</published>
		<updated>2016-12-09T14:14:51+01:00</updated>
		<link href="https://kitallis.github.io/hades/hello-hugo-dpcj1ud4ib4klus6n5djk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/hello-hugo-dpcj1ud4ib4klus6n5djk/</id>
		<content type="html">&lt;p&gt;A couple of months ago I shut down my old blog about programming. Although it
sounds cruel to kill a blog, the truth is that it had only one or two articles
of dubious quality.&lt;&#x2F;p&gt;
&lt;p&gt;However, I think there will be interesting things to write about in the coming
months, so here I am with a new blog. After a couple of hours of tinkering
with different themes and settings, this is ready to go online! There will
be no pretexts the next time I want to write&amp;hellip; The only obstacle now is
finding time and a good topic, so stay tuned.&lt;&#x2F;p&gt;
&lt;p&gt;As a fun fact, I am using Hugo to generate the website. The fact that it has
a single binary and no dependencies seems very convenient (this is not
entirely true though, since I am using &lt;code&gt;pygments&lt;&#x2F;code&gt; for syntax highlighting).&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, now everything is in place and this post will make the blog feel
less empty until there is real content.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 33</title>
		<published>2016-12-04T00:00:00+00:00</published>
		<updated>2016-12-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-33-ftqpisda45ibeudvt3o7p/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-33-ftqpisda45ibeudvt3o7p/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Since new rustc version is out, the controversial changes on docs have been merged:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Fold &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt hesitate to give your feedbacks on them!&lt;&#x2F;p&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38150&quot;&gt;out the known type when field doesn‚Äôt satisfy bound&lt;&#x2F;a&gt;, supported &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38125&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;is_letter()&lt;&#x2F;code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;char&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37493&quot;&gt;span for trait that doesn‚Äôt implement Copy&lt;&#x2F;a&gt;, warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38085&quot;&gt;when an import list is empty&lt;&#x2F;a&gt; and detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36409&quot;&gt;missing &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;&#x2F;code&gt; on methods with return type &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt; displayed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38057&quot;&gt;better error messages for E0282&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;@wezm&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38013&quot;&gt;notes on testing and concurrency&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38121&quot;&gt;arg num mismatch errors back to their definition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38122&quot;&gt;book for rustup&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linclark&quot;&gt;@linclark&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38108&quot;&gt;error explanation for E0328&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38105&quot;&gt;sort lines in search index and implementors js in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; note &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38103&quot;&gt;individual lint name in messages set via lint group attribute&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38153&quot;&gt;small typo&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38067&quot;&gt;more examples to UpdSocket&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38123&quot;&gt;missing examples for panicking objects&lt;&#x2F;a&gt;, casted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38099&quot;&gt;suggestions&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37780&quot;&gt;checkup for return statement outside of a function&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38151&quot;&gt;examples for exit function&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alygin&quot;&gt;@alygin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38007&quot;&gt;error explanation formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37911&quot;&gt;back missing crate-name when ‚Äìplayground-url is used in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38018&quot;&gt;that Process::command will search the PATH&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38019&quot;&gt;a clearer description of std::path::MAIN_SEPARATOR&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37863&quot;&gt;hint to fix error for immutable ref in arg&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37369&quot;&gt;multiline spans in full if short enough&lt;&#x2F;a&gt; and showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38065&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Trait&lt;&#x2F;code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Struct as Trait&amp;gt;&lt;&#x2F;code&gt; in E0323&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cardoe&quot;&gt;@cardoe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38073&quot;&gt;small typo in bootstrap&#x2F;README&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38130&quot;&gt;items section in reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tarka&quot;&gt;@tarka&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38112&quot;&gt;testing concurrency section&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37983&quot;&gt;examples for TcpListener struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38020&quot;&gt;part of missing UdpSocket‚Äôs urls and examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37859&quot;&gt;missing examples for Ipv6Addr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38077&quot;&gt;missing examples for IpAddr enum&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38090&quot;&gt;cloned example for Option&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38141&quot;&gt;Component examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 7th of December 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rst Server</title>
		<published>2016-11-30T00:00:00+00:00</published>
		<updated>2016-11-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/rst-server-yc-mnlmmjhx76g1nnvehi/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rst-server-yc-mnlmmjhx76g1nnvehi/</id>
		<content type="html">&lt;h1 id=&quot;rst-03-released-now-with-a-web-ui-and-windows-linux-and-mac-osx-binaries&quot;&gt;rst 0.3 released, now with a web ui and windows, linux and mac osx binaries!&lt;&#x2F;h1&gt;
&lt;p&gt;I have just released the 0.3beta release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rst&#x2F;releases&quot;&gt;rst&lt;&#x2F;a&gt;,
the requirements tracking tool made for developers. This release brings many benefits,
including support for all major platforms and a web-ui for viewing requirements. In
addition, I have a clear path forward for how to make the web-ui be able to edit
the requirements as well.&lt;&#x2F;p&gt;
&lt;p&gt;There are many points I would like to cover in this post, in summary they are:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;rst‚Äôs licensing changes&lt;&#x2F;li&gt;
  &lt;li&gt;learning a new programing langugage to write the front end in, &lt;a href=&quot;http:&#x2F;&#x2F;elm-lang.org&#x2F;&quot;&gt;elm&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nickel-org&#x2F;nickel.rs&quot;&gt;nickel.rs&lt;&#x2F;a&gt; and the
  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ethcore&#x2F;jsonrpc-core&quot;&gt;jsonrpc_core&lt;&#x2F;a&gt; rust libraries
  for the backend&lt;&#x2F;li&gt;
  &lt;li&gt;packaging the static html files directly into the released rust binary&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;rst&lt;&#x2F;strong&gt;‚Äôs primary goal is to be &lt;em&gt;simple&lt;&#x2F;em&gt; ‚Äì to make it easy to track requirements and
integrate into development tools. It will always run locally on your machine&lt;&#x2F;p&gt;
&lt;h2 id=&quot;change-to-a-copy-left-license&quot;&gt;Change to a copy-left license&lt;&#x2F;h2&gt;
&lt;p&gt;Just before the 0.3 release I switched rst‚Äôs license from the MIT permissive
license to the LGPLv3+ copy-left license and I would like to talk a little bit
about why.&lt;&#x2F;p&gt;
&lt;p&gt;rst is an application tool that I strongly feel developers need. Requirements
tracking and detailed design are core pillars to effective software development,
and yet there are really no tools to express these ideas that improve a
developer‚Äôs &lt;em&gt;day to day&lt;&#x2F;em&gt; work. In summary, there is nothing like git for
requirements tracking.&lt;&#x2F;p&gt;
&lt;p&gt;But there should be! What are requirements but a name,
a piece of text and links to other requirements? This is a simple problem with
a simple solution, but the industry has not pursued simplicity ‚Äì all we‚Äôve
gotten is large web tools with database backends.&lt;&#x2F;p&gt;
&lt;p&gt;By having your requirements be simple text files that live in your code,
you get another benefit ‚Äì the requirements can easily link &lt;strong&gt;to&lt;&#x2F;strong&gt; your code
and be revision controlled &lt;strong&gt;with&lt;&#x2F;strong&gt; your code. This allows you to integrate
your requirements with tools you already use for tracking your code development
(github, Atlassian, etc).&lt;&#x2F;p&gt;
&lt;p&gt;Because rst‚Äôs very design is to enable simplicity, it was important to me
that the core library always remain open source. That is why I chose LGPL, it
allows propriety companies to use rst as a library and build on it, but if
they want new features then they need to share. Free developer tools should
remain free and companies that want to improve them should contribute.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, I fully support using rst within a larger application,
and that is why I am using the ‚ÄúLesser‚Äù GPL which allows others to build
on rst and why the format for the artifact files are public domain.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;learning-elm&quot;&gt;Learning Elm&lt;&#x2F;h2&gt;
&lt;p&gt;The rst backend and cmd line tool are written in
&lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;en-US&#x2F;&quot;&gt;rust&lt;&#x2F;a&gt; a systems programming language that
runs blazingly fast, prevents segfaults, and guarantees thread safety. There
really is no replacing rust ‚Äì it is an amazing language for the backend.
The safety guarantees make runtime errors practically impossible.&lt;&#x2F;p&gt;
&lt;p&gt;Elm is a functional programming language designed from the ground up to make
WebUIs that are maintainable and fun to program. I have to say they accomplished
all those goals, and learning elm after learning rust was pretty much a matter
of just learning new syntax. Many of the concepts that rust taught such as
&lt;a href=&quot;http:&#x2F;&#x2F;rustbyexample.com&#x2F;expression.html&quot;&gt;expressions returning a value&lt;&#x2F;a&gt;
and &lt;a href=&quot;http:&#x2F;&#x2F;rustbyexample.com&#x2F;flow_control&#x2F;match.html&quot;&gt;pattern matching&lt;&#x2F;a&gt;
were utilized for exactly the same benefit in elm.&lt;&#x2F;p&gt;
&lt;p&gt;A frontend in elm with a backend in rust is a match made in heaven: fun,
performant and safe.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rust-web-development&quot;&gt;Rust web development&lt;&#x2F;h2&gt;
&lt;p&gt;Before I got too far, I would like to give a shoutout to
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nickel-org&#x2F;nickel.rs&quot;&gt;nickel.rs&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ethcore&#x2F;jsonrpc-core&quot;&gt;jsonrpc_core&lt;&#x2F;a&gt;. They made developing
a json-rpc backend about as easy as anyone could ask for.&lt;&#x2F;p&gt;
&lt;p&gt;What was really fun was learning how to package an elm&#x2F;node app into
a rust binary ‚Äì it turned out to be surprisingly easy! I used
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;casey&#x2F;just&quot;&gt;just&lt;&#x2F;a&gt; to create a simple makefile which
compiles my node&#x2F;elm frontend into a tar file that I included in the source.
I then then use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include_bytes!&lt;&#x2F;code&gt; macro to include the tar file directly in
the rust binary during the build. I then followed the directions on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&#x2F;rust-everywhere&quot;&gt;rust-everywhere&lt;&#x2F;a&gt; to compile
rust for linux, mac and windows. It was a pain figuring out how to
package the node-app in a &lt;em&gt;cross platform&lt;&#x2F;em&gt; manner, but other than that
it went really smoothly!&lt;&#x2F;p&gt;
&lt;p&gt;With nickel, hosting was as simple as
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.utilize(StaticFilesHandler::new(&amp;amp;tmp_dir))&lt;&#x2F;code&gt;, where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tmp_dir&lt;&#x2F;code&gt; was
just the unpacked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&#x2F;tar-rs&quot;&gt;tarfile&lt;&#x2F;a&gt;
in a temporary directory created by
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;tempdir&quot;&gt;tempdir&lt;&#x2F;a&gt;. Big shoutout to
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&quot;&gt;alexcrichton&lt;&#x2F;a&gt;, along with your
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexcrichton&#x2F;toml-rs&quot;&gt;toml&lt;&#x2F;a&gt; library I have used an
incredible number of your tools for core development needs ‚Äì you have
done an incredible amount to make rust useful for developing complex
applications!&lt;&#x2F;p&gt;
&lt;p&gt;If you want more details, check out the source code at
https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rst.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;&#x2F;h2&gt;
&lt;p&gt;Huge steps have been made in the development of rst, with a read-only web-ui
deployed, and a fully supported one which includes editing just around the
corner. I simply cannot be thankful enough to the wonderful people who have made
rust and elm what they are today. These languages make development easy and
&lt;em&gt;fun&lt;&#x2F;em&gt;, and anything that I can do to support them I will do.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 32</title>
		<published>2016-11-27T00:00:00+00:00</published>
		<updated>2016-11-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-32-0s2pvk1w-5tbxduyyv649/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-32-0s2pvk1w-5tbxduyyv649/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Since new rustc version is out, the controversial changes on docs have been merged:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Fold &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt hesitate to give your feedbacks on them!&lt;&#x2F;p&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alygin&quot;&gt;@alygin&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38007&quot;&gt;error explanation formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37911&quot;&gt;back missing crate-name when ‚Äìplayground-url is used in rustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37910&quot;&gt;suggestions ‚Äú#[macro_use]‚Äù for all undefined macros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sourcefrog&quot;&gt;@sourcefrog&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38018&quot;&gt;that Process::command will search the PATH&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38019&quot;&gt;a clearer description of std::path::MAIN_SEPARATOR&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37941&quot;&gt;and fixed mpsc documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wezm&quot;&gt;@wezm&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38013&quot;&gt;notes on testing and concurrency&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37863&quot;&gt;hint to fix error for immutable ref in arg&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sanxiyn&quot;&gt;@sanxiyn&lt;&#x2F;a&gt; warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37946&quot;&gt;unused type parameters&lt;&#x2F;a&gt; and warned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37631&quot;&gt;unused type aliases&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37369&quot;&gt;multiline spans in full if short enough&lt;&#x2F;a&gt; and detected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36409&quot;&gt;missing &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;&#x2F;code&gt; on methods with return type &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37934&quot;&gt;rustup.sh with rustup.rs in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37983&quot;&gt;examples for TcpListener struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38020&quot;&gt;part of missing UdpSocket‚Äôs urls and examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37780&quot;&gt;checkup for return statement outside of a function&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37859&quot;&gt;missing examples for Ipv6Addr&lt;&#x2F;a&gt;, started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37388&quot;&gt;of implementation of proposal for E0308&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37870&quot;&gt;unneeded tricky macro doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eddyb&quot;&gt;@eddyb&lt;&#x2F;a&gt; separated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37890&quot;&gt;test collection from the main ‚Äúclean‚Äù-ing pipeline in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37442&quot;&gt;hint when cast needs a dereference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37876&quot;&gt;duplicate bullet points in feature list&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brcooley&quot;&gt;@brcooley&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37840&quot;&gt;grammar error in lifetimes.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ojsheikh&quot;&gt;@ojsheikh&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37835&quot;&gt;E0088 to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37836&quot;&gt;the reference‚Äôs status.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sfackler&quot;&gt;@sfackler&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37963&quot;&gt;two small issues in iterator docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vickenty&quot;&gt;@vickenty&lt;&#x2F;a&gt; followed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38001&quot;&gt;our own recommendations in the examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38010&quot;&gt;how lock ‚Äòguard‚Äô structures are created.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fkjogu&quot;&gt;@fkjogu&lt;&#x2F;a&gt; defined &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37978&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bound&lt;&#x2F;code&gt; argument in std::sync::mpsc::sync_channel in the documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;samestep&quot;&gt;@samestep&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37961&quot;&gt;‚Äúradicum‚Äù with ‚Äúradices‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37880&quot;&gt;missing examples in SocketAddr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;38004&quot;&gt;missing urls and examples to TcpStream&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37962&quot;&gt;missing examples to SocketAddrV6&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 30th of November 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>First Rust+GObject coding session</title>
		<published>2016-11-22T20:56:55+00:00</published>
		<updated>2016-11-22T20:56:55+00:00</updated>
		<link href="https://kitallis.github.io/hades/first-rust-gobject-coding-session-wovvyzca7w4sgrfma5gc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/first-rust-gobject-coding-session-wovvyzca7w4sgrfma5gc/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 31</title>
		<published>2016-11-20T00:00:00+00:00</published>
		<updated>2016-11-20T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-31-ica6ep2ximks2no70hzbl/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-31-ica6ep2ximks2no70hzbl/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Since new rustc version is out, the controversial changes on docs have been merged:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Fold &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt hesitate to give your feedbacks on them!&lt;&#x2F;p&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;eddyb&quot;&gt;@eddyb&lt;&#x2F;a&gt; separated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37890&quot;&gt;test collection from the main ‚Äúclean‚Äù-ing pipeline in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37442&quot;&gt;hint when cast needs a dereference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37876&quot;&gt;duplicate bullet points in feature list&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brcooley&quot;&gt;@brcooley&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37840&quot;&gt;grammar error in lifetimes.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ojsheikh&quot;&gt;@ojsheikh&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37835&quot;&gt;E0088 to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37836&quot;&gt;the reference‚Äôs status.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37242&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37870&quot;&gt;unneeded tricky macro doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37859&quot;&gt;missing examples for Ipv6Addr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37880&quot;&gt;missing examples in SocketAddr&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37749&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;#[should_panic]&lt;&#x2F;code&gt; feature&lt;&#x2F;a&gt; and show &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37826&quot;&gt;a better error when using ‚Äìtest with &lt;code class=&quot;highlighter-rouge&quot;&gt;#[proc_macro_derive]&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jedireza&quot;&gt;@jedireza&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37743&quot;&gt;grammar typos in ffi.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37607&quot;&gt;grammar verification build command&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37763&quot;&gt;cli argument &lt;code class=&quot;highlighter-rouge&quot;&gt;--playground-url&lt;&#x2F;code&gt; in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37821&quot;&gt;nits and typos on comments in doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robinst&quot;&gt;@robinst&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37759&quot;&gt;semicolon to ‚Äúperhaps add a &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;&#x2F;code&gt; for one of them‚Äù help&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tarka&quot;&gt;@tarka&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37766&quot;&gt;sections about testing concurrency and stdout&#x2F;err capture&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37773&quot;&gt;some local inlining issues in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37774&quot;&gt;top-level path doc examples to show results.&lt;&#x2F;a&gt; and rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37754&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::path::Path::push&lt;&#x2F;code&gt; doc example.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;euclio&quot;&gt;@euclio&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37758&quot;&gt;deprecated text for unstable docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polo-language&quot;&gt;@polo-language&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37755&quot;&gt;punctuation, capitalization, and sentence structure of code snippet comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; folded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37375&quot;&gt;reference cast help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37806&quot;&gt;net examples&lt;&#x2F;a&gt; and uncommented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37757&quot;&gt;some long error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 23rd of November 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>`struct_array`</title>
		<published>2016-11-17T00:00:00+00:00</published>
		<updated>2016-11-17T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/struct-array-gtgwhlimpybhdnntnoupz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/struct-array-gtgwhlimpybhdnntnoupz/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;struct_array&quot;&gt;GitHub page&lt;&#x2F;a&gt; for more
information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rapid prototyping C applications with Rust</title>
		<published>2016-11-13T00:00:00+00:00</published>
		<updated>2016-11-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/rapid-prototyping-c-applications-with-rust-oddwpkba-cmhb6tltzces/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rapid-prototyping-c-applications-with-rust-oddwpkba-cmhb6tltzces/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;cargo&quot;&gt;Cargo&lt;&#x2F;a&gt; is a gorgeous tool when it comes to building, packaging and shipping your
own Rust applications. Some of you guys are living in a C&#x2F;C++ world where developing Rust applications is just a hobby.
A reason could be that Rust is currently not that highly accepted in the world of &lt;em&gt;applications in production&lt;&#x2F;em&gt;. This is
sad, but even within your day to day development it could be possible to use Rust for a lots of tools or prototyping
scenarios!&lt;&#x2F;p&gt;
&lt;p&gt;One example could be to use the possibilities of Rust and Cargo to do prototyping of C based applications. So how could
we do that?&lt;&#x2F;p&gt;
&lt;p&gt;For the first try we simply build a new cargo project:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cargo new --bin rapidc
     Created binary (application) `rapidc` project
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The target is now to come as fast as possible back into the C world. For this we add the two dependencies &lt;code class=&quot;highlighter-rouge&quot;&gt;libc&lt;&#x2F;code&gt; and
&lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;&#x2F;code&gt;, as well as a custom build script &lt;code class=&quot;highlighter-rouge&quot;&gt;build.rs&lt;&#x2F;code&gt; to our &lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo.toml&lt;&#x2F;code&gt; file:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-toml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;&#x2F;span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rapidc&quot;&lt;&#x2F;span&gt;
&lt;span class=&quot;py&quot;&gt;version&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;&#x2F;span&gt;
&lt;span class=&quot;py&quot;&gt;build&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&quot;build.rs&quot;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;nn&quot;&gt;[dependencies]&lt;&#x2F;span&gt;
&lt;span class=&quot;py&quot;&gt;libc&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;nn&quot;&gt;[build-dependencies]&lt;&#x2F;span&gt;
&lt;span class=&quot;py&quot;&gt;gcc&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;What else? For sure we need an entry point for our C application, which we name &lt;code class=&quot;highlighter-rouge&quot;&gt;src&#x2F;main.c&lt;&#x2F;code&gt; and looks like:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;&#x2F;span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main_c&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Found %d args:&lt;&#x2F;span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
        &lt;span class=&quot;n&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;&#x2F;span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;- %s&lt;&#x2F;span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;&#x2F;span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This program does not do really special at all, but as a demonstration we print out all available command line
arguments. The interesting part happens within the Rust entry function in &lt;code class=&quot;highlighter-rouge&quot;&gt;main.rs&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;crate&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;libc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;ffi&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;libc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::{&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;c_int&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_char&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;C&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main_c&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_int&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&lt;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_char&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_int&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Get the current args and map them to a vector of zero&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; terminated c strings:&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Vec&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;env&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;args&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.filter_map&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;nn&quot;&gt;CString&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.ok&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.collect&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; Convert these c strings to raw pointers&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;let&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;c_args&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;Vec&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;*&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;const&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;c_char&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;=&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;args&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.iter&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;()&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.map&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(|&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;arg&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;|&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;{&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;arg&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.as_ptr&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;()&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;})&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.collect&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;();&amp;lt;&#x2F;span&amp;gt;

&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; Call the main function within the created c library&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;unsafe&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;{&amp;lt;&#x2F;span&amp;gt;
    &amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;main_c&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;c_args&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.len&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;()&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;as&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;c_int&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;c_args&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;.as_ptr&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;());&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;};&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;The Foreign Function Interface (FFI) of Rust is pretty straight forward and Cargo even supports us in writing those
applications. We simply need to declare our C function within the scope of &lt;code class=&quot;highlighter-rouge&quot;&gt;extern &quot;C&quot; { ... }&lt;&#x2F;code&gt;. Since we cannot use the
basic C types within Rust we have to use the ones of the &lt;code class=&quot;highlighter-rouge&quot;&gt;libc&lt;&#x2F;code&gt; crate (like &lt;code class=&quot;highlighter-rouge&quot;&gt;c_int&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;c_char&lt;&#x2F;code&gt;). The &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;&#x2F;code&gt; function
creates a Vector of C pointers to our command line arguments and passes them within the &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe {...}&lt;&#x2F;code&gt; block to our C
entry function.&lt;&#x2F;p&gt;
&lt;p&gt;Do we forgot something? Yes, what about the &lt;code class=&quot;highlighter-rouge&quot;&gt;build.rs&lt;&#x2F;code&gt; script? How can we tell Cargo to first build our C library
and then link it to the Rust application? The build script looks like:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;crate&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;gcc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;nn&quot;&gt;gcc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;Config&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.file&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src&#x2F;main.c&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;nf&quot;&gt;.include&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;src&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt;
&lt;span class=&quot;nf&quot;&gt;.compile&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;libmain.a&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Pretty easy right? The &lt;code class=&quot;highlighter-rouge&quot;&gt;gcc&lt;&#x2F;code&gt; crate helps us to easily build the &lt;code class=&quot;highlighter-rouge&quot;&gt;main.c&lt;&#x2F;code&gt; to the library &lt;code class=&quot;highlighter-rouge&quot;&gt;libmain.a&lt;&#x2F;code&gt;. Now we are able to
try out our work by executing:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cargo run
cargo run
    Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
     Running `target&#x2F;debug&#x2F;rapidc`
Found 1 args:
        - target&#x2F;debug&#x2F;rapidc
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Or what about:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; cargo run arg1 arg2 arg3
    Finished debug [unoptimized + debuginfo] target(s) in 0.0 secs
     Running `target&#x2F;debug&#x2F;rapidc arg1 arg2 arg3`
Found 4 args:
        - target&#x2F;debug&#x2F;rapidc
        - arg1
        - arg2
        - arg3
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Great, everything works as expected, ‚Ä¶but stop! What happened here? We did not tell Cargo to link against a library
called &lt;code class=&quot;highlighter-rouge&quot;&gt;libmain.a&lt;&#x2F;code&gt;. How should Cargo know what to do with the library? That is one of the very important features of
such a great build environment: Strong defaults will lead into a better world. Cargo will simply assume that you call
your library &lt;code class=&quot;highlighter-rouge&quot;&gt;libmain.a&lt;&#x2F;code&gt; for the file &lt;code class=&quot;highlighter-rouge&quot;&gt;main.c&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If we want to link another library to our C application we can simply use the &lt;code class=&quot;highlighter-rouge&quot;&gt;link&lt;&#x2F;code&gt; directive:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pthread&quot;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
    &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main_c&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;argc&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_int&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_char&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;c_int&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;It is pretty brilliant: On one hand we have the full power of Rust and Cargo via the language itself within the
&lt;code class=&quot;highlighter-rouge&quot;&gt;build.rs&lt;&#x2F;code&gt; script. This means we have the full flexibility like in CMake by the usage of the complete programming
language set of Rust. On the other hand the strong defaults of Cargo will make it very easy to build release versions,
debug our code via &lt;code class=&quot;highlighter-rouge&quot;&gt;gdb&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;lldb&lt;&#x2F;code&gt;, package the application and write benchmarks or unit tests for your C functions.
This is all possible without the need of a cruel Makefile or a bloated CMake environment. How great is that?! üòÄ&lt;&#x2F;p&gt;
&lt;p&gt;Currently I am working on some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saschagrunert&#x2F;craft&quot;&gt;Cargo port called ‚ÄòCraft‚Äô&lt;&#x2F;a&gt; which should combine
both worlds out of the box. Replacing the compiler facade is a lots of work and Cargo is even evolving very fast which
makes me think about writing just an cargo extension to do faster prototyping in C. What do you think?&lt;&#x2F;p&gt;
&lt;p&gt;The full source code of the small example project is available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saschagrunert&#x2F;rapidc&quot;&gt;on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 30</title>
		<published>2016-11-13T00:00:00+00:00</published>
		<updated>2016-11-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-30-lmiri9kt85oye6dbpjh3z/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-30-lmiri9kt85oye6dbpjh3z/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Since new rustc version is out, the controversial changes on docs have been merged:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Fold &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt hesitate to give your feedbacks on them!&lt;&#x2F;p&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36409&quot;&gt;the detection for missing &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;&#x2F;code&gt; on methods with return type &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37442&quot;&gt;hint when cast needs a dereference&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37369&quot;&gt;multiline spans in full if short enough&lt;&#x2F;a&gt;, disallowed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37548&quot;&gt;‚Äòstart‚Äô feature on nested function in E0526&lt;&#x2F;a&gt; and added the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34420&quot;&gt;detection for double reference when applying binary op&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;keeperofdakeys&quot;&gt;@keeperofdakeys&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37749&quot;&gt;the #[should_panic] feature&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jedireza&quot;&gt;@jedireza&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37743&quot;&gt;grammar typos in ffi.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37058&quot;&gt;long diagnostic for E0002&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37242&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37607&quot;&gt;grammar verification build command&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37658&quot;&gt;ref suggestion&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37375&quot;&gt;reference cast help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37388&quot;&gt;implementation of proposal for E0308&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johnthagen&quot;&gt;@johnthagen&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37386&quot;&gt;example using Self to reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37600&quot;&gt;changelog for 1.13.0&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37601&quot;&gt;platform compatibility table from the Book, link to the forge&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37531&quot;&gt;invalid ‚Äúref mut mut‚Äù sugestion&lt;&#x2F;a&gt;, included &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37370&quot;&gt;type of missing trait methods in error&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37695&quot;&gt;note ‚Äúhow to escape‚Äù on fmt string with unescaped &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37481&quot;&gt;hint to add lifetime on impl items&lt;&#x2F;a&gt;, grouped &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37456&quot;&gt;unused import warnings per import list&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37447&quot;&gt;one error for duplicated type definitions&lt;&#x2F;a&gt;, pointed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37428&quot;&gt;to type argument span when used as trait&lt;&#x2F;a&gt; and reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36520&quot;&gt;error when data-less enum variant called as function&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37554&quot;&gt;‚ÄúDoesn‚Äôt live long enough‚Äù error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37250&quot;&gt;marked unsafe fns in module page with superscript icons in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfix&quot;&gt;@xfix&lt;&#x2F;a&gt; matched &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37483&quot;&gt;guessing game output to newest language version&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;it clear that the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshtriplett&quot;&gt;@joshtriplett&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37472&quot;&gt;convention for using both fmt::Write and io::Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; folded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37728&quot;&gt;fields for enum struct variants into a docblock in rustdoc&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;added line breaks to where clauses a la rustfmt in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37527&quot;&gt;Error implementation for std::sync::mpsc::RecvTimeoutError.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37662&quot;&gt;documentation to some of the unstable intrinsics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nwin&quot;&gt;@nwin&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37503&quot;&gt;remark about poor code style&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trotter&quot;&gt;@trotter&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37368&quot;&gt;testing.md to reflect changes to cargo new&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37680&quot;&gt;doc typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37664&quot;&gt;the question mark operator in reference and the Book‚Äôs syntax index&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37588&quot;&gt;missing urls on io structs&lt;&#x2F;a&gt;, printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37669&quot;&gt;missing urls for FusedIterator and TrustedLen traits&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37698&quot;&gt;missing urls for marker‚Äôs traits&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37716&quot;&gt;missing mem urls&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37727&quot;&gt;invalid src url&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37627&quot;&gt;missing urls and made few local rewrites&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37650&quot;&gt;missing urls for Sum and Product traits&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 16th of November 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 29</title>
		<published>2016-11-06T00:00:00+00:00</published>
		<updated>2016-11-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-29-mhopkchrn7khocq4onper/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-29-mhopkchrn7khocq4onper/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johnthagen&quot;&gt;@johnthagen&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37386&quot;&gt;example using Self to reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37600&quot;&gt;changelog for 1.13.0&lt;&#x2F;a&gt;, and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37531&quot;&gt;invalid ‚Äúref mut mut‚Äù sugestion&lt;&#x2F;a&gt; and provided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37442&quot;&gt;hint when cast needs a dereference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37554&quot;&gt;‚ÄúDoesn‚Äôt live long enough‚Äù error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37250&quot;&gt;marked unsafe fns in module page with superscript icons in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfix&quot;&gt;@xfix&lt;&#x2F;a&gt; matched &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37483&quot;&gt;guessing game output to newest language version&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;it clear that the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshtriplett&quot;&gt;@joshtriplett&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37472&quot;&gt;convention for using both fmt::Write and io::Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37058&quot;&gt;long diagnostic for E0002&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37242&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37588&quot;&gt;missing urls on io structs&lt;&#x2F;a&gt;, started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37388&quot;&gt;implementation of proposal for E0308&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37375&quot;&gt;reference cast help message&lt;&#x2F;a&gt; and printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshtriplett&quot;&gt;@joshtriplett&lt;&#x2F;a&gt; copied&#x2F;edited &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37473&quot;&gt;on documentation for write! and writeln!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AndiDog&quot;&gt;@AndiDog&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37475&quot;&gt;E0532 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37438&quot;&gt;docs for Index and IndexMut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37405&quot;&gt;‚ÄúDoesn‚Äôt live long enough‚Äù error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37316&quot;&gt;a few links in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;d-unseductable&quot;&gt;@d-unseductable&lt;&#x2F;a&gt; elided &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37523&quot;&gt;lifetimes in DerefMut documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pfrenssen&quot;&gt;@pfrenssen&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37484&quot;&gt;‚ÄúTesting‚Äù chapter for 1.12&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xfix&quot;&gt;@xfix&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37485&quot;&gt;mention of ‚Äú*‚Äù dependency version in guessing game example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diwic&quot;&gt;@diwic&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36849&quot;&gt;str documentation typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37537&quot;&gt;missing urls for ErrorKind‚Äôs variants&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 9th of November 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 28</title>
		<published>2016-10-30T00:00:00+00:00</published>
		<updated>2016-10-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-28-d8pyd23pr5yf23jmpbbx0/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-28-d8pyd23pr5yf23jmpbbx0/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;joshtriplett&quot;&gt;@joshtriplett&lt;&#x2F;a&gt; copied&#x2F;edited &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37473&quot;&gt;on documentation for write! and writeln!&lt;&#x2F;a&gt; and documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37472&quot;&gt;convention for using both fmt::Write and io::Write&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;AndiDog&quot;&gt;@AndiDog&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37475&quot;&gt;E0532 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; added an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37250&quot;&gt;unsafe sign for unsafe functions in module page with superscript icons&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;achanda&quot;&gt;@achanda&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37432&quot;&gt;that send_to might panic in certain cases&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37438&quot;&gt;docs for Index and IndexMut&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;polo-language&quot;&gt;@polo-language&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37425&quot;&gt;error note to illegal code snippet&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37058&quot;&gt;long diagnostic for E0002&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37242&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37405&quot;&gt;‚ÄúDoesn‚Äôt live long enough‚Äù error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37317&quot;&gt;release notes for 1.12.1&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37316&quot;&gt;a few links in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phungleson&quot;&gt;@phungleson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36466&quot;&gt;E0072 bonus to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johnthagen&quot;&gt;@johnthagen&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37386&quot;&gt;example using Self to reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37388&quot;&gt;the implementation of proposal for E0308&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37375&quot;&gt;reference cast help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and printed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37343&quot;&gt;documentation for Read, Write impls for slices and Vec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;loggerhead&quot;&gt;@loggerhead&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37228&quot;&gt;an error of ‚Äòbook&#x2F;deref-coercions.html‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mcarton&quot;&gt;@mcarton&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36206&quot;&gt;bad error message with &lt;code class=&quot;highlighter-rouge&quot;&gt;::&amp;lt;&lt;&#x2F;code&gt; in types&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robinst&quot;&gt;@robinst&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37430&quot;&gt;semicolon to ‚ÄúMaybe a missing &lt;code class=&quot;highlighter-rouge&quot;&gt;extern crate foo&lt;&#x2F;code&gt;‚Äù message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zoffixznet&quot;&gt;@zoffixznet&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37398&quot;&gt;typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37396&quot;&gt;error E0221 more helpful&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vtduncan&quot;&gt;@vtduncan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37391&quot;&gt;broken links in Vec docs&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37372&quot;&gt;link to PathBuf from the Path docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;typelist&quot;&gt;@typelist&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37358&quot;&gt;typo that resulted in comparison-to-self&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aidanhs&quot;&gt;@aidanhs&lt;&#x2F;a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;as_bytes&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37327&quot;&gt;is not the iterator on String, &lt;code class=&quot;highlighter-rouge&quot;&gt;bytes&lt;&#x2F;code&gt; is&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37324&quot;&gt;E0277 help message&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37304&quot;&gt;missing urls in collections module&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 2nd of November 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 27</title>
		<published>2016-10-23T00:00:00+00:00</published>
		<updated>2016-10-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-27-dqqdoakivp0tofopb9dc6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-27-dqqdoakivp0tofopb9dc6/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37343&quot;&gt;documentation for Read, Write impls for slices and Vec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&quot;&gt;@brson&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37317&quot;&gt;release notes for 1.12.1&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37057&quot;&gt;all ‚Äúconsider using an explicit lifetime parameter‚Äù suggestions&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37316&quot;&gt;a few links in the docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; is working on rustdoc: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37250&quot;&gt;flag unsafe fns in module‚Äôs function list&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phungleson&quot;&gt;@phungleson&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36466&quot;&gt;E0072 bonus to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37242&quot;&gt;a distinct error code and description for ‚Äúmain function has wrong type‚Äù&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37058&quot;&gt;long diagnostic for E0002&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; rustdoc: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;add line breaks to where clauses a la rustfmt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;loggerhead&quot;&gt;@loggerhead&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37228&quot;&gt;an error of ‚Äòbook&#x2F;deref-coercions.html‚Äô&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diwic&quot;&gt;@diwic&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36849&quot;&gt;documentation typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; Improve &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37324&quot;&gt;E0277 help message&lt;&#x2F;a&gt;, Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37304&quot;&gt;missing urls in collections module&lt;&#x2F;a&gt;, Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and Print &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37187&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::borrow::Cow&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nabeelomer&quot;&gt;@nabeelomer&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37189&quot;&gt;the docs for Error::description&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aidanhs&quot;&gt;@aidanhs&lt;&#x2F;a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;as_bytes&lt;&#x2F;code&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37327&quot;&gt;is not the iterator on String, &lt;code class=&quot;highlighter-rouge&quot;&gt;bytes&lt;&#x2F;code&gt; is&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37314&quot;&gt;a simpler description of Iterator::nth&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vkatsikaros&quot;&gt;@vkatsikaros&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37309&quot;&gt;a minor clarification in guessing game&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;senior&quot;&gt;@senior&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37244&quot;&gt;error explaination for E0182, E0230 and E0399&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37174&quot;&gt;‚ÄúDoesn‚Äôt live long enough‚Äù error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; rustdoc: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37098&quot;&gt;Improve playground run buttons&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37193&quot;&gt;erroneous pluralization of ‚Äò1 type argument‚Äô error messages&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jethrogb&quot;&gt;@jethrogb&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37240&quot;&gt;stable example to TypeId&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37165&quot;&gt;missing urls for io types&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36964&quot;&gt;invalid doc comment help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37043&quot;&gt;missing urls on Vec docs&lt;&#x2F;a&gt;, Rollup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37337&quot;&gt;of 10 pull requests&lt;&#x2F;a&gt;, Rollup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37289&quot;&gt;of 7 pull requests&lt;&#x2F;a&gt;, Add &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37259&quot;&gt;more io urls&lt;&#x2F;a&gt; and Rollup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37237&quot;&gt;of 6 pull requests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 26th of October 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 26</title>
		<published>2016-10-16T00:00:00+00:00</published>
		<updated>2016-10-16T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-26-e2mcojl3km9xc1xs33arx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-26-e2mcojl3km9xc1xs33arx/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37187&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::borrow::Cow&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nabeelomer&quot;&gt;@nabeelomer&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37189&quot;&gt;the docs for Error::description&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37190&quot;&gt;line breaks to where clauses a la rustfmt&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37134&quot;&gt;more tags display in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37165&quot;&gt;missing urls for io types&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36964&quot;&gt;invalid doc comment help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37043&quot;&gt;missing urls on Vec docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37098&quot;&gt;playground run buttons in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;est31&quot;&gt;@est31&lt;&#x2F;a&gt; colored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37102&quot;&gt;the question mark operator in the rustdoc output&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37060&quot;&gt;E0303 to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Razican&quot;&gt;@Razican&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36977&quot;&gt;playground run buttons in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nabeelomer&quot;&gt;@nabeelomer&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37141&quot;&gt;that RwLock might panic&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37119&quot;&gt;backticks in Type Aliases header in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KillTheMule&quot;&gt;@KillTheMule&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36997&quot;&gt;explicit the fact that lifetime are descriptive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37050&quot;&gt;and cleaned up rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36679&quot;&gt;to print non-self arguments of bare functions and struct methods on their own line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37089&quot;&gt;missing urls in io module&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37073&quot;&gt;missing urls on String module&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37115&quot;&gt;missing urls for BufWriter and BufReader&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36982&quot;&gt;missing urls in slice doc module&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36961&quot;&gt;missing urls for hash modules&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 17th of October 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 25</title>
		<published>2016-10-09T00:00:00+00:00</published>
		<updated>2016-10-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-25-umeb1-2vegbtjeu-vknii/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-25-umeb1-2vegbtjeu-vknii/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The way rustdoc is creating urls is problematic for the moment. A good summary of this issue can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;36417&quot;&gt;here&lt;&#x2F;a&gt;. A few members of the Rust Doc team are preparing an RFC in order to improve this. If you want to get involved, feel free to speak about it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt; (imperio on IRC).&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KillTheMule&quot;&gt;@KillTheMule&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36997&quot;&gt;explicit the fact that lifetime are descriptive&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; refactored &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37050&quot;&gt;and cleaned up rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36679&quot;&gt;to print non-self arguments of bare functions and struct methods on their own line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36964&quot;&gt;invalid doc comment help message&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37043&quot;&gt;missing urls on Vec docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36982&quot;&gt;missing urls in slice doc module&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36961&quot;&gt;missing urls for hash modules&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chamoysvoice&quot;&gt;@chamoysvoice&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36862&quot;&gt;E0220 error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36966&quot;&gt;missing *mut T impl in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;acrrd&quot;&gt;@acrrd&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36222&quot;&gt;a better underline for E0057, E0060 and E0061&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;angelsl&quot;&gt;@angelsl&lt;&#x2F;a&gt; mentioned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36929&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;move&lt;&#x2F;code&gt; keyword for lambdas in Reference&lt;&#x2F;a&gt; and clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36930&quot;&gt;last element in str.{r,}splitn documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36937&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;write!&lt;&#x2F;code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fmt&lt;&#x2F;code&gt; page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36903&quot;&gt;‚Äúminor‚Äù librustdoc cleanup and refactoring&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlueSpaceCanary&quot;&gt;@BlueSpaceCanary&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36878&quot;&gt;the double introduction for &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gavinb&quot;&gt;@gavinb&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36798&quot;&gt;error message and snippet for ‚Äúdid you mean &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;&#x2F;code&gt;‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;@kmcallister&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36665&quot;&gt;Arc docs to match new Rc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christopherdumas&quot;&gt;@christopherdumas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36404&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;includes!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36637&quot;&gt;run button appearing when it shouldn‚Äôt&lt;&#x2F;a&gt;, merged &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36909&quot;&gt;E0002 into E0004&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36928&quot;&gt;missing urls for error module&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36908&quot;&gt;typos&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;37003&quot;&gt;underline when run button hovered&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 12th of October 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 24</title>
		<published>2016-10-02T00:00:00+00:00</published>
		<updated>2016-10-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-24-voljzp7s1pwpkzdt8e4gs/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-24-voljzp7s1pwpkzdt8e4gs/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36903&quot;&gt;‚Äúminor‚Äù librustdoc cleanup and refactoring&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BlueSpaceCanary&quot;&gt;@BlueSpaceCanary&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36878&quot;&gt;the double introduction for &lt;code class=&quot;highlighter-rouge&quot;&gt;cargo run&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gavinb&quot;&gt;@gavinb&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36798&quot;&gt;error message and snippet for ‚Äúdid you mean &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;&#x2F;code&gt;‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;green-coder&quot;&gt;@green-coder&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36746&quot;&gt;example code in the documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36679&quot;&gt;to print non-self arguments of bare functions and struct methods on their own line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;@kmcallister&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36665&quot;&gt;Arc docs to match new Rc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; updated rustdoc to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36644&quot;&gt;inline sidebar items, to display more in a page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christopherdumas&quot;&gt;@christopherdumas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36404&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;includes!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35759&quot;&gt;refactored range examples&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36364&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;&#x2F;code&gt; docstrings for &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;&#x2F;code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Generics&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36637&quot;&gt;run button appearing when it shouldn‚Äôt&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alygin&quot;&gt;@alygin&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36756&quot;&gt;E0512 to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36757&quot;&gt;E0025 to new error format&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nathanmusoke&quot;&gt;@nathanmusoke&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36769&quot;&gt;minor typo in variable bindings in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;palango&quot;&gt;@palango&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36813&quot;&gt;link to format! docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wesleywiser&quot;&gt;@wesleywiser&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36860&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Send&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sync&lt;&#x2F;code&gt; traits to the reference&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tmiasko&quot;&gt;@tmiasko&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36851&quot;&gt;BufRead::read_until documentation&lt;&#x2F;a&gt; and reworded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36833&quot;&gt;description of SystemTimeError&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36872&quot;&gt;a couple refactorings in librustdoc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36765&quot;&gt;basic doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;core::ptr::write_bytes&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; updated rustdoc‚Äôs CSS &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36676&quot;&gt;to put &lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;&#x2F;code&gt; in trait listings on a new line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;@japaric&lt;&#x2F;a&gt; implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36586&quot;&gt;‚Äìsysroot on rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;giannicic&quot;&gt;@giannicic&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36652&quot;&gt;E0520 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pmatos&quot;&gt;@pmatos&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36672&quot;&gt;documention troubleshooting missing linker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vanjacosic&quot;&gt;@vanjacosic&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36564&quot;&gt;the ‚ÄúOwnership‚Äù section of The Book&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36563&quot;&gt;the ‚ÄúGetting started‚Äù section of The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36761&quot;&gt;E0425, E0446 and E0449&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36535&quot;&gt;doc comments to new macro url syntax&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36723&quot;&gt;E0513 stuff&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36873&quot;&gt;E0035, E0036 and E0370 to new error format&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36841&quot;&gt;process module doc a bit&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36810&quot;&gt;missing urls for ops module&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36750&quot;&gt;missing links on cmp module&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36623&quot;&gt;some typos and improve doc comments style&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36576&quot;&gt;missing urls for Box doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 5th of October 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Sketch of overloaded short-circuiting operators</title>
		<published>2016-09-25T11:30:00-07:00</published>
		<updated>2016-09-25T11:30:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/sketch-of-overloaded-short-circuiting-operators-fhqzk8jw0ukvqbb7eylqa/" type="text/html"/>
		<id>https://kitallis.github.io/hades/sketch-of-overloaded-short-circuiting-operators-fhqzk8jw0ukvqbb7eylqa/</id>
		<content type="html">&lt;p&gt;Rust‚Äôs &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;ops&#x2F;index.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::ops&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; module provides a variety of traits for overloading Rust‚Äôs operators, but conspicuously skips the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;&#x2F;code&gt; operators. While I don‚Äôt believe these operators are that important to overload, I wanted to attempt to address one of the barriers to that functionality, namely short-circuiting, and provide a starting point for someone who actually cares to write an RFC.&lt;&#x2F;p&gt;
&lt;p&gt;As a refresher, short-circuiting is the behavior that these operators sometimes don‚Äôt evaluate their right-hand sides at all, depending on the value of their left-hand sides (&lt;code class=&quot;highlighter-rouge&quot;&gt;true || x&lt;&#x2F;code&gt; is always &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;false &amp;amp;&amp;amp; x&lt;&#x2F;code&gt; is always &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;&#x2F;code&gt;). This prevents representing these operators with function calls, because a functions‚Äôs arguments must be evaluated before it can be called. Even a closure isn‚Äôt enough - because an expression like &lt;code class=&quot;highlighter-rouge&quot;&gt;lhs &amp;amp;&amp;amp; return&lt;&#x2F;code&gt; is valid, but cannot be transformed to &lt;code class=&quot;highlighter-rouge&quot;&gt;and(lhs, || return)&lt;&#x2F;code&gt;, which has different semantics.&lt;&#x2F;p&gt;
&lt;p&gt;A more involved approach is needed. Fundamentally, these short-circuiting operators evaluate the left-hand side and depending on that value either short-circuit to a result or evaluate the right-hand side and combine it with the left-hand side in an operation. To represent these two steps, our trait will need two methods, one to represent the short-circuit check and one for the actual operation. For the rest of this post, I will be speaking about the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;code&gt; operator; the &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;&#x2F;code&gt; operator works pretty much the same.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;And&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Rhs&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Self&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;fn&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;and_short&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;amp;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;-&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;Option&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;Self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Output&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;;&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;c&amp;quot;&amp;gt;&#x2F;&#x2F; alternate:&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;fn&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;and_short&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;-&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Result&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;Self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Output&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;;&amp;lt;&#x2F;span&amp;gt;

&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;fn&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;and&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;rhs&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Rhs&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;-&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;Self&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Output&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;;&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this sketch, &lt;code class=&quot;highlighter-rouge&quot;&gt;and_short&lt;&#x2F;code&gt; takes &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;self&lt;&#x2F;code&gt; because if it returns None, we need to pass that same &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;&#x2F;code&gt;. If we wanted to allow moving in &lt;code class=&quot;highlighter-rouge&quot;&gt;and_short&lt;&#x2F;code&gt;, its signature could instead be changed to the listed alternate, where &lt;code class=&quot;highlighter-rouge&quot;&gt;Ok(v)&lt;&#x2F;code&gt; is a short-circuited result and &lt;code class=&quot;highlighter-rouge&quot;&gt;Err(s)&lt;&#x2F;code&gt; returns the value to be used as the self value of &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The desugaring of &lt;code class=&quot;highlighter-rouge&quot;&gt;lhs &amp;amp;&amp;amp; rhs&lt;&#x2F;code&gt; then becomes fairly straightforward. To eliminate ambiguity, I‚Äôve represented it as a macro:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;macro_rules!&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;$lhs:expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;$rhs:expr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{{&lt;&#x2F;span&gt;
		&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;lhs&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;$lhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
		&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;And&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;and_short&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;lhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
			&lt;span class=&quot;nf&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
			&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;And&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;and&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;lhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;$rhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
	&lt;span class=&quot;p&quot;&gt;}}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;The left-hand operand is always evaluated immediately, then &lt;code class=&quot;highlighter-rouge&quot;&gt;and_short&lt;&#x2F;code&gt; is called. If it returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Some&lt;&#x2F;code&gt;, the right-hand operand is not evaluted; if it returns &lt;code class=&quot;highlighter-rouge&quot;&gt;None&lt;&#x2F;code&gt;, the right-hand side is evaluated and &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;&#x2F;code&gt; is called. Here‚Äôs how an implementation for &lt;code class=&quot;highlighter-rouge&quot;&gt;bool&lt;&#x2F;code&gt; might look, if we needed to implement it in Rust:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;And&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;and_short&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
		&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
			&lt;span class=&quot;k&quot;&gt;false&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;
			&lt;span class=&quot;k&quot;&gt;true&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;and&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
		&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
			&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
			&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;And here‚Äôs what an implementation for a hypothetical &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Three-valued_logic#Logics&quot;&gt;ternary logic value&lt;&#x2F;a&gt; might look like:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;enum&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;err&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
	&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
	&lt;span class=&quot;n&quot;&gt;True&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;And&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;and_short&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;Option&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;&lt;em&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;and&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Tri&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;rhs&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;&lt;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;False&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nb&quot;&gt;None&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Tri&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note that it‚Äôs important for consistency of behavior that for values of &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;&#x2F;code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;and_short&lt;&#x2F;code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;Some(v)&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;&#x2F;code&gt; returns &lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;&#x2F;code&gt; for any value of &lt;code class=&quot;highlighter-rouge&quot;&gt;rhs&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A full example, including an &lt;code class=&quot;highlighter-rouge&quot;&gt;Or&lt;&#x2F;code&gt; trait is available as &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;SpaceManiac&#x2F;35565f1516ed1adc03ade2c9461398a1&quot;&gt;a gist&lt;&#x2F;a&gt; and can be run on &lt;a href=&quot;https:&#x2F;&#x2F;play.rust-lang.org&#x2F;?gist=35565f1516ed1adc03ade2c9461398a1&quot;&gt;the playground&lt;&#x2F;a&gt;. Thanks to those on the &lt;code class=&quot;highlighter-rouge&quot;&gt;#rust&lt;&#x2F;code&gt; IRC who inspired me to want to write this post and poked holes in my earlier ideas.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 23</title>
		<published>2016-09-25T00:00:00+00:00</published>
		<updated>2016-09-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-23-ft3478gjeqrbr8xj-exgp/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-23-ft3478gjeqrbr8xj-exgp/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bluss&quot;&gt;@bluss&lt;&#x2F;a&gt; updated rustdoc‚Äôs CSS &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36676&quot;&gt;to put &lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;&#x2F;code&gt; in trait listings on a new line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QuietMisdreavus&quot;&gt;@QuietMisdreavus&lt;&#x2F;a&gt; updated rustdoc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36679&quot;&gt;to print non-self arguments of bare functions and struct methods on their own line&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pmatos&quot;&gt;@pmatos&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36672&quot;&gt;documention troubleshooting missing linker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;@kmcallister&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36665&quot;&gt;Arc docs to match new Rc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;japaric&quot;&gt;@japaric&lt;&#x2F;a&gt; implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36586&quot;&gt;‚Äìsysroot on rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; updated rustdoc to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36644&quot;&gt;inline sidebar items, to display more in a page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;giannicic&quot;&gt;@giannicic&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36652&quot;&gt;E0520 error message&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sinkuu&quot;&gt;@sinkuu&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36615&quot;&gt;E0243&#x2F;E0244 message consistent with E0107&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vanjacosic&quot;&gt;@vanjacosic&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36564&quot;&gt;the ‚ÄúOwnership‚Äù section of The Book&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36563&quot;&gt;the ‚ÄúGetting started‚Äù section of The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christopherdumas&quot;&gt;@christopherdumas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36404&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;includes!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EdorianDark&quot;&gt;@EdorianDark&lt;&#x2F;a&gt; inserted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36248&quot;&gt;examples with universal function call syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35759&quot;&gt;refactored range examples&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36364&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;&#x2F;code&gt; docstrings for &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;&#x2F;code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Generics&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36535&quot;&gt;doc comments to new macro url syntax&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36637&quot;&gt;run button appearing when it shouldn‚Äôt&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36623&quot;&gt;some typos and improve doc comments style&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36576&quot;&gt;missing urls for Box doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;@kmcallister&lt;&#x2F;a&gt; tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36571&quot;&gt;std::rc docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;caipre&quot;&gt;@caipre&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36600&quot;&gt;a minor correction in &lt;code class=&quot;highlighter-rouge&quot;&gt;sort_by_key&lt;&#x2F;code&gt; doc comment&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36521&quot;&gt;language in documentation comment&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36519&quot;&gt;example in AsMut trait documentation&lt;&#x2F;a&gt; and added links between format_args! macro and std::fmt::Arguments struct](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36523).&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36390&quot;&gt;basic doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::panic::{set_hook, take_hook}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36664&quot;&gt;a minor &lt;code class=&quot;highlighter-rouge&quot;&gt;VecDeque&lt;&#x2F;code&gt; doc examples cleanup&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; proposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust-www&#x2F;pull&#x2F;533&quot;&gt;a global rust-lang.org architecture change&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36578&quot;&gt;‚Äòe.g.‚Äô by ‚Äòi.e.‚Äô&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36102&quot;&gt;metadata diagnostics&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 28th of September 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>ripgrep is faster than {grep, ag, git grep, ucg, pt, sift}</title>
		<published>2016-09-23T07:05:00-04:00</published>
		<updated>2016-09-23T07:05:00-04:00</updated>
		<link href="https://kitallis.github.io/hades/ripgrep-is-faster-than-grep-ag-git-grep-ucg-pt-sift-i883fdtecyq9gpeqrf3fo/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ripgrep-is-faster-than-grep-ag-git-grep-ucg-pt-sift-i883fdtecyq9gpeqrf3fo/</id>
		<content type="html">&lt;p&gt;In this article I will introduce a new command line search tool,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;&lt;code&gt;ripgrep&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;,
that combines the usability of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggreer&#x2F;the_silver_searcher&quot;&gt;The Silver Searcher&lt;&#x2F;a&gt;
(an &lt;a href=&quot;http:&#x2F;&#x2F;beyondgrep.com&#x2F;&quot;&gt;&lt;code&gt;ack&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; clone) with the
raw performance of GNU grep. &lt;code&gt;ripgrep&lt;&#x2F;code&gt; is fast, cross platform (with binaries
available for Linux, Mac and Windows) and written in
&lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;ripgrep&lt;&#x2F;code&gt; is available on
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&quot;&gt;Github&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We will attempt to do the impossible: a fair benchmark comparison between
several popular code search tools. Specifically, we will dive into a series of
25 benchmarks that substantiate the following claims:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;For both searching single files &lt;em&gt;and&lt;&#x2F;em&gt; huge directories of files, no other
tool obviously stands above &lt;code&gt;ripgrep&lt;&#x2F;code&gt; in either performance or correctness.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;ripgrep&lt;&#x2F;code&gt; is the only tool with proper Unicode support that doesn&amp;rsquo;t make
you pay dearly for it.&lt;&#x2F;li&gt;
&lt;li&gt;Tools that search many files at once are generally &lt;em&gt;slower&lt;&#x2F;em&gt; if they use
memory maps, not faster.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As someone who has worked on text search in Rust in their free time for the
last 2.5 years, and as the author of both &lt;code&gt;ripgrep&lt;&#x2F;code&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;regex&quot;&gt;the underlying regular expression engine&lt;&#x2F;a&gt;,
I will use this opportunity to provide detailed insights into the performance
of each code search tool. No benchmark will go unscrutinized!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Target audience&lt;&#x2F;strong&gt;: Some familiarity with Unicode, programming and some
experience with working on the command line.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;&#x2F;strong&gt;: I&amp;rsquo;m hearing reports from some people that &lt;code&gt;rg&lt;&#x2F;code&gt; isn&amp;rsquo;t as fast as I&amp;rsquo;ve
claimed on their data. I&amp;rsquo;d love to help explain what&amp;rsquo;s going on, but to do
that, I&amp;rsquo;ll need to be able to reproduce your results. If you
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;ripgrep&#x2F;issues&quot;&gt;file an issue&lt;&#x2F;a&gt;
with something I can reproduce, I&amp;rsquo;d be happy to try and explain it.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>RustConf 2016 Travelogue</title>
		<published>2016-09-19T07:31:31+00:00</published>
		<updated>2016-09-19T07:31:31+00:00</updated>
		<link href="https://kitallis.github.io/hades/rustconf-2016-travelogue-6gq9tcmvmsmcmipa4irc5/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rustconf-2016-travelogue-6gq9tcmvmsmcmipa4irc5/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 22</title>
		<published>2016-09-18T00:00:00+00:00</published>
		<updated>2016-09-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-22-zbza-qrpgyht9hkyy45ns/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-22-zbza-qrpgyht9hkyy45ns/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;‚Äúnew‚Äù run button&lt;&#x2F;a&gt; has been merged and is now used in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;std&#x2F;&quot;&gt;nightly docs&lt;&#x2F;a&gt;. Give it a try!&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;christopherdumas&quot;&gt;@christopherdumas&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36404&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;includes!&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; links between format_args! macro and std::fmt::Arguments struct](https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36523).&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EdorianDark&quot;&gt;@EdorianDark&lt;&#x2F;a&gt; inserted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36248&quot;&gt;examples with universal function call syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36390&quot;&gt;basic doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::panic::{set_hook, take_hook}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36390&quot;&gt;basic doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::panic::set_hook&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35759&quot;&gt;refactored range examples&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36364&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;&#x2F;code&gt; docstrings for &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;&#x2F;code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Generics&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36320&quot;&gt;information in case of markdown block code test failure&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36102&quot;&gt;metadata diagnostics&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week (too), I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jfirebaugh&quot;&gt;@jfirebaugh&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36389&quot;&gt;E0297&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36383&quot;&gt;E0049&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36354&quot;&gt;E0537, E0535 and E0536&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Other contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kmcallister&quot;&gt;@kmcallister&lt;&#x2F;a&gt; tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36357&quot;&gt;std::mem docs&lt;&#x2F;a&gt;, tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36402&quot;&gt;array docs&lt;&#x2F;a&gt; and tweaked &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36424&quot;&gt;std::marker docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mark-Simulacrum&quot;&gt;@Mark-Simulacrum&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36521&quot;&gt;language in documentation comment&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36519&quot;&gt;example in AsMut trait documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kylog&quot;&gt;@kylog&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36380&quot;&gt;a typo in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36480&quot;&gt;wording&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;athulappadan&quot;&gt;@athulappadan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36396&quot;&gt;Documentation about what Default does for each type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36293&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;docblock-short&lt;&#x2F;code&gt; collapse&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kylog&quot;&gt;@kylog&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36380&quot;&gt;a typo in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dangcheng&quot;&gt;@dangcheng&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36374&quot;&gt;a mistake (File::open -&amp;gt; File::create) in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;c4rlo&quot;&gt;@c4rlo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36204&quot;&gt;a ‚Äú\‚Äù in a table heading to be ‚Äú&#x2F;‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36363&quot;&gt;urls when they were needed&lt;&#x2F;a&gt; and set &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;run button transparent instead of invisible&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 21st of September 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Learning systems programming with Rust</title>
		<published>2016-09-11T10:45:47+00:00</published>
		<updated>2016-09-11T10:45:47+00:00</updated>
		<link href="https://kitallis.github.io/hades/learning-systems-programming-with-rust-fku7o-rn5rfbg75qgydyx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/learning-systems-programming-with-rust-fku7o-rn5rfbg75qgydyx/</id>
		<content type="html">&lt;p&gt;.container { display: flex; } .slide { width: 40%; } .content { width: 60%; align-items: center; padding: 20px; } @media (max-width: 480px) { &#x2F;&lt;em&gt;breakpoint&lt;&#x2F;em&gt;&#x2F; .container { display: block; } .slide { width: 100%; } .content { width: 100%; }  I did the closing keynote at the first RustConf yesterday, on Rust and systems programming and accessibility and learning about concurrency and why I write about programming and a bunch of other things.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Distrackt</title>
		<published>2016-09-11T00:00:00+00:00</published>
		<updated>2016-09-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/distrackt-tufkzlpcbxie-rxvnshzq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/distrackt-tufkzlpcbxie-rxvnshzq/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;jturner314&#x2F;distrackt&quot;&gt;GitLab page&lt;&#x2F;a&gt; for
more information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 21</title>
		<published>2016-09-11T00:00:00+00:00</published>
		<updated>2016-09-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-21-bfgt8bevhbok1i05wxmhm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-21-bfgt8bevhbok1i05wxmhm/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;Guillaume Gomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;In the last meetup, we discussed about the possibilty to ‚Äúexpand‚Äù examples in the doc in order to show the full code. The goal is to prevent issues from copy&#x2F;paste where &lt;code class=&quot;highlighter-rouge&quot;&gt;try&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;&#x2F;code&gt; are used.&lt;&#x2F;p&gt;
&lt;p&gt;Another thing was that it should be more obvious that the code examples could actually be run online. To this issue, a PR has already be opened &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;athulappadan&quot;&gt;@athulappadan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36396&quot;&gt;Documentation about what Default does for each type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EdorianDark&quot;&gt;@EdorianDark&lt;&#x2F;a&gt; inserted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36248&quot;&gt;examples with universal function call syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36293&quot;&gt;the &lt;code class=&quot;highlighter-rouge&quot;&gt;docblock-short&lt;&#x2F;code&gt; collapse&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kylog&quot;&gt;@kylog&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36380&quot;&gt;a typo in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dangcheng&quot;&gt;@dangcheng&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36374&quot;&gt;a mistake (File::open -&amp;gt; File::create) in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36390&quot;&gt;basic doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::panic::set_hook&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;c4rlo&quot;&gt;@c4rlo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36204&quot;&gt;a ‚Äú\‚Äù in a table heading to be ‚Äú&#x2F;‚Äù&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35759&quot;&gt;refactored range examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36364&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;&#x2F;code&gt; docstrings for &lt;code class=&quot;highlighter-rouge&quot;&gt;String&lt;&#x2F;code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;AtomicBool&lt;&#x2F;code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Generics&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36366&quot;&gt;docstrings for &lt;code class=&quot;highlighter-rouge&quot;&gt;mem::update&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mem::swap&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36102&quot;&gt;metadata diagnostics&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36363&quot;&gt;urls when they were needed&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt; and set &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36334&quot;&gt;run button transparent instead of invisible&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week (too), I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36267&quot;&gt;E0559&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abhiQmar&quot;&gt;@abhiQmar&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36223&quot;&gt;E0558&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;razielgn&quot;&gt;@razielgn&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36212&quot;&gt;E0493&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EugeneGonzalez&quot;&gt;@EugeneGonzalez&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36210&quot;&gt;E0529&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Other contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JDemler&quot;&gt;@JDemler&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36326&quot;&gt;typo in nomicon&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fanzier&quot;&gt;@fanzier&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36165&quot;&gt;typo in PartialOrd docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;johnthagen&quot;&gt;@johnthagen&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36225&quot;&gt;nightly docs supported Windows versions to match Getting Started page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Sawyer47&quot;&gt;@Sawyer47&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36266&quot;&gt;incorrect methods inherited through Deref by filtering them&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36314&quot;&gt;doc coercion&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35845&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;core::result::IntoIter&lt;&#x2F;code&gt; is created&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36311&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::time::Instant::elapsed&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36078&quot;&gt;associated consts in search results&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36241&quot;&gt;mention of &lt;code class=&quot;highlighter-rouge&quot;&gt;make tidy&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36241&quot;&gt;mention of &lt;code class=&quot;highlighter-rouge&quot;&gt;make tidy&lt;&#x2F;code&gt; into contributing.md file&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apasel422&quot;&gt;@apasel422&lt;&#x2F;a&gt; cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36263&quot;&gt;thread-local storage docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36243&quot;&gt;missing urls&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36141&quot;&gt;new error code tests&lt;&#x2F;a&gt;, added missing urls &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36298&quot;&gt;here&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36243&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 14th of September 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 20</title>
		<published>2016-09-05T00:00:00+00:00</published>
		<updated>2016-09-05T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-20-b48didf8arpkoionjz-dw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-20-b48didf8arpkoionjz-dw/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;Matthew Piziak&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news-getting-a-bit-old-but-still-gold&quot;&gt;Latest news (getting a bit old but still gold!)&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 70 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on GitHub!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35759&quot;&gt;refactored range examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35845&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;core::result::IntoIter&lt;&#x2F;code&gt; is created&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;reference isn‚Äôt normative&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36078&quot;&gt;associated consts in search results&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36243&quot;&gt;added missing urls&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;Cobrand&quot;&gt;@Cobrand&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36241&quot;&gt;mention of &lt;code class=&quot;highlighter-rouge&quot;&gt;make tidy&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;c4rlo&quot;&gt;@c4rlo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36204&quot;&gt;a ‚Äú\‚Äù in a table heading to be ‚Äú&#x2F;‚Äù&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apasel422&quot;&gt;@apasel422&lt;&#x2F;a&gt; cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36263&quot;&gt;thread-local storage docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week (too), I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35480&quot;&gt;E0379&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EugeneGonzalez&quot;&gt;@EugeneGonzalez&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36205&quot;&gt;E0528&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35773&quot;&gt;E0259&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abhiQmar&quot;&gt;@abhiQmar&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36050&quot;&gt;E0076&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36223&quot;&gt;E0558&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36054&quot;&gt;E0451&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36147&quot;&gt;E0265&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birryree&quot;&gt;@birryree&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36148&quot;&gt;E0194&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paulfanelli&quot;&gt;@paulfanelli&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36060&quot;&gt;E0463&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;acrrd&quot;&gt;@acrrd&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36079&quot;&gt;E0318&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xmohit&quot;&gt;@0xmohit&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36100&quot;&gt;E0260&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36135&quot;&gt;E0520&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zjhmale&quot;&gt;@zjhmale&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36114&quot;&gt;E0393&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gavinb&quot;&gt;@gavinb&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36125&quot;&gt;E0164, E0615, and E0184&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;athulappadan&quot;&gt;@athulappadan&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36136&quot;&gt;E0034&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Other contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35810&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn*&lt;&#x2F;code&gt; traits&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35863&quot;&gt;evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Shl&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Shr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35926&quot;&gt;evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;BitOr&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;BitXor&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35927&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BitAndAssign&lt;&#x2F;code&gt; example with something more evocative&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35993&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BitAnd&lt;&#x2F;code&gt; trait documentation&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35997&quot;&gt;a simple example for &lt;code class=&quot;highlighter-rouge&quot;&gt;thread::current()&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35758&quot;&gt;accumulate vector and assert for &lt;code class=&quot;highlighter-rouge&quot;&gt;RangeFrom&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;RangeInclusive&lt;&#x2F;code&gt; examples&lt;&#x2F;a&gt;, showed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35771&quot;&gt;how iterating over &lt;code class=&quot;highlighter-rouge&quot;&gt;RangeTo&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;RangeToInclusive&lt;&#x2F;code&gt; fails&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35793&quot;&gt;demonstrated &lt;code class=&quot;highlighter-rouge&quot;&gt;RHS != Self&lt;&#x2F;code&gt; use cases for &lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sub&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35895&quot;&gt;documentation in the &lt;code class=&quot;highlighter-rouge&quot;&gt;cell&lt;&#x2F;code&gt; module&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;regexident&quot;&gt;@regexident&lt;&#x2F;a&gt; updated a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35962&quot;&gt;code sample in chapter on syntax extensions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; noticed that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36130&quot;&gt;rustbook chapters&#x2F;sections should be ordered lists&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36134&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TcpListener&lt;&#x2F;code&gt; example more simple&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36152&quot;&gt;the man pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fanzier&quot;&gt;@fanzier&lt;&#x2F;a&gt; fixed a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36165&quot;&gt;typo in &lt;code class=&quot;highlighter-rouge&quot;&gt;PartialOrd &lt;&#x2F;code&gt; docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wdv4758h&quot;&gt;@wdv4758h&lt;&#x2F;a&gt; changed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36169&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rustc::plugin&lt;&#x2F;code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;rustc_plugin&lt;&#x2F;code&gt; in a doc comment&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; explained &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35418&quot;&gt;why &lt;code class=&quot;highlighter-rouge&quot;&gt;Box&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rc&lt;&#x2F;code&gt;&#x2F;&lt;code class=&quot;highlighter-rouge&quot;&gt;Arc&lt;&#x2F;code&gt; methods do not take &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35786&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Path&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;PathBuf&lt;&#x2F;code&gt; docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36231&quot;&gt;where to copy &lt;code class=&quot;highlighter-rouge&quot;&gt;config.toml.example&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;skade&quot;&gt;@skade&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36099&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;try!&lt;&#x2F;code&gt;‚Äôs error conversion behavior&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 7th of September 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 19</title>
		<published>2016-08-29T00:00:00+00:00</published>
		<updated>2016-08-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-19-r-bzbytfjfvdyo8jiavrn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-19-r-bzbytfjfvdyo8jiavrn/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news-getting-a-bit-old-but-still-gold&quot;&gt;Latest news (getting a bit old but still gold!)&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35810&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn*&lt;&#x2F;code&gt; traits&lt;&#x2F;a&gt;, demonstrated that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35793&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RHS != Self&lt;&#x2F;code&gt; use cases for &lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sub&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35863&quot;&gt;evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Shl&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Shr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation &lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35890&quot;&gt;a panic example to std::from_utf8_unchecked&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35895&quot;&gt;documentation in cell mod&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35845&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;core::result::IntoIter&lt;&#x2F;code&gt; is created&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Stebalien&quot;&gt;@Stebalien&lt;&#x2F;a&gt; clarified&#x2F;fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35862&quot;&gt;formatting docs concerning fmt::Result&#x2F;fmt::Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36078&quot;&gt;associated consts in search results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36083&quot;&gt;missing urls into convert module&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35786&quot;&gt;Path and PathBuf docs&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week (too), I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crypto-universe&quot;&gt;@crypto-universe&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35835&quot;&gt;E0426&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35835&quot;&gt;E0426&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36044&quot;&gt;E0450&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;0xmohit&quot;&gt;@0xmohit&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35989&quot;&gt;E0453&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35985&quot;&gt;E0277&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35961&quot;&gt;E0445 and E0454&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;creativcoder&quot;&gt;@creativcoder&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35939&quot;&gt;E0195&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shyaamsundhar&quot;&gt;@shyaamsundhar&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35858&quot;&gt;E0435, E0437 and E0438&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyrias&quot;&gt;@kyrias&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35841&quot;&gt;E0424&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Others contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35936&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Div&lt;&#x2F;code&gt; example with something more evocative of division&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35881&quot;&gt;example for &lt;code class=&quot;highlighter-rouge&quot;&gt;Rc::would_unwrap&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35878&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;println!&lt;&#x2F;code&gt; statements with &lt;code class=&quot;highlighter-rouge&quot;&gt;assert!&lt;&#x2F;code&gt;ions in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35876&quot;&gt;more evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Sub&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;SubAssign&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35864&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Index&lt;&#x2F;code&gt; example with something more evocative of indexing&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35861&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rem&lt;&#x2F;code&gt; example with something more evocative&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35860&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mul&lt;&#x2F;code&gt; example with something more evocative of multiplication&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35809&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BitAnd&lt;&#x2F;code&gt; example with something more evocative of bitwise AND&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for misplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35867&quot;&gt;various refactorings in the rustdoc module&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CryZe&quot;&gt;@CryZe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35879&quot;&gt;‚ÄúFurthermore‚Äù Typo in String Docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alevy&quot;&gt;@alevy&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35889&quot;&gt;a minor typo in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;munyari&quot;&gt;@munyari&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35891&quot;&gt;reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;Self&lt;&#x2F;code&gt; in traits chapter in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyrias&quot;&gt;@kyrias&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35980&quot;&gt;E0094 underline&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35948&quot;&gt;trailing commas&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added new error code tests&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;36003&quot;&gt;here&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35920&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 31st of August 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Nonlinearity of Punts in American Football</title>
		<published>2016-08-23T00:00:00+00:00</published>
		<updated>2016-08-23T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/nonlinearity-of-punts-in-american-football-b-12wvdfh9mckqmmwwio/" type="text/html"/>
		<id>https://kitallis.github.io/hades/nonlinearity-of-punts-in-american-football-b-12wvdfh9mckqmmwwio/</id>
		<content type="html">&lt;p&gt;This is research I conducted at Duke University to determine the sensitivity of
final field position to punts&amp;rsquo; initial conditions in American football. Here‚Äôs
a sample figure from the paper:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;football_punts_sample_contour___default.png&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;football_punts_sample_contour___150w.png 150w,
&#x2F;media&#x2F;football_punts_sample_contour___1692w.png 1692w,
&#x2F;media&#x2F;football_punts_sample_contour___224w.png 224w,
&#x2F;media&#x2F;football_punts_sample_contour___336w.png 336w,
&#x2F;media&#x2F;football_punts_sample_contour___503w.png 503w,
&#x2F;media&#x2F;football_punts_sample_contour___754w.png 754w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 37em) 37em, 100vw&amp;quot;
style=&amp;quot;width:37em&amp;quot;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;alt=&amp;quot;Contour plot of total distance traveled as a function of initial conditions. Initial launch angle is on the horizontal axis, initial angular velocity is on the vertical axis, and distance traveled is indicated by color.&amp;quot;&amp;gt;
&amp;lt;figcaption&amp;gt;
    Total distance traveled as a function of initial conditions. Individual data
    points are indicated with small black dots. (See the conference paper for
    details.) Image created by James D. Turner, currently ¬© 2016 ASME, and licensed under
    &amp;lt;a title=&amp;quot;Creative Commons Attribution-ShareAlike 4.0 International License&amp;quot;
    href=&amp;quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-sa&#x2F;4.0&#x2F;&amp;quot;&amp;gt;CC¬†BY‚ÄëSA¬†4.0&amp;lt;&#x2F;a&amp;gt;.
&amp;lt;&#x2F;figcaption&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;figure&gt;
&lt;h2 id=&quot;publications-presentations&quot;&gt;Publications &amp;amp; Presentations&lt;&#x2F;h2&gt;
&lt;p&gt;Turner, J. D. and B. P. Mann. ‚ÄúSensitivity of Final Field Position to the Punt
Initial Conditions in American Football‚Äù. &lt;em&gt;Proceedings of the ASME 2016
International Design Engineering Technical Conferences &amp;amp; Computers and
Information in Engineering Conference.&lt;&#x2F;em&gt; Charlotte, NC, August 2016.
(&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;IDETC2016-60235.pdf&quot;&gt;conference paper (PDF)&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;football_punt_presentation.pdf&quot;&gt;presentation (PDF)&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;&#x2F;h2&gt;
&lt;p&gt;This is the abstract from the conference paper:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The starting field position is often a deciding factor in an American football
game. In the case of a defensive stop, a kick, known as a punt, is used to give
the receiving team a field position that is more advantageous to the kicking
team when possession changes. The goal of the punter is to kick the ball along
a desired flight path, where a delicate balance between the distance traveled
before impact, hang time in the air, and the distance traveled after bouncing
is favorable for the kicking team. However, the punter has only imprecise
control over the initial conditions, such as the angular velocity, linear
velocity, and orientation of the football. Due to the highly nonlinear behavior
of the football, from aerodynamic and impact forces, even small changes in
initial conditions can produce large changes in the final position of the
football, but there may be regions of initial conditions with relatively
consistent results. If punters could target such large contiguous regions of
initial conditions with desirable football paths, they could improve their
chances of successful kicks.&lt;&#x2F;p&gt;
&lt;p&gt;For nonlinear systems, basins of attraction diagrams are often used to
graphically display the initial conditions that lead to different final
attractors. In this case, the regions of initial conditions that lead to a
desirable final field position can be grouped and shown graphically. A
numerical simulation program was developed including models for aerodynamic
flight and bouncing of the irregularly shaped football. The flight model used
fourth order Runge‚ÄìKutta integration of the equations of motion of the
football, including gravitational and aerodynamic forces and moments with
empirical lift, drag, and yaw coefficients in three dimensions. The bounce
model was based on an empirical two-dimensional coefficient of restitution
model that was published in the literature. The behavior of a football in
flight and during bouncing was simulated for a range of initial angular
velocities and launch angles, and the characteristics of the flight paths were
analyzed. The characteristics of some regions of initial conditions were
relatively sensitive to small changes, while other regions were relatively
uniform. This shows that this approach, with a quantitatively accurate bounce
model, could be practically applied to develop a guide for punters to optimize
their kicks. With such a guide and sufficient practice, punters could select
and target the larger regions of initial conditions that produced desirable
behavior, which would improve their chances of successful punts.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;cite&gt;Written by James D. Turner and Brian P. Mann, currently ¬© 2016 ASME, and
licensed under &lt;a href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-nd&#x2F;4.0&#x2F;&quot;&gt;CC¬†BY‚ÄëNC‚ÄëND¬†4.0&lt;&#x2F;a&gt;.&lt;&#x2F;cite&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 18</title>
		<published>2016-08-22T00:00:00+00:00</published>
		<updated>2016-08-22T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-18-xhipg9ilia31o3pj2v9uk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-18-xhipg9ilia31o3pj2v9uk/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35810&quot;&gt;documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;Fn*&lt;&#x2F;code&gt; traits&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35809&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BitAnd&lt;&#x2F;code&gt; example with something more evocative of bitwise AND&lt;&#x2F;a&gt;, demonstrated that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35793&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RHS != Self&lt;&#x2F;code&gt; use cases for &lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Sub&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35863&quot;&gt;evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Shl&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Shr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35861&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rem&lt;&#x2F;code&gt; example with something more evocative&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35860&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mul&lt;&#x2F;code&gt; example with something more evocative of multiplication&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35864&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Index&lt;&#x2F;code&gt; example with something more evocative of indexing&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35876&quot;&gt;more evocative examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Sub&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;SubAssign&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35878&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;println!&lt;&#x2F;code&gt; statements with &lt;code class=&quot;highlighter-rouge&quot;&gt;assert!&lt;&#x2F;code&gt;ions in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35881&quot;&gt;example for &lt;code class=&quot;highlighter-rouge&quot;&gt;Rc::would_unwrap&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35880&quot;&gt;links to interesting items in &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ptr&lt;&#x2F;code&gt; documentation &lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35890&quot;&gt;a panic example to std::from_utf8_unchecked&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;F001&quot;&gt;@F001&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35895&quot;&gt;documentation in cell mod&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CryZe&quot;&gt;@CryZe&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35879&quot;&gt;‚ÄúFurthermore‚Äù Typo in String Docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alevy&quot;&gt;@alevy&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35889&quot;&gt;a minor typo in CONTRIBUTING.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;munyari&quot;&gt;@munyari&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35891&quot;&gt;reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;Self&lt;&#x2F;code&gt; in traits chapter (book)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35845&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;core::result::IntoIter&lt;&#x2F;code&gt; is created&lt;&#x2F;a&gt; and made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35867&quot;&gt;various refactorings in the rustdoc module&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Stebalien&quot;&gt;@Stebalien&lt;&#x2F;a&gt; clarified&#x2F;fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35862&quot;&gt;formatting docs concerning fmt::Result&#x2F;fmt::Error&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhod0&quot;&gt;@jhod0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34970&quot;&gt;diagnostics for rustc_metadata&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for misplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35003&quot;&gt;item types from some title pages from rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35786&quot;&gt;Path and PathBuf docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35824&quot;&gt;new error code tests&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week (too), I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trixnz&quot;&gt;@trixnz&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35831&quot;&gt;E0428&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mlayne&quot;&gt;@mlayne&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35812&quot;&gt;E0232&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pliniker&quot;&gt;@pliniker&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35804&quot;&gt;E0084&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clementmiao&quot;&gt;@clementmiao&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35780&quot;&gt;E0396&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35778&quot;&gt;E0395&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35765&quot;&gt;E0053&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crypto-universe&quot;&gt;@crypto-universe&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35756&quot;&gt;E0407&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DevShep&quot;&gt;@DevShep&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35744&quot;&gt;E0009&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;circuitfox&quot;&gt;@circuitfox&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35739&quot;&gt;E0403&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pythoneer&quot;&gt;@pythoneer&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35731&quot;&gt;E0005&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35726&quot;&gt;E0409&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35686&quot;&gt;E0375&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;knight42&quot;&gt;@knight42&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35722&quot;&gt;E0394 and E0422&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yossi-k&quot;&gt;@yossi-k&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35672&quot;&gt;E0322&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;canaltinova&quot;&gt;@canaltinova&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35671&quot;&gt;E0392&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RockyTV&quot;&gt;@RockyTV&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35670&quot;&gt;E0365&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Others contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35830&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Neg&lt;&#x2F;code&gt; example with something more evocative of negation&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35827&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Not&lt;&#x2F;code&gt; example with something more evocative&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35806&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AddAssign&lt;&#x2F;code&gt; example with something more evocative of addition&lt;&#x2F;a&gt;, demonstrated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35800&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RHS != Self&lt;&#x2F;code&gt; use cases for &lt;code class=&quot;highlighter-rouge&quot;&gt;Mul&lt;&#x2F;code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Div&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, replaced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35709&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Add&lt;&#x2F;code&gt; example with something more evocative of addition&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;terrynsun&quot;&gt;@terrynsun&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35660&quot;&gt;E0207 label to report parameter type&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CryZe&quot;&gt;@CryZe&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35663&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;No stdlib&lt;&#x2F;code&gt; and related documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crypto-universe&quot;&gt;@crypto-universe&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35770&quot;&gt;test for E0221&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ErikUggeldahl&quot;&gt;@ErikUggeldahl&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35781&quot;&gt;very minor spelling typo in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cantino&quot;&gt;@cantino&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35794&quot;&gt;minor typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wdv4758h&quot;&gt;@wdv4758h&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35818&quot;&gt;incorrect label messages for missing unsafe blocks (E0133)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35775&quot;&gt;a few doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ffi::OsStr&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35655&quot;&gt;a couple of issues with search results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35839&quot;&gt;wording in error messages&lt;&#x2F;a&gt; and moved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35732&quot;&gt;‚Äòdoesn‚Äôt live long enough‚Äô errors to labels&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35680&quot;&gt;new error code tests&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35749&quot;&gt;issue #11004&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 24th of August 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 17</title>
		<published>2016-08-15T00:00:00+00:00</published>
		<updated>2016-08-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-17-c6t3f3hzgqdmzlbimynoj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-17-c6t3f3hzgqdmzlbimynoj/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1683#issuecomment-237384575&quot;&gt;doc team RFC&lt;&#x2F;a&gt; has been merged. The rust doc team is now official! Take a look &lt;a href=&quot;https:&#x2F;&#x2F;www.rust-lang.org&#x2F;en-US&#x2F;team.html#Documentation-team&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Please take a look &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;reminder-planning-the-next-rust-doc-days&#x2F;6901&quot;&gt;to the next rust doc days planning reminder&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A new RFC has been opened: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1687&quot;&gt;Add API documentation front page styleguide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The topic to propose crates for the Rust Doc Days is still open and waiting for contributions &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhod0&quot;&gt;@jhod0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34970&quot;&gt;diagnostics for rustc_metadata&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for misplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35003&quot;&gt;item types from some title pages from rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; centered &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35682&quot;&gt;content of the generated docs&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35680&quot;&gt;new error code tests&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week, I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;munyari&quot;&gt;@munyari&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35470&quot;&gt;E0214&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35537&quot;&gt;E0038&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;garekkream&quot;&gt;@garekkream&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35524&quot;&gt;E0162&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35644&quot;&gt;E0302&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35643&quot;&gt;E0301&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hank-der-hafenarbeiter&quot;&gt;@hank-der-hafenarbeiter&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35507&quot;&gt;E0221&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35541&quot;&gt;E0045&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35536&quot;&gt;E0433&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;razielgn&quot;&gt;@razielgn&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35504&quot;&gt;E0026&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;srdja&quot;&gt;@srdja&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35530&quot;&gt;E0007 and E0008&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Vassah&quot;&gt;@Vassah&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35528&quot;&gt;E0091 and E0092&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;clementmiao&quot;&gt;@clementmiao&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35616&quot;&gt;E0067&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35615&quot;&gt;E0070&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crypto-universe&quot;&gt;@crypto-universe&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35596&quot;&gt;E0254&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shyaamsundhar&quot;&gt;@shyaamsundhar&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35586&quot;&gt;E0248, E0267 and E0268&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;circuitfox&quot;&gt;@circuitfox&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35576&quot;&gt;E0072&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35555&quot;&gt;E0128&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wdv4758h&quot;&gt;@wdv4758h&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35573&quot;&gt;E0138&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35565&quot;&gt;E0133&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukehinds&quot;&gt;@lukehinds&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35558&quot;&gt;E0253&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Limeth&quot;&gt;@Limeth&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35557&quot;&gt;E0263&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theypsilon&quot;&gt;@theypsilon&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35552&quot;&gt;E0384&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35646&quot;&gt;E0094&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Others contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;IvanUkhov&quot;&gt;@IvanUkhov&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35661&quot;&gt;a couple of typos in RawVec&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pietroalbini&quot;&gt;@pietroalbini&lt;&#x2F;a&gt;: fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35569&quot;&gt;docs typo in std::os::unix::net::SocketAddr::is_unnamed&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matthew-piziak&quot;&gt;@matthew-piziak&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35622&quot;&gt;small typos in std::convert documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cvubrugier&quot;&gt;@cvubrugier&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35620&quot;&gt;the hidden find() functions in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35597&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;str&lt;&#x2F;code&gt; calling in the doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qolop&quot;&gt;@qolop&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34941&quot;&gt;typo (privledge-&amp;gt;privilege)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35477&quot;&gt;E0132 error display&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35431&quot;&gt;new error code tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 17th of August 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Computer Cluster</title>
		<published>2016-08-10T00:00:00+00:00</published>
		<updated>2016-08-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/computer-cluster-gtroayc6jy0diogz1k22u/" type="text/html"/>
		<id>https://kitallis.github.io/hades/computer-cluster-gtroayc6jy0diogz1k22u/</id>
		<content type="html">&lt;p&gt;In my lab at &lt;a href=&quot;https:&#x2F;&#x2F;duke.edu&#x2F;&quot;&gt;Duke University&lt;&#x2F;a&gt;, we had a lot of old
computers from prior research projects that were no longer being used. I
volunteered to put them together into a cluster for the lab to use for
computationally-intensive tasks. I didn&amp;rsquo;t know anything about cluster computing
before this project, so it was a great experience learning how to put together
and use a computer cluster.&lt;&#x2F;p&gt;
&lt;p&gt;If you&amp;rsquo;re new to cluster computing and are interested in setting up your own
small computer cluster, the following overview may be helpful.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hardware-network&quot;&gt;Hardware &amp;amp; Network&lt;&#x2F;h2&gt;
&lt;p&gt;The cluster has seven x86-64 desktop computers of varying age with a range of
processors and memory capacities. They are all connected with a
single
&lt;a href=&quot;https:&#x2F;&#x2F;www.amazon.com&#x2F;gp&#x2F;product&#x2F;B001EVGIYG&#x2F;&quot;&gt;8-port unmanaged network switch&lt;&#x2F;a&gt; that
is connected to Duke&amp;rsquo;s network. This is a photograph of the cluster:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;computer_cluster_photo___default.jpg&quot;
srcset=&quot;
&lt;p&gt;&#x2F;media&#x2F;computer_cluster_photo___1000w.jpg 1000w,
&#x2F;media&#x2F;computer_cluster_photo___150w.jpg 150w,
&#x2F;media&#x2F;computer_cluster_photo___219w.jpg 219w,
&#x2F;media&#x2F;computer_cluster_photo___320w.jpg 320w,
&#x2F;media&#x2F;computer_cluster_photo___468w.jpg 468w,
&#x2F;media&#x2F;computer_cluster_photo___684w.jpg 684w&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;sizes=&amp;quot;(min-width: 32em) 32em, 100vw&amp;quot;
style=&amp;quot;width:32em&amp;quot;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;alt=&amp;quot;Photograph of seven desktop computers of different types on the floor of the lab, connected with a single network switch.&amp;quot;&amp;gt;
&amp;lt;figcaption&amp;gt;
    Photograph of the computer cluster. Image ¬© 2016 Jim Turner and licensed under
    &amp;lt;a title=&amp;quot;Creative Commons Attribution-ShareAlike 4.0 International License&amp;quot;
    href=&amp;quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-sa&#x2F;4.0&#x2F;&amp;quot;&amp;gt;CC¬†BY‚ÄëSA¬†4.0&amp;lt;&#x2F;a&amp;gt;.
&amp;lt;&#x2F;figcaption&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;figure&gt;
&lt;p&gt;Six of the computers¬†(&lt;code&gt;dsg01&lt;&#x2F;code&gt;, &lt;code&gt;dsg03&lt;&#x2F;code&gt;, &lt;code&gt;dsg04&lt;&#x2F;code&gt;, ‚Ä¶, &lt;code&gt;dsg07&lt;&#x2F;code&gt;) are
compute nodes, and the remaining one¬†(&lt;code&gt;dsg02&lt;&#x2F;code&gt;) is the login node, SLURM
controller, and file server. This is the network topology:&lt;&#x2F;p&gt;
&lt;figure&gt;
    &lt;img src=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;media&#x2F;computer_cluster_network.svg&quot; style=&quot;width:37em&quot;
    alt=&quot;The nodes are connected to a single switch. That switch is connected to Duke&#x27;s network, which is separated from the Internet by a firewall. Users can connect to Duke&#x27;s network directly or, if they are elsewhere on the Internet, through Duke&#x27;s VPN.&quot;&gt;
    &lt;figcaption&gt;
        Network topology of the cluster and users. Image ¬© 2016 Jim Turner and licensed under
        &lt;a title=&quot;Creative Commons Attribution-ShareAlike 4.0 International License&quot;
        href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-sa&#x2F;4.0&#x2F;&quot;&gt;CC¬†BY‚ÄëSA¬†4.0&lt;&#x2F;a&gt;.
    &lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;h2 id=&quot;software&quot;&gt;Software&lt;&#x2F;h2&gt;
&lt;p&gt;The hardest part of setting up the cluster was figuring out what software to
use and how to configure it. Since I was unfamiliar with cluster computing, I
strongly favored projects with good documentation that were fairly easy to set
up. I decided on the following:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.debian.org&#x2F;&quot;&gt;Debian stable&lt;&#x2F;a&gt; for the OS. It&amp;rsquo;s free software, is
reliable, and has long-term support. The Debian project also works very hard
to minimize changes to Debian stable, which reduces the work required to
administer the cluster.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gluster.org&#x2F;&quot;&gt;Gluster&lt;&#x2F;a&gt; for the shared file system (for users&amp;rsquo;
home directories).
The &lt;a href=&quot;https:&#x2F;&#x2F;gluster.readthedocs.io&#x2F;en&#x2F;latest&#x2F;&quot;&gt;Gluster documentation&lt;&#x2F;a&gt; is
pretty good, so I found it easier to set up than the alternatives. It&amp;rsquo;s also
a distributed file system, so if I need to add more storage capacity or speed
up transfer rates in the future, I can add more storage nodes.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;slurm.schedmd.com&#x2F;&quot;&gt;SLURM&lt;&#x2F;a&gt; for scheduling and resource management.
It is straightforward to set up&lt;sup class=&quot;footnote-ref&quot; id=&quot;fnref:1&quot;&gt;&lt;a rel=&quot;footnote&quot; href=&quot;#fn:1&quot;&gt;1&lt;&#x2F;a&gt;&lt;&#x2F;sup&gt;, provides all the functionality I need,
and is popular.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.mpich.org&#x2F;&quot;&gt;MPICH&lt;&#x2F;a&gt; as the MPI implementation. Supposedly, it
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.mpich.org&#x2F;mpich&#x2F;index.php&#x2F;Using_the_Hydra_Process_Manager#Resource_Managers_and_Launchers&quot;&gt;automatically detects&lt;&#x2F;a&gt;
and integrates with SLURM, but I haven&amp;rsquo;t tested this myself.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dun.github.io&#x2F;munge&#x2F;&quot;&gt;MUNGE&lt;&#x2F;a&gt; for hosts to authenticate each other
(needed for SLURM). This is easy to set up.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ganglia.info&#x2F;&quot;&gt;Ganglia&lt;&#x2F;a&gt; for historical performance monitoring. The
documentation wiki appears to no longer exist, but the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ganglia&#x2F;monitor-core&#x2F;wiki&#x2F;Ganglia-Quick-Start&quot;&gt;Ganglia quick start&lt;&#x2F;a&gt; was
sufficient to set it up.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.sphinx-doc.org&#x2F;en&#x2F;stable&#x2F;&quot;&gt;Sphinx&lt;&#x2F;a&gt; to build the documentation
for the cluster (hosted on the head node).&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;httpd.apache.org&#x2F;&quot;&gt;Apache&lt;&#x2F;a&gt; as the web server on the head node to
host the documentation and Ganglia. Debian makes setting up Apache very easy.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.openssh.com&#x2F;&quot;&gt;OpenSSH&lt;&#x2F;a&gt; for users to connect to the cluster and
transfer files with SFTP. I also set up passwordless (key-based)
authentication for all users between hosts for MPICH.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I installed additional software for users to develop and run their programs,
including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.continuum.io&#x2F;anaconda&#x2F;&quot;&gt;Miniconda&lt;&#x2F;a&gt; for the Python environment
because it&amp;rsquo;s the easiest way to get up-to-date Python packages on Debian
stable.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gcc.gnu.org&#x2F;&quot;&gt;GNU Compiler Collection (GCC)&lt;&#x2F;a&gt; for the C&#x2F;C++&#x2F;Fortran
environment.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;octave&#x2F;&quot;&gt;GNU Octave&lt;&#x2F;a&gt; as a free alternative to
MATLAB.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.mathworks.com&#x2F;products&#x2F;matlab.html&quot;&gt;MATLAB&lt;&#x2F;a&gt;, because the other
researchers in my lab use it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;&#x2F;h2&gt;
&lt;p&gt;If you&amp;rsquo;re unfamiliar with computer clusters, it&amp;rsquo;s helpful to know how they work
from the user&amp;rsquo;s perspective. This is how the small cluster I built is set up:&lt;&#x2F;p&gt;
&lt;p&gt;The user has access to his&#x2F;her home directory and the &lt;code&gt;&#x2F;tmp&lt;&#x2F;code&gt; directory on each
node. The user&amp;rsquo;s home directory is shared across the nodes with Gluster, so all
programs and input&#x2F;output files in the user&amp;rsquo;s home directory are available on
all nodes. To run a job on the cluster:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The user transfers his&#x2F;her program and input data to the login node with
SFTP.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;The user SSHes into the cluster&amp;rsquo;s login node. He&#x2F;she can run inexpensive
tasks on the login node, such as compiling small programs. However, for
computationally-intensive tasks, the user should submit a job with SLURM to
run on the compute nodes.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;On the login node, the user can use the following SLURM commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;srun&lt;&#x2F;code&gt; to run a single job and wait for it to complete,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;salloc&lt;&#x2F;code&gt; to allocate resources (primarily for an interactive job), or&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;sbatch&lt;&#x2F;code&gt; to schedule a batch job for execution.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;When the necessary resources (i.e. processors and memory) become available
on the compute nodes, SLURM starts the job on the available compute nodes.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;The user can cancel the job with &lt;code&gt;scancel&lt;&#x2F;code&gt; or check its status with
&lt;code&gt;squeue&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;If the user submitted a batch job, SLURM saves the standard output and
standard error from the job to the specified location (typically the user
would specify files in his&#x2F;her home directory). The program being run can
also save output files itself to the user&amp;rsquo;s home directory, because the
user&amp;rsquo;s home directory is transparently synchronized between the nodes with
Gluster.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;When the job is complete, the user can download the output files from the
login node with SFTP.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;configuration-management-testing&quot;&gt;Configuration Management &amp;amp; Testing&lt;&#x2F;h2&gt;
&lt;p&gt;One of my goals was to automate the installation and configuration of the
cluster as much as possible in order to simplify maintenance and enable version
control of the configuration. For installation and configuration, I&amp;rsquo;m using:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.ansible.com&#x2F;ansible&#x2F;&quot;&gt;Ansible&lt;&#x2F;a&gt; for configuration management.
Ansible is relatively simple to set up, is extensible, and works well enough
for my needs.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;&quot;&gt;Git&lt;&#x2F;a&gt; for version control of the configuration.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.debian.org&#x2F;releases&#x2F;stable&#x2F;amd64&#x2F;apb.en.html&quot;&gt;Debian preseeding&lt;&#x2F;a&gt; for the initial
installation of the OS. Unfortunately, preseeding is not well documented, but
I was successful basing the template off of &lt;a href=&quot;https:&#x2F;&#x2F;www.debian.org&#x2F;releases&#x2F;jessie&#x2F;example-preseed.txt&quot;&gt;this example&lt;&#x2F;a&gt; and the
&lt;a href=&quot;https:&#x2F;&#x2F;salsa.debian.org&#x2F;installer-team&#x2F;debian-installer&#x2F;blob&#x2F;master&#x2F;doc&#x2F;devel&#x2F;partman-auto-recipe.txt&quot;&gt;partman-auto documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;docs&#x2F;dev&#x2F;intro&#x2F;&quot;&gt;Jinja&lt;&#x2F;a&gt; for generating the preseed
files by filling a template with variables parsed from Ansible.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;&quot;&gt;GNU Make&lt;&#x2F;a&gt; for automating the build
process of the configuration and test images.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Since users could be running jobs on the cluster, I needed a way to test
changes that didn&amp;rsquo;t interfere with the actual cluster. I&amp;rsquo;m using the following
additional software to test the configuration with a network of virtual
machines on my laptop:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.packer.io&#x2F;&quot;&gt;Packer&lt;&#x2F;a&gt; to build clean Debian virtual machine images
with the preseed files.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.vagrantup.com&#x2F;&quot;&gt;Vagrant&lt;&#x2F;a&gt; to start and provision the virtual
machines with Ansible.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.virtualbox.org&#x2F;&quot;&gt;VirtualBox&lt;&#x2F;a&gt; to run the virtual machines.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;documentation-sustainability&quot;&gt;Documentation &amp;amp; Sustainability&lt;&#x2F;h2&gt;
&lt;p&gt;One of my goals when building the cluster was to make it sustainable after I
leave Duke. As a result, I automated as much of the configuration as possible
and documented everything. I&amp;rsquo;m using &lt;a href=&quot;http:&#x2F;&#x2F;www.sphinx-doc.org&#x2F;en&#x2F;stable&#x2F;&quot;&gt;Sphinx&lt;&#x2F;a&gt; for documentation, and I&amp;rsquo;m keeping the
configuration and documentation on Duke&amp;rsquo;s GitLab instance.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-resources&quot;&gt;Other Resources&lt;&#x2F;h2&gt;
&lt;p&gt;If you&amp;rsquo;d like to set up your own small cluster, the following resources may be
helpful:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The documentation for the software I listed above.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Partway through the project, I found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ajdecon&#x2F;ansible-simple-slurm-cluster&quot;&gt;ajdecon&amp;rsquo;s ansible-simple-slurm-cluster
repository&lt;&#x2F;a&gt; with
Ansible roles to set up a SLURM-based cluster. I made some different
decisions than ajdecon, but his example was really helpful as an outline of
what to do.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Many universities have documentation about their SLURM clusters; this is
helpful to learn how users interact with the cluster. For example, &lt;a href=&quot;https:&#x2F;&#x2F;portal.tacc.utexas.edu&#x2F;user-guides&#x2F;stampede&quot;&gt;UT Austin
has good documentation for their Stampede cluster&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr &#x2F;&gt;
&lt;ol&gt;
&lt;li id=&quot;fn:1&quot;&gt;To generate an initial configuration, use one of the configuration builders, which are available at &lt;code&gt;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;slurmctld&#x2F;slurm-wlm-configurator.easy.html&lt;&#x2F;code&gt; and &lt;code&gt;&#x2F;usr&#x2F;share&#x2F;doc&#x2F;slurmctld&#x2F;slurm-wlm-configurator.html&lt;&#x2F;code&gt; once you have &lt;code&gt;slurmctld&lt;&#x2F;code&gt; installed. Look at the man page for &lt;code&gt;slurm.conf(5)&lt;&#x2F;code&gt; for more information about the options.
 &lt;a class=&quot;footnote-return&quot; href=&quot;#fnref:1&quot;&gt;&lt;sup&gt;[return]&lt;&#x2F;sup&gt;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 16</title>
		<published>2016-08-08T00:00:00+00:00</published>
		<updated>2016-08-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-16-v2jlrhiv99ie8gtgmday/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-16-v2jlrhiv99ie8gtgmday/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1683#issuecomment-237384575&quot;&gt;doc team RFC&lt;&#x2F;a&gt; has entered its final comment period!&lt;&#x2F;p&gt;
&lt;p&gt;A new RFC has been opened: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1687&quot;&gt;Add API documentation front page styleguide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A topic to propose crates for the Rust Doc Days has been created &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the three big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;Error code list which need to be updated to new format&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They all need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qolop&quot;&gt;@qolop&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34941&quot;&gt;typo (privledge-&amp;gt;privilege)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhod0&quot;&gt;@jhod0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34970&quot;&gt;diagnostics for rustc_metadata&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for misplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35003&quot;&gt;item types from some title pages from rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;This week, I‚Äôll split between the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;35233&quot;&gt;new error code format&lt;&#x2F;a&gt; contributions and the others. Let‚Äôs start by the first one:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;munyari&quot;&gt;@munyari&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35468&quot;&gt;E0205&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35455&quot;&gt;E0204&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;terrynsun&quot;&gt;@terrynsun&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35467&quot;&gt;E0116&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Detegr&quot;&gt;@Detegr&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35454&quot;&gt;E0117 and E0118&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;franleplant&quot;&gt;@franleplant&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35443&quot;&gt;E0101 and E0102&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pcn&quot;&gt;@pcn&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35439&quot;&gt;E0010&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;intrepion&quot;&gt;@intrepion&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35434&quot;&gt;E0121&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;razielgn&quot;&gt;@razielgn&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35421&quot;&gt;E0225&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35370&quot;&gt;E0306&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35285&quot;&gt;E0071&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&quot;&gt;@Keats&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35419&quot;&gt;E0243 and E0244&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35372&quot;&gt;E0323, E0324 and E0325&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35319&quot;&gt;E0137&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35298&quot;&gt;E0120&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Limeth&quot;&gt;@Limeth&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35417&quot;&gt;E0131&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;silenuss&quot;&gt;@silenuss&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35413&quot;&gt;E0029&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35410&quot;&gt;E0027&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KiChjang&quot;&gt;@KiChjang&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35411&quot;&gt;E0223&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35402&quot;&gt;E0206&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mikhail-m1&quot;&gt;@mikhail-m1&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35394&quot;&gt;E0201&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TheZoq2&quot;&gt;@TheZoq2&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35380&quot;&gt;E0004&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trixnz&quot;&gt;@trixnz&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35376&quot;&gt;E0373&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35328&quot;&gt;E0062&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrabault&quot;&gt;@mrabault&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35374&quot;&gt;E0229&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oijazsh&quot;&gt;@oijazsh&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35373&quot;&gt;E0107&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;medzin&quot;&gt;@medzin&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35366&quot;&gt;E0282&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35362&quot;&gt;E0252&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35296&quot;&gt;E0178&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kc1212&quot;&gt;@kc1212&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35364&quot;&gt;E0379&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Archytaus&quot;&gt;@Archytaus&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35359&quot;&gt;E0391 and E0404&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shri3k&quot;&gt;@shri3k&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35357&quot;&gt;E0040&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35355&quot;&gt;E0046&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Tiwalun&quot;&gt;@Tiwalun&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35356&quot;&gt;E0106&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;poveda-ruiz&quot;&gt;@poveda-ruiz&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35353&quot;&gt;E0081&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaredwy&quot;&gt;@jaredwy&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35351&quot;&gt;E0069&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birryree&quot;&gt;@birryree&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35350&quot;&gt;E0368&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35289&quot;&gt;E0060 and E0061&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nickmass&quot;&gt;@nickmass&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35333&quot;&gt;E0055&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;circuitfox&quot;&gt;@circuitfox&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35326&quot;&gt;E0119&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35299&quot;&gt;E0110&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35266&quot;&gt;E0109&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sciyoshi&quot;&gt;@sciyoshi&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35318&quot;&gt;E0124&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yossi-k&quot;&gt;@yossi-k&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35314&quot;&gt;E0185 and E0186&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35291&quot;&gt;E0079&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;saml&quot;&gt;@saml&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35297&quot;&gt;E0001&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Roybie&quot;&gt;@Roybie&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35294&quot;&gt;E0172&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35288&quot;&gt;E0166&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35264&quot;&gt;E0132&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Others contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35239&quot;&gt;doc for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::thread::park_timeout&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shantanuraj&quot;&gt;@shantanuraj&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35283&quot;&gt;wording on E0080&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apasel422&quot;&gt;@apasel422&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35182&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ffi::NulError::nul_position&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, cleaned up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35281&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::raw&lt;&#x2F;code&gt; docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35436&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::ffi::NulError::into_vec&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35175&quot;&gt;a couple &lt;code class=&quot;highlighter-rouge&quot;&gt;std::net&lt;&#x2F;code&gt; doc improvements&lt;&#x2F;a&gt;, rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35134&quot;&gt;rewrite &lt;code class=&quot;highlighter-rouge&quot;&gt;slice::chunks&lt;&#x2F;code&gt; doc example to not require printing&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35041&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;range::RangeArgument::{start,end}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35134&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slice::chunks&lt;&#x2F;code&gt; doc example to not require printing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jongiddy&quot;&gt;@jongiddy&lt;&#x2F;a&gt; provide &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35137&quot;&gt;a more explicit example of wildcard version in guessing game doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35076&quot;&gt;doc examples for FileType struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35109&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;io::Error&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35181&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35393&quot;&gt;new error codes&lt;&#x2F;a&gt; and added even more &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35363&quot;&gt;error code tests&lt;&#x2F;a&gt; and added even even more &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35274&quot;&gt;error code tests&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 10th of August 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Why hackers should track their requirements</title>
		<published>2016-08-08T00:00:00+00:00</published>
		<updated>2016-08-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/why-hackers-should-track-their-requirements-vbl15pskuj9a7jqamzsig/" type="text/html"/>
		<id>https://kitallis.github.io/hades/why-hackers-should-track-their-requirements-vbl15pskuj9a7jqamzsig/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.m.wikipedia.org&#x2F;wiki&#x2F;Software_requirements_specification&quot;&gt;‚ÄúCreating requirements‚Äù&lt;&#x2F;a&gt; 
may not be the first two words that come to mind
when you think of a hacker, but nothing could be more important. Whether
those requirements exist entirely inside the developer‚Äôs head or span multiple directories
depends on the person and the project they are working on, but all of
us create requirements if we expect the product of our efforts to look
anything like what we were intending to create. Oftentimes, the quality
of our requirements directly corelate to the quality of our product.&lt;&#x2F;p&gt;
&lt;p&gt;It is for the hacker that I developed the tool &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rst&quot;&gt;rst&lt;&#x2F;a&gt;.
It is an ultra-simple method of writing requirements and specifications so
they can be tracked throughout the lifecycle of a project.&lt;&#x2F;p&gt;
&lt;p&gt;Common developer wisdom (hacker and enterprise alike) now tells us that we 
should always be using revision control, that we should always be writing unit 
tests and that we should keep good documentation ‚Äì and we should, and there are a 
ton of great tools for doing exactly those things. However, those ‚Äúcore pillars‚Äù
of good software development miss one of the most important pieces, and that is 
writing down your requirements, creating your high level design (linked to your 
reqs), and thinking about what tests to write before you write your code.&lt;&#x2F;p&gt;
&lt;p&gt;All the tools that I have seen for this are Web&#x2F;GUI‚Äôs that are clunky and 
difficult to integrate. They are particularily ill-suited to small projects.
It doesn‚Äôt make sense to me. If we are to become good at requirements, we need
to practice for small projects so that we know what we are doing for large ones.
This problem isn‚Äôt difficult to solve: requirements are just text that
have a few basic features:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;you want to be able to name them&lt;&#x2F;li&gt;
  &lt;li&gt;you want to be able to describe them&lt;&#x2F;li&gt;
  &lt;li&gt;you want to be able to link them&lt;&#x2F;li&gt;
  &lt;li&gt;you want to be able to track their completeness&lt;&#x2F;li&gt;
  &lt;li&gt;you want to be able to revision control them&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These four goals are trivial to accomplish for a text based tool and
quite difficult to accomplish for a GUI tool. Why then are so many
requirements tracking tools GUI based?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rst&quot;&gt;rst&lt;&#x2F;a&gt; chooses to be simple instead of
complicated, while still choosing to provide features users want (i.e.
viewing requirements via the web in future releases). Creating 
requirements and specifications is something all of us should be doing 
for our projects ‚Äì wouldn‚Äôt it be great if it were easy to do?&lt;&#x2F;p&gt;
&lt;p&gt;I intend to add a ‚Äúhacker‚Äôs guide to quality‚Äù tutorial to the 
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rst&#x2F;wiki&quot;&gt;rst wiki&lt;&#x2F;a&gt; over the next couple of months.
I would highly appreciate feedback from developers all over the world about
how they address quality in their projects, and what &lt;strong&gt;rst&lt;&#x2F;strong&gt; could do to
help them.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 15</title>
		<published>2016-08-01T00:00:00+00:00</published>
		<updated>2016-08-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-15-tqv4bcybgi4hdrm1ovova/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-15-tqv4bcybgi4hdrm1ovova/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;A new RFC has been opened: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1687&quot;&gt;Add API documentation front page styleguide&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A topic to propose crates for the Rust Doc Days has been created &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;. Please take a look!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35041&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;range::RangeArgument::{start,end}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35134&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slice::chunks&lt;&#x2F;code&gt; doc example to not require printing&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jongiddy&quot;&gt;@jongiddy&lt;&#x2F;a&gt; provide &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35137&quot;&gt;a more explicit example of wildcard version in guessing game doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qolop&quot;&gt;@qolop&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34941&quot;&gt;typo (privledge-&amp;gt;privilege)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhod0&quot;&gt;@jhod0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34970&quot;&gt;diagnostics for rustc_metadata&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;@nrc&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35020&quot;&gt;rustdoc URLs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for misplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35003&quot;&gt;item types from some title pages from rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; made it clear that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35102&quot;&gt;the reference isn‚Äôt normative&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35076&quot;&gt;doc examples for FileType struct&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35109&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;io::Error&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;knight42&quot;&gt;@knight42&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35050&quot;&gt;more intuitive explanation of strings formatting&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;munyari&quot;&gt;@munyari&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35072&quot;&gt;docs for assert! and debug_assert!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vadimcn&quot;&gt;@vadimcn&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35066&quot;&gt;typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rdwilliamson&quot;&gt;@rdwilliamson&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35001&quot;&gt;HashMap‚Äôs values_mut example to use println!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abhijeetbhagat&quot;&gt;@abhijeetbhagat&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34990&quot;&gt;underscore usage&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34974&quot;&gt;VecDeque documentation to specify direction of index 0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34732&quot;&gt;DoubleEndedIterator::next_back&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; rewrote&#x2F;expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35019&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slice::split&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; rewrote &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35104&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collections::LinkedList::append&lt;&#x2F;code&gt; doc example&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35062&quot;&gt;documentation example for &lt;code class=&quot;highlighter-rouge&quot;&gt;str::Chars::as_str&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35087&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs&lt;&#x2F;code&gt; docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35009&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DirEntry&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34935&quot;&gt;HashMap Entry enums examples&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35010&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Open&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34995&quot;&gt;DirBuilder doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 3rd of August 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Wrapping callbacks without userdata</title>
		<published>2016-07-29T08:08:00-07:00</published>
		<updated>2016-07-29T08:08:00-07:00</updated>
		<link href="https://kitallis.github.io/hades/wrapping-callbacks-without-userdata-swy8fcvzhrsuoswelwag/" type="text/html"/>
		<id>https://kitallis.github.io/hades/wrapping-callbacks-without-userdata-swy8fcvzhrsuoswelwag/</id>
		<content type="html">&lt;p&gt;It‚Äôs easy to find articles describing how to wrap Rust closures to pass to C libraries that will carry a &lt;code class=&quot;highlighter-rouge&quot;&gt;void*&lt;&#x2F;code&gt; to your callback, but what can you do when no userdata value is provided? This post is based on work I‚Äôve done for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jcmoyer&#x2F;rust-lua53&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lua&lt;&#x2F;code&gt; crate&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-situation&quot;&gt;The Situation&lt;&#x2F;h2&gt;
&lt;p&gt;Let‚Äôs imagine that the C library provides an API roughly analogous to the following:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt; &lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; opaque type representing foreign Object&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;ffi_push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;We currently have a safe wrapper type named &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;&#x2F;code&gt; and we want to enable consumers of our library to push callbacks onto it without writing any &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;&#x2F;code&gt; code, but how can we do that without a userdata pointer? While the lack of a userdata pointer prevents us from carrying any state with the callback (ruling out closures), it‚Äôs still possible to wrap ordinary functions.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;&#x2F;h2&gt;
&lt;p&gt;First, let‚Äôs think about the signature we want the users of our wrapper to conform to. The FFI demands &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe extern fn(*mut ffi_Object) -&amp;gt; u32&lt;&#x2F;code&gt;, but we want to allow such callbacks to be totally safe. This means no &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;&#x2F;code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;extern&lt;&#x2F;code&gt;, and we should replace &lt;code class=&quot;highlighter-rouge&quot;&gt;*mut ffi_Object&lt;&#x2F;code&gt; with a safe analogue. Since the callback does not take ownership, this is &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;mut Object&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now we‚Äôre going to need to define a function that converts from our safe signature to the unsafe signature. At first, you might try to write:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;but this leads to a dead end. A &lt;code class=&quot;highlighter-rouge&quot;&gt;fn(&amp;amp;mut Object) -&amp;gt; u32&lt;&#x2F;code&gt; is a function pointer, a runtime value, state! Exactly what we can‚Äôt pack into an &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Callback&lt;&#x2F;code&gt;. We‚Äôre going to need to build, at compile time, a different &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Callback&lt;&#x2F;code&gt; for each function we‚Äôre ever passed. Luckily, Rust has the useful property that each function gets its own unique type, so we can use a type parameter - our &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap_callback&lt;&#x2F;code&gt; function is going to be generic. These unique types can‚Äôt be written directly, so let‚Äôs add a dummy parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;_: F&lt;&#x2F;code&gt; to allow inference to fill them in for us.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Now that we know the function‚Äôs signature, what about its contents? First, let‚Äôs not forget to reintroduce a restriction we just accidentally loosened: this signature accepts closures with state, and it‚Äôs not possible for us to support that. Let‚Äôs be sure we‚Äôre being passed ordinary functions (or equally-valid stateless closures):&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;k&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;size_of&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;It‚Äôs a little unfortunate that we have to runtime assert this and can‚Äôt check it at compile time, but it‚Äôs the best we can do in current Rust. Make sure this requirement is displayed in your library‚Äôs documentation.&lt;&#x2F;p&gt;
&lt;p&gt;Alright, now what? Well, we need to define a function with the signature demanded by &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Callback&lt;&#x2F;code&gt;. Unlike &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap_callback&lt;&#x2F;code&gt;, which accepts a function as a type parameter and returns an &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Callback&lt;&#x2F;code&gt;, this function will accept the same and &lt;em&gt;be&lt;&#x2F;em&gt; an &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Callback&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;First, let‚Äôs convert our &lt;code class=&quot;highlighter-rouge&quot;&gt;*mut ffi_Object&lt;&#x2F;code&gt; into a safe &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;&#x2F;code&gt; we can use:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;from_ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Now we need to obtain a value of type &lt;code class=&quot;highlighter-rouge&quot;&gt;F&lt;&#x2F;code&gt; in order to call it. We just asserted that &lt;code class=&quot;highlighter-rouge&quot;&gt;F&lt;&#x2F;code&gt; is zero-sized, so there‚Äôs exactly one possible value, but the compiler doesn‚Äôt know that. We‚Äôll have to unsafely construct that value somehow - probably the simplest way is &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;std&#x2F;mem&#x2F;fn.zeroed.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mem::zeroed&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;. Then, we‚Äôre going to call that function with a reference to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;&#x2F;code&gt;, and save the result:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F;           | generate value ||  call it  |&lt;&#x2F;span&gt;
		&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;zeroed&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Lastly, since our &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;&#x2F;code&gt; is an owned type, we need to avoid dropping it, then return the result we just generated. A future post will cover how to handle this in a less risky way.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&lt;span class=&quot;nn&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;forget&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
		&lt;span class=&quot;n&quot;&gt;result&lt;&#x2F;span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Now we‚Äôre back in &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap_callback&lt;&#x2F;code&gt;, ready to return the function satisfying &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_Closure&lt;&#x2F;code&gt; we just built:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;nn&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;And that‚Äôs it! Using it is simple, and as we hoped, contains no use of &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;push_our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
	&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Depending on your needs, you can make &lt;code class=&quot;highlighter-rouge&quot;&gt;wrap_callback&lt;&#x2F;code&gt; public or use it internally.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;full-example&quot;&gt;Full Example&lt;&#x2F;h2&gt;
&lt;p&gt;Here‚Äôs the code in this article all put together, including a dummy version of &lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;&#x2F;code&gt; which I omitted for brevity. If you want to experiment, you can use this code on the &lt;a href=&quot;https:&#x2F;&#x2F;play.rust-lang.org&#x2F;?gist=62b88ad266c9264f4dcf362a98033e18&amp;amp;version=stable&quot;&gt;Rust Playground&lt;&#x2F;a&gt;. I‚Äôm interested in feedback and can accept it by email or the comments section of wherever you found this post.&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;allow&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;non_camel_case_types&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; The Situation&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&lt;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;ffi_push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Dummy wrapper&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; initialize ffi_Object here&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;std&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;null_mut&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;from_ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;nf&quot;&gt;ffi_push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;py&quot;&gt;.ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;cb&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Drop&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;drop&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; destroy ffi_Object here&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; The Solution&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;Fn&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;size_of&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;&#x2F;span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;code&gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;unsafe&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;extern&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;fn&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;wrapped&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;F&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;Fn&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;amp;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;mut&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;Object&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;-&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;u32&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;ptr&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;:&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;*&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;mut&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;ffi_Object&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;)&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;-&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nb&amp;quot;&amp;gt;u32&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;{&amp;lt;&#x2F;span&amp;gt;
	&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;let&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;mut&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;object&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;=&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;Object&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;from_ptr&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;ptr&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;);&amp;lt;&#x2F;span&amp;gt;
	&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;let&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;result&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;=&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;mem&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;transmute&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;_&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;,&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;amp;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;F&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;amp;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;())(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;amp;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;k&amp;quot;&amp;gt;mut&amp;lt;&#x2F;span&amp;gt; &amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;object&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;);&amp;lt;&#x2F;span&amp;gt;
	&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;mem&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;nf&amp;quot;&amp;gt;forget&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;(&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;object&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;);&amp;lt;&#x2F;span&amp;gt;
	&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;result&amp;lt;&#x2F;span&amp;gt;
&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;}&amp;lt;&#x2F;span&amp;gt;

&amp;lt;span class=&amp;quot;nn&amp;quot;&amp;gt;wrapped&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;p&amp;quot;&amp;gt;::&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;lt;&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;n&amp;quot;&amp;gt;F&amp;lt;&#x2F;span&amp;gt;&amp;lt;span class=&amp;quot;o&amp;quot;&amp;gt;&amp;amp;gt;&amp;lt;&#x2F;span&amp;gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Usage&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;addendum-safer-less-usable&quot;&gt;Addendum: Safer, Less Usable&lt;&#x2F;h2&gt;
&lt;p&gt;If you‚Äôre not satisfied with the runtime assert, it can be eliminated if you‚Äôre willing to sacrifice usability:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Definition&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;trait&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Callback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Callback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Callback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;unsafe&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;extern&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Callback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;ffi_Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;from_ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;nn&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;nn&quot;&gt;mem&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;forget&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;nn&quot;&gt;wrapped&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;c&quot;&gt;&#x2F;&#x2F; Usage&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;OurCallback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;impl&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Callback&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;OurCallback&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;nb&quot;&gt;u32&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;push_our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nn&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;OurCallback&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Thanks to Lalaland on &lt;code class=&quot;highlighter-rouge&quot;&gt;#rust&lt;&#x2F;code&gt; for this suggestion.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;addendum-the-past&quot;&gt;Addendum: The Past&lt;&#x2F;h2&gt;
&lt;p&gt;There was once a time when those unique per-function types we made use of were not zero-sized! This was just an implementation flaw and has since been resolved, but it was possible to work around it using closures that captured no state, and &lt;em&gt;were&lt;&#x2F;em&gt; zero-sized:&lt;&#x2F;p&gt;
&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;push_our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;&#x2F;span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;&#x2F;span&gt;
	&lt;span class=&quot;n&quot;&gt;object&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;.push_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;wrap_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(|&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;our_callback&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;&#x2F;span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 14</title>
		<published>2016-07-25T00:00:00+00:00</published>
		<updated>2016-07-25T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-14-w5ann-zgrrkzljchozgzs/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-14-w5ann-zgrrkzljchozgzs/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;A topic to propose crates for the Rust Doc Days has been created &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;call-for-proposals-for-next-rust-doc-days-crates&#x2F;6685&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;qolop&quot;&gt;@qolop&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34941&quot;&gt;typo (privledge-&amp;gt;privilege)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jhod0&quot;&gt;@jhod0&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34970&quot;&gt;diagnostics for rustc_metadata&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;abhijeetbhagat&quot;&gt;@abhijeetbhagat&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34990&quot;&gt;underscore usage&lt;&#x2F;a&gt; and updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34974&quot;&gt;VecDeque documentation to specify direction of index 0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rdwilliamson&quot;&gt;@rdwilliamson&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35001&quot;&gt;HashMap‚Äôs values_mut example to use println!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nrc&quot;&gt;@nrc&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35020&quot;&gt;rustdoc URLs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34732&quot;&gt;DoubleEndedIterator::next_back&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35003&quot;&gt;item types from some title pages from rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; rewrote&#x2F;expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35019&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;slice::split&lt;&#x2F;code&gt; doc examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35012&quot;&gt;formatting generation for rustdoc code examples&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35009&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DirEntry&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34995&quot;&gt;DirBuilder doc examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34935&quot;&gt;HashMap Entry enums examples&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;35010&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Open&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mark-buer&quot;&gt;@mark-buer&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34895&quot;&gt;rustdoc reference to &lt;code class=&quot;highlighter-rouge&quot;&gt;walk_dir&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wettowelreactor&quot;&gt;@wettowelreactor&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34977&quot;&gt;some typos in char.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; rewrote&#x2F;expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34911&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::set_len&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34988&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;slice::windows&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34930&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::{as_slice,as_mut_slice}&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34875&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;std::slice&lt;&#x2F;code&gt; structs originate from&lt;&#x2F;a&gt; and partially &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34853&quot;&gt;rewrote&#x2F;expanded &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::truncate&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xitep&quot;&gt;@xitep&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34880&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.enumerate()&lt;&#x2F;code&gt; example self-explanatory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34884&quot;&gt;{String,Vec}::from_raw_parts documentation&lt;&#x2F;a&gt;.
 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34921&quot;&gt;Fix unwanted top margin for toggle wrapper in rustdoc CSS&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34919&quot;&gt;doc for btree_map types&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34976&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BuildHasher&lt;&#x2F;code&gt; examples&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34975&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RandomState&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34855&quot;&gt;examples for VecDeque&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34854&quot;&gt;examples for LinkedList&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 27th of July 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 13</title>
		<published>2016-07-18T00:00:00+00:00</published>
		<updated>2016-07-18T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-13-sg1i-6dcfqwysazyoc6nm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-13-sg1i-6dcfqwysazyoc6nm/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1574&quot;&gt;‚ÄúMore api documentation conventions‚Äù RFC&lt;&#x2F;a&gt; has been merged!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34732&quot;&gt;DoubleEndedIterator::next_back&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;shepmaster&quot;&gt;@shepmaster&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34884&quot;&gt;{String,Vec}::from_raw_parts documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;xitep&quot;&gt;@xitep&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34880&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.enumerate()&lt;&#x2F;code&gt; example self-explanatory&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34875&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;std::slice&lt;&#x2F;code&gt; structs originate from&lt;&#x2F;a&gt; and partially &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34853&quot;&gt;rewrote&#x2F;expanded &lt;code class=&quot;highlighter-rouge&quot;&gt;Vec::truncate&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34855&quot;&gt;examples for VecDeque&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34854&quot;&gt;examples for LinkedList&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34752&quot;&gt;methods in seach results in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexandermerritt&quot;&gt;@alexandermerritt&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34745&quot;&gt;docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;clone_from_slice&lt;&#x2F;code&gt; consistent with &lt;code class=&quot;highlighter-rouge&quot;&gt;copy_from_slice&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;izgzhen&quot;&gt;@izgzhen&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34733&quot;&gt;arc doc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidko&quot;&gt;@davidko&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34770&quot;&gt;a few typos in The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glandium&quot;&gt;@glandium&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34777&quot;&gt;a mention to the fact that writeln! and println! always use LF&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wuranbo&quot;&gt;@wuranbo&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34799&quot;&gt;ffi referenced rust-snappy which couldn‚Äôt compile&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34818&quot;&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vec&lt;&#x2F;code&gt; structs originate from&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34737&quot;&gt;various &lt;code class=&quot;highlighter-rouge&quot;&gt;std::process&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34794&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::process::ExitStatus::success&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; fixed up &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34838&quot;&gt;documentation around no_std&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made a few doc &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr%20is%3Aclosed%2034849%2034848&quot;&gt;fixes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34804&quot;&gt;examples for FpCategory&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34637&quot;&gt;libsyntax error code explanations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 20th of July 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 12</title>
		<published>2016-07-11T00:00:00+00:00</published>
		<updated>2016-07-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-12-scnrbwiysgt-iiuewxyf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-12-scnrbwiysgt-iiuewxyf/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;In the last team meeting, we decided that the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1574&quot;&gt;RFC ‚ÄúMore api documentation conventions‚Äù&lt;&#x2F;a&gt; was ready to get merged. We now wait for the core team confirmation.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;a specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34637&quot;&gt;libsyntax error code explanations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexandermerritt&quot;&gt;@alexandermerritt&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34745&quot;&gt;docs for clone_from_slice consistent with copy_from_slice&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ubsan&quot;&gt;@ubsan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34609&quot;&gt;more docs to std::mem::transmute&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34461&quot;&gt;ABI string docs in reference.md&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34461&quot;&gt;ABI string docs in reference.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rdotdk&quot;&gt;@rdotdk&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34615&quot;&gt;a cargo doc link&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34619&quot;&gt;a broken markdown link in README&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34709&quot;&gt;primitive integers documentation&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34717&quot;&gt;an unnecessarily mutable reference in doc example&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34612&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;io::Error::from_raw_os_error&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Xmasreturns&quot;&gt;@Xmasreturns&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34602&quot;&gt;glossary.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaredmanning&quot;&gt;@jaredmanning&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34625&quot;&gt;spacing in for loop enumeration example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sylvestre&quot;&gt;@sylvestre&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34626&quot;&gt;typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34732&quot;&gt;DoubleEndedIterator::next_back&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34750&quot;&gt;examples for std::Error module&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34749&quot;&gt;std::any module doc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34736&quot;&gt;missing examples for std::cell types&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34685&quot;&gt;an invalid CSS rule for doc titles&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34740&quot;&gt;boxed docs&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34725&quot;&gt;slice docs&lt;&#x2F;a&gt;. fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34659&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::path::Path::file_name()&lt;&#x2F;code&gt; doc&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34723&quot;&gt;an useless doc comment for slice&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34688&quot;&gt;DoubleEndedIterator examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;llogiq&quot;&gt;@llogiq&lt;&#x2F;a&gt; improved the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34521&quot;&gt;internal documentation of HIR&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 13th of July 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 11</title>
		<published>2016-07-04T00:00:00+00:00</published>
		<updated>2016-07-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-11-3wyw27jganxmnd1jc5axj/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-11-3wyw27jganxmnd1jc5axj/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;In the last team meeting (renamed ‚Äúschrodinger‚Äôs doc meeting‚Äù, thanks for the idea &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt;!), we mainly talked about The Rust Doc Days. The feedback is globally good but I‚Äôll let read the great &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;07&#x2F;rust-doc-days-follow-up&#x2F;&quot;&gt;post&lt;&#x2F;a&gt; that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;peschkaj&quot;&gt;@peschkaj&lt;&#x2F;a&gt; wrote about it.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits in rustdoc&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sylvestre&quot;&gt;@sylvestre&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34626&quot;&gt;typos&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaredmanning&quot;&gt;@jaredmanning&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34625&quot;&gt;spacing in for loop enumeration example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Xmasreturns&quot;&gt;@Xmasreturns&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34602&quot;&gt;glossary.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34619&quot;&gt;broken markdown link in README&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34612&quot;&gt;doc examples for &lt;code class=&quot;highlighter-rouge&quot;&gt;io::Error::from_raw_os_error&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rdotdk&quot;&gt;@rdotdk&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34615&quot;&gt;cargo doc link&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34520&quot;&gt;UnsafeCell docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ubsan&quot;&gt;@ubsan&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34609&quot;&gt;more docs to std::mem::transmute&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34461&quot;&gt;ABI string docs in reference.md&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34461&quot;&gt;ABI string docs in reference.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34637&quot;&gt;libsyntax error codes explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jupp0r&quot;&gt;@jupp0r&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34540&quot;&gt;code example for try!&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonmarkprice&quot;&gt;@jonmarkprice&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34532&quot;&gt;small grammatical and stylistic edits to The Book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tatsuya6502&quot;&gt;@tatsuya6502&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34442&quot;&gt;links in Ownership section of the book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34462&quot;&gt;example with leading zeros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34475&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::path::Component&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34524&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::io::sink&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34518&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::io::repeat&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34517&quot;&gt;a minor rewrite of &lt;code class=&quot;highlighter-rouge&quot;&gt;std::io::empty&lt;&#x2F;code&gt; doc example&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34406&quot;&gt;example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::thread::sleep&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34479&quot;&gt;inlined renamed reexports in import lists&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34513&quot;&gt;a few stripping issues in rustdoc&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34415&quot;&gt;float examples&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34477&quot;&gt;search result layout for enum variants and struct fields&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34536&quot;&gt;empty Implementations section on some module pages in rustdoc&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34105&quot;&gt;Remove Derived Implementations title&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34471&quot;&gt;E0269 explanation&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34531&quot;&gt;error codes in libsyntax&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34467&quot;&gt;new error codes and improve some explanations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 6th of July 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 10</title>
		<published>2016-06-27T00:00:00+00:00</published>
		<updated>2016-06-27T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-10-jbzbnc7qptyxu8t3fwfaa/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-10-jbzbnc7qptyxu8t3fwfaa/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The ‚Äúdoc days‚Äù event is now over. Thanks to everyone who contributed! Here is a list of the contributions:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;tempdir&#x2F;pull&#x2F;11&quot;&gt;tempdir&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;unix-socket&#x2F;pull&#x2F;26&quot;&gt;unix-socket&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;uuid&#x2F;pull&#x2F;65&quot;&gt;uuid (1)&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;uuid&#x2F;pull&#x2F;64&quot;&gt;uuid (2)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;glob&#x2F;pull&#x2F;53&quot;&gt;glob&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;rand&#x2F;pull&#x2F;106&quot;&gt;rand&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;rustc-serialize&#x2F;pull&#x2F;153&quot;&gt;rustc-serialize&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tatsuya6502&quot;&gt;@tatsuya6502&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34442&quot;&gt;links in Ownership section of the book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ubsan&quot;&gt;@ubsan&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34461&quot;&gt;ABI string docs in reference.md&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34462&quot;&gt;example with leading zeros&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; expanded &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34475&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;std::path::Component&lt;&#x2F;code&gt; documentation&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34406&quot;&gt;example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::thread::sleep&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34479&quot;&gt;inlined renamed reexports in import lists&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34415&quot;&gt;float examples&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34477&quot;&gt;search result layout for enum variants and struct fields&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34105&quot;&gt;Remove Derived Implementations title&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34471&quot;&gt;E0269 explanation&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34467&quot;&gt;new error codes and improve some explanations&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34469&quot;&gt;how the &lt;code class=&quot;highlighter-rouge&quot;&gt;std::path::Components&lt;&#x2F;code&gt; struct is created&lt;&#x2F;a&gt;, indicated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34438&quot;&gt;how the &lt;code class=&quot;highlighter-rouge&quot;&gt;JoinHandle&lt;&#x2F;code&gt; struct is created&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34410&quot;&gt;doc parameters formatting&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34465&quot;&gt;doc example for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::thread::Builder::name&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34468&quot;&gt;hyperlinks to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::fs&lt;&#x2F;code&gt; functions from &lt;code class=&quot;highlighter-rouge&quot;&gt;std::path&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liigo&quot;&gt;@liigo&lt;&#x2F;a&gt; updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34378&quot;&gt;rustc-ux-guidelines&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34379&quot;&gt;E0425 explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynicaldevil&quot;&gt;@cynicaldevil&lt;&#x2F;a&gt; modified E0220 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34364&quot;&gt;to show error messages for more general cases&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34372&quot;&gt;more types to the rustdoc sidebar&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34439&quot;&gt;panic caused by doc(hidden) trait methods&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34387&quot;&gt;a couple of issues with src links to external crates&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34401&quot;&gt;error code flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 29th of June 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 9</title>
		<published>2016-06-21T00:00:00+00:00</published>
		<updated>2016-06-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-9-4ldujzsfvawyktdr-hdar/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-9-4ldujzsfvawyktdr-hdar/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1567&quot;&gt;Normalization for long error codes explanations&lt;&#x2F;a&gt; RFC has been accepted!&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1574&quot;&gt;More api documentation conventions&lt;&#x2F;a&gt; has entered its final comment period!&lt;&#x2F;p&gt;
&lt;p&gt;The ‚Äúdoc days‚Äù event is now set for the 24th and 25th of June! Any contribution is very welcome. You can find more information &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;06&#x2F;announcing-rust-doc-days&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;There‚Äôs now a call for participation to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;display all methods of a type, even those from implicit traits&lt;&#x2F;a&gt;. This is a great way to help users find everything that a type can do. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34105&quot;&gt;Remove Derived Implementations title&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34372&quot;&gt;more types to the rustdoc sidebar&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34401&quot;&gt;error code flags&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34242&quot;&gt;explanation for E0453&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;frewsxcv&quot;&gt;@frewsxcv&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34313&quot;&gt;example in docs for &lt;code class=&quot;highlighter-rouge&quot;&gt;std::thread::panicking&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34314&quot;&gt;mis-named binding &amp;amp; remove not needed &lt;code class=&quot;highlighter-rouge&quot;&gt;mut&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fbergr&quot;&gt;@fbergr&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34259&quot;&gt;a typo&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34245&quot;&gt;redirect pages for renamed reexports&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34335&quot;&gt;short summaries to btree modules&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34292&quot;&gt;stability notices to impl items&lt;&#x2F;a&gt;, improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34263&quot;&gt;IP reserved address docs&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34245&quot;&gt;redirect pages for renamed reexports in rustdoc&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34232&quot;&gt;inline for &lt;code class=&quot;highlighter-rouge&quot;&gt;#[doc(hidden)] pub use&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34234&quot;&gt;invalid inlining&lt;&#x2F;a&gt;, removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34342&quot;&gt;unused E0406 and unused functions&lt;&#x2F;a&gt; and implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34186&quot;&gt;the error code checker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 22th of June 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 8</title>
		<published>2016-06-13T00:00:00+00:00</published>
		<updated>2016-06-13T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-8-ctzm-jbszxzwsgu-hclq8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-8-ctzm-jbszxzwsgu-hclq8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The ‚Äúdoc days‚Äù event is now set for the 24th and 25th of June! Any contribution is very welcome. You can find more information &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;06&#x2F;announcing-rust-doc-days&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;call-for-participation&quot;&gt;Call for participation&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;33772&quot;&gt;following issue&lt;&#x2F;a&gt; (a really important one!) is blocked for the moment. Any help on it would be very appreciated!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34105&quot;&gt;Remove Derived Implementations title&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34245&quot;&gt;redirect pages for renamed reexports&lt;&#x2F;a&gt; and removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34232&quot;&gt;inline for &lt;code class=&quot;highlighter-rouge&quot;&gt;#[doc(hidden)] pub use&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynicaldevil&quot;&gt;@cynicaldevil&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34230&quot;&gt;explanation for E0406&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34242&quot;&gt;explanation for E0453&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33935&quot;&gt;invalid trait generation in rustdoc&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34234&quot;&gt;invalid inlining&lt;&#x2F;a&gt; and implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34186&quot;&gt;the error code checker&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;m-decoster&quot;&gt;@m-decoster&lt;&#x2F;a&gt; added explanations for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34133&quot;&gt;E0503 and E0508&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hoodie&quot;&gt;@hoodie&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34138&quot;&gt;bool color&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34160&quot;&gt;bad spelling of ‚ÄúJon Snow‚Äù and ‚ÄúNight‚Äôs Watch‚Äù&lt;&#x2F;a&gt;. (Damn! It was a close call!!)&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MichaelNecio&quot;&gt;@MichaelNecio&lt;&#x2F;a&gt; noted that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34125&quot;&gt;shadowing never destroys a value&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matklad&quot;&gt;@matklad&lt;&#x2F;a&gt; simplified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34145&quot;&gt;wording&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;withoutboats&quot;&gt;@withoutboats&lt;&#x2F;a&gt; corrected &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33645&quot;&gt;the docs on str::trim_matches&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34161&quot;&gt;markdown formatting error of E0277, E0310 and E0502&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34068&quot;&gt;rustdoc static and const generation of redirect pages&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34165&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;char::to_{lower,upper}case&lt;&#x2F;code&gt; examples&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 15th of June 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Software Development Best Practices for the Average Developer</title>
		<published>2016-06-10T00:00:00+00:00</published>
		<updated>2016-06-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/software-development-best-practices-for-the-average-developer-rvkz75jqsvxxijqo7w7fr/" type="text/html"/>
		<id>https://kitallis.github.io/hades/software-development-best-practices-for-the-average-developer-rvkz75jqsvxxijqo7w7fr/</id>
		<content type="html">&lt;p&gt;It is hard to make good software. For a project to be successful, every team member must
bring quality with the work they do. Quality is an elusive attribute, gotten through some
combination of knowledge, discipline, tooling and planning.&lt;&#x2F;p&gt;
&lt;p&gt;It feels as though the ease of developing quality software has been going up. Powerful tools
and methodologies like git, unit-testing, agile and others have significantly increased
the productivity and quality of the work done by developers. By providing powerful revision
control tied with short testing cycles, it is much easier to develop software which meets
the requirements and is robust even with changing requirements.&lt;&#x2F;p&gt;
&lt;p&gt;There is an enourmous gap, however, in current software development practices, and that is
an almost complete failure to adhere to and develop tools for actually following best practices ‚Äì
by which I mean the process of requirements gathering, developing detailed design specifications,
risk analysis and test design.&lt;&#x2F;p&gt;
&lt;p&gt;I blame this, primarily, on the almost complete lack of tools for &lt;em&gt;developers&lt;&#x2F;em&gt; to use to meet 
these needs. Most developers depend on writing their thoughts down on a wiki, including them
in code documentation or other such unreliable and untrackable means. Sure, there is some
expensive proprietary software that might help, but non of it seems to be designed for those
who hack at code in their day to day. In other words, none of it seems to be designed for
the people who are actually developing software.&lt;&#x2F;p&gt;
&lt;p&gt;In the same way that writing tests can help you write better code, writing and tracking your
requirements, specifications and test-designs can help you be a better software developer.
But in order to become better at following best practicies, you need to apply them
and see their value in every project you work on ‚Äì from the smallest personal project to the largest
project involving a team or community of people.&lt;&#x2F;p&gt;
&lt;p&gt;That is why I have decided to create &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;rsk&quot;&gt;rsk&lt;&#x2F;a&gt;, an open source
requirements tracking tool made for developers. The hope is that by creating a simple and highly
scalable tool which uses commands and formats developers are already familiar with,
developers will be able to easily follow design best-practices as often as they follow
unit testing best-practices ‚Äì and they will get at least as much value from doing so.&lt;&#x2F;p&gt;
&lt;p&gt;Although I am fairly new to software development and even newer to quality, it is my intent
to create a wiki which both explains how to use this tool as well as educating the average
software developer about the usefullness of requirements gathering and detailed design.
My hope is that all projects (especially open source) can be well designed and that progress, 
new features and completeness can be easily tracked by anyone using a command line tool that 
is easy to become familiar with.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Note: &lt;strong&gt;rsk&lt;&#x2F;strong&gt; is still in pre-alpha, and is not considered usable. This blog post is about
why I am writing rsk.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 7</title>
		<published>2016-06-06T00:00:00+00:00</published>
		<updated>2016-06-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-7-k6einqg7mzkz2jo6hk4ur/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-7-k6einqg7mzkz2jo6hk4ur/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The ‚Äúdoc days‚Äù event is now set for the 24th and 25th of June! Any contribution is very welcome. You can find more information &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;06&#x2F;announcing-rust-doc-days&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-for-merge&quot;&gt;Waiting for merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33935&quot;&gt;invalid trait generation in rustdoc&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cristianoliveira&quot;&gt;@cristianoliveira&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33920&quot;&gt;E0174 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33955&quot;&gt;explanation for E0429&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oconnor663&quot;&gt;@oconnor663&lt;&#x2F;a&gt; documented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33993&quot;&gt;that Files close themselves automatically&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ollie27&quot;&gt;@ollie27&lt;&#x2F;a&gt; removed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34045&quot;&gt;generation of empty files for stripped items&lt;&#x2F;a&gt; and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34021&quot;&gt;a few links in the book&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33915&quot;&gt;new error code tests&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;34014&quot;&gt;E0165 code examples&lt;&#x2F;a&gt; and improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33878&quot;&gt;help message for E0425&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 8th of June 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Pose</title>
		<published>2016-06-04T16:29:38+00:00</published>
		<updated>2016-06-04T16:29:38+00:00</updated>
		<link href="https://kitallis.github.io/hades/pose-mbastnzcsqm523bqsoipt/" type="text/html"/>
		<id>https://kitallis.github.io/hades/pose-mbastnzcsqm523bqsoipt/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 6</title>
		<published>2016-05-29T00:00:00+00:00</published>
		<updated>2016-05-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-6-eenvefwi8es0rj-bjaz-f/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-6-eenvefwi8es0rj-bjaz-f/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1567&quot;&gt;Normalization for long error codes explanations RFC&lt;&#x2F;a&gt; is still in its final comment period!&lt;&#x2F;p&gt;
&lt;p&gt;The ‚Äúdoc days‚Äù are still in the center of our last meetings. More information will come soon!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;waiting-merge&quot;&gt;Waiting merge&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zackmdavis&quot;&gt;@zackmdavis&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33955&quot;&gt;explanation for E0429&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;estebank&quot;&gt;@estebank&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33922&quot;&gt;specific error message for missplaced doc comments&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cristianoliveira&quot;&gt;@cristianoliveira&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33920&quot;&gt;E0174 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33935&quot;&gt;invalid trait generation in rustdoc&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33915&quot;&gt;new error code tests&lt;&#x2F;a&gt; and  improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33878&quot;&gt;help message for E0425&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;oli-obk&quot;&gt;@oli-obk&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33867&quot;&gt;display for enum variant fields in docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kennytm&quot;&gt;@kennytm&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33958&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fs::read_dir()&lt;&#x2F;code&gt; example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ophirr33&quot;&gt;@Ophirr33&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33893&quot;&gt;examples&#x2F;docs to split in str.rs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33865&quot;&gt;E0084&lt;&#x2F;a&gt;, , added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33866&quot;&gt;new error code tests&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33829&quot;&gt;invalid background color in stability elements&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33793&quot;&gt;compile_fail tag&lt;&#x2F;a&gt; and also added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33912&quot;&gt;E0132&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33913&quot;&gt;E0133&lt;&#x2F;a&gt; and a few &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33914&quot;&gt;others&lt;&#x2F;a&gt; errors explanation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 1st of June 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org. Feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 5</title>
		<published>2016-05-21T00:00:00+00:00</published>
		<updated>2016-05-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-5-kzbdohlarctrw-hq5xobg/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-5-kzbdohlarctrw-hq5xobg/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And of course, don‚Äôt forget to look at the docs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;&quot;&gt;Stable&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;beta&#x2F;&quot;&gt;Beta&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;doc.rust-lang.org&#x2F;nightly&#x2F;&quot;&gt;Nightly&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1567&quot;&gt;Normalization for long error codes explanations RFC&lt;&#x2F;a&gt; entered its final comment period!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pnkfelix&quot;&gt;@pnkfelix&lt;&#x2F;a&gt; proposed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33675#issuecomment-219609913&quot;&gt;to rewrite all the code examples to be song of fire and internal-compiler-error themed&lt;&#x2F;a&gt;. I think we‚Äôll try to put it in place! :p&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;We had a busy week, thanks to all contributors!&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33679&quot;&gt;doc snippets for trait impls, with a read more link&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lqd&quot;&gt;@lqd&lt;&#x2F;a&gt; made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33705&quot;&gt;the #[stable(since)] version attribute clearer with a tooltip&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;golddranks&quot;&gt;@golddranks&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33665&quot;&gt;a big-picture explanation for thread::park() &amp;amp; co.&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rkruppe&quot;&gt;@rkruppe&lt;&#x2F;a&gt; reworded the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33676&quot;&gt;short diagnostic for E0509&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tshepang&quot;&gt;@tshepang&lt;&#x2F;a&gt; made a lot of small improvements. Take a look &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+is%3Aclosed+33603+33604+33605+33633+33634+33635&quot;&gt;here&lt;&#x2F;a&gt; to see the list!&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alex-ozdemir&quot;&gt;@alex-ozdemir&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33765&quot;&gt;a &lt;code class=&quot;highlighter-rouge&quot;&gt;rustdoc&lt;&#x2F;code&gt; shortcut for collapse&#x2F;expand all&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;postmodern&quot;&gt;@postmodern&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33747&quot;&gt;the English translation of &lt;code class=&quot;highlighter-rouge&quot;&gt;?Sized&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crimsun&quot;&gt;@crimsun&lt;&#x2F;a&gt; resolved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33702&quot;&gt;a rustdoc crash&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dns2utf8&quot;&gt;@dns2utf8&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33746&quot;&gt;docs for sort(&amp;amp;mut self)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33656&quot;&gt;lifetime‚Äôs bounds in doc generation&lt;&#x2F;a&gt;, fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33793&quot;&gt;compile_fail tag&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33781&quot;&gt;new error code tests&lt;&#x2F;a&gt;, updated &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33779&quot;&gt;repr_simd feature in errors explanation&lt;&#x2F;a&gt; and fixed a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33673&quot;&gt;CSS bug&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 25th of May 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org, feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 4</title>
		<published>2016-05-15T00:00:00+00:00</published>
		<updated>2016-05-15T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-4-vhwwd3gsah5wbva9sdxi6/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-4-vhwwd3gsah5wbva9sdxi6/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;The whole new error format landed! Take a look &lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;t&#x2F;new-error-format&#x2F;3438&quot;&gt;here&lt;&#x2F;a&gt; for more information.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;peschkaj&quot;&gt;@peschakj&lt;&#x2F;a&gt; posted &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;05&#x2F;writing-documentation-in-rust&#x2F;&quot;&gt;Writing Documentation in Rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cramertj&quot;&gt;@cramertj&lt;&#x2F;a&gt; added explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33412&quot;&gt;E0389&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfockler&quot;&gt;@dfockler&lt;&#x2F;a&gt; added explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33415&quot;&gt;E0374, E0375, E0376&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;billyevans&quot;&gt;@billyevans&lt;&#x2F;a&gt; added explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33475&quot;&gt;E0505&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cramertj&quot;&gt;@cramertj&lt;&#x2F;a&gt; added explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33386&quot;&gt;E0504&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; added explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33533&quot;&gt;E0500&lt;&#x2F;a&gt;, improved the help for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33489&quot;&gt;Makefile&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33656&quot;&gt;lifetime‚Äôs bounds display in generated documentation&lt;&#x2F;a&gt;, added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33584&quot;&gt;more details and examples in error codes&lt;&#x2F;a&gt; and added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33585&quot;&gt;compile-fail tests for error codes&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; continues his awesome work on rustdoc:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33377&quot;&gt;display field types together with names in detailed docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33510&quot;&gt;do not panic all the way when lexing a source snippet fails&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33511&quot;&gt;inject &lt;code class=&quot;highlighter-rouge&quot;&gt;#[macro_use] extern crate&lt;&#x2F;code&gt; in doctests for macros&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33512&quot;&gt;remove artificial indentation of doctest code &lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33516&quot;&gt;add a ‚Äúprimitive type reference‚Äù page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And once again, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; worked on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33542&quot;&gt;rustdoc CSS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 18th of May 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org, feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>A second try at using Rust</title>
		<published>2016-05-12T11:55:45+00:00</published>
		<updated>2016-05-12T11:55:45+00:00</updated>
		<link href="https://kitallis.github.io/hades/a-second-try-at-using-rust-twbwvrjqkp5vsug1yk2ly/" type="text/html"/>
		<id>https://kitallis.github.io/hades/a-second-try-at-using-rust-twbwvrjqkp5vsug1yk2ly/</id>
		<content type="html">&lt;p&gt;I used Rust for the first time in late 2013, while trying to write a tiny operating system. At the time, I learned a lot and it was pretty fun, but I found the experience pretty frustrating. There were all these error messages I didn‚Äôt understand! It took forever to work with strings! Everyone was very nice but it felt confusing.
I just tried Rust again yesterday! Kamal has been trying to sell me (and everyone else) on the idea that if you‚Äôre doing systems-y work, and you don‚Äôt know any systems language very well, then it‚Äôs worth learning Rust.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 3</title>
		<published>2016-05-08T00:00:00+00:00</published>
		<updated>2016-05-08T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-3-ev0dc-m-nyrtdamuwiwvl/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-3-ev0dc-m-nyrtdamuwiwvl/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;We are currently talking about creating a rust docs day in order to help crates to improve&#x2F;add documentation. Details remain to be done but it should be scheduled soon. Expect us!&lt;&#x2F;p&gt;
&lt;p&gt;Our ‚ÄúThis Week in Rust Docs‚Äù seems to &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;haskell&#x2F;comments&#x2F;4hmjnp&#x2F;this_week_in_haskell_docs&#x2F;&quot;&gt;inspire the Haskell community&lt;&#x2F;a&gt; as well. :)&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the two big issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;p&gt;There are currently around 50 other documentation issues opened. Look for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3AA-docs&quot;&gt;A-docs&lt;&#x2F;a&gt; tagged issues on github!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; improved explanations for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33320&quot;&gt;E0432&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33324&quot;&gt;E0269&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;timothy-mcroy&quot;&gt;@timothy-mcroy&lt;&#x2F;a&gt; added an explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33294#event-650972625&quot;&gt;E0501&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cristianoliveira&quot;&gt;@cristianoliveira&lt;&#x2F;a&gt; added an explanation for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33393&quot;&gt;E0455&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cramertj&quot;&gt;@cramertj&lt;&#x2F;a&gt; added explanations for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33384&quot;&gt;E0506&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33383&quot;&gt;E0509&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@steveklabnik&lt;&#x2F;a&gt; wrote the whole new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;book&#x2F;pull&#x2F;98&#x2F;files&quot;&gt;enums chapter&lt;&#x2F;a&gt; for the new rust book!&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Manishearth&quot;&gt;@Manishearth&lt;&#x2F;a&gt; added explanations for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33493&quot;&gt;E0408 and E0409&lt;&#x2F;a&gt;. He also merged E0410 into E0408.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33410&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; removed rust flags on code blocks displayed by ‚Äúrustc ‚Äìexplain‚Äù.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Waiting merge:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cramertj&quot;&gt;@cramertj&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33386&quot;&gt;E0504&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dfockler&quot;&gt;@dfockler&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33415&quot;&gt;E0374, E0375, E0376&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;billyevans&quot;&gt;@billyevans&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33475&quot;&gt;E0505&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And once again, beside all this, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; did a lot of wonderful improvements on rustdoc. Thanks to him!&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33382&quot;&gt;add ‚Äúsrc‚Äù links to impls for types&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33372&quot;&gt;HTML-escape Rust code (from constants)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33371&quot;&gt;fix inserting source code spans for constant values&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33373&quot;&gt;use btree map for where clauses&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Alongside &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt;‚Äôs improvements, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33410&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; improved the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33431&quot;&gt;documentation‚Äôs CSS&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 11th of May 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org, feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 2</title>
		<published>2016-05-01T00:00:00+00:00</published>
		<updated>2016-05-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-2-vqaz9zvcyiri5auq7gcbn/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-2-vqaz9zvcyiri5auq7gcbn/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;Things are moving on: we talked about hosting crates‚Äô documentation directly on an official doc website (the hostname hasn‚Äôt been decided yet). It has already been discussed a few times in the past but nothing came out. For now, we‚Äôre mostly trying to sort through all of the complexity. A lot of details must be taken in account and it is still at a very early stage of discussion but it started!&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;32756&quot;&gt;pull request&lt;&#x2F;a&gt; on the new rustc output is finally here (or almost)!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jonathandturner&quot;&gt;@jonathandturner&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;peschkaj&quot;&gt;@peschkaj&lt;&#x2F;a&gt; are working on a style guide in order to help developers to write better library documentations.&lt;&#x2F;p&gt;
&lt;p&gt;Besides this, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;peschkaj&quot;&gt;@peschkaj&lt;&#x2F;a&gt; investigated the current doc status of the 20 biggest crates (based on number of downloads on &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&quot;&gt;crates.io&lt;&#x2F;a&gt;). Take a look at the report &lt;a href=&quot;https:&#x2F;&#x2F;facility9.com&#x2F;2016&#x2F;04&#x2F;the-state-of-rust-docs-2016&#x2F;&quot;&gt;The State of Rust Docs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;timothy-mcroy&quot;&gt;@timothy-mcroy&lt;&#x2F;a&gt; added &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33229&quot;&gt;E0434&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33294&quot;&gt;E0501&lt;&#x2F;a&gt; errors explanation.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;birkenfeld&quot;&gt;@birkenfeld&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33324&quot;&gt;E0269&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33320&quot;&gt;E0432&lt;&#x2F;a&gt; errors explanation and fixed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33326&quot;&gt;std::thread docs&lt;&#x2F;a&gt;. He also clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33258&quot;&gt;std::fmt dollar syntax&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrmiywj&quot;&gt;@mrmiywj&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33260&quot;&gt;E0008 error explanation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bwinterton&quot;&gt;@bwinterton&lt;&#x2F;a&gt; improved &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33276&quot;&gt;BTreeSet::Insert&lt;&#x2F;a&gt; doc.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;durka&quot;&gt;@durka&lt;&#x2F;a&gt; worked on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33250&quot;&gt;tuple&#x2F;unit structs&lt;&#x2F;a&gt; in the rustbook.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;benaryorg&quot;&gt;@benaryorg&lt;&#x2F;a&gt; clarified documentation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33167&quot;&gt;TcpStream::connect for multiple valid addresses&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&quot;&gt;@fitzgen&lt;&#x2F;a&gt; clarified &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33085&quot;&gt;Iterator::enumerate doc example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt;‚Äôs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;32230&quot;&gt;Pull Request&lt;&#x2F;a&gt; to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;--extend-css&lt;&#x2F;code&gt; option to rustdoc has been merged. He also worked on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33283&quot;&gt;process types documentation&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Besides all this, a lot of improvements have been made to rustdoc source code:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33196&quot;&gt;Linkify extern crates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33194&quot;&gt;Improve accessibility of rustdoc pages&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33191&quot;&gt;Handle concurrent mkdir requests&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33153&quot;&gt;Only record the same impl once&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;33133&quot;&gt;Inline all the impls&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 4th of May 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org, feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>This Week in Rust Docs 1</title>
		<published>2016-04-11T00:00:00+00:00</published>
		<updated>2016-04-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/this-week-in-rust-docs-1-gnzf4qxjuc-cs2jvsw9m8/" type="text/html"/>
		<id>https://kitallis.github.io/hades/this-week-in-rust-docs-1-gnzf4qxjuc-cs2jvsw9m8/</id>
		<content type="html">&lt;p&gt;Hello and welcome to &lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;This Week in Rust Docs&lt;&#x2F;em&gt; is openly developed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
If you find any errors in this week‚Äôs issue, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&#x2F;this-week-in-rust-docs&#x2F;pulls&quot;&gt;please submit a PR&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This week‚Äôs edition was edited by: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;GuillaumeGomez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;why-this-newsletter&quot;&gt;Why this newsletter?&lt;&#x2F;h1&gt;
&lt;p&gt;There isn‚Äôt an official Rust docs team yet, but several of us have decided to start working as a team, even though it‚Äôs not
official. Here‚Äôs what we‚Äôll be working on:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;Working on the front-end part of rustdoc.&lt;&#x2F;li&gt;
  &lt;li&gt;Working on error code explanations.&lt;&#x2F;li&gt;
  &lt;li&gt;Improving Rust documentation.&lt;&#x2F;li&gt;
  &lt;li&gt;Improving the Rustbook (also known as ‚ÄúThe Book‚Äù).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Since documentation is a really important part of Rust, why not keep people up-to-date about what‚Äôs happening?&lt;&#x2F;p&gt;
&lt;h1 id=&quot;latest-news&quot;&gt;Latest news&lt;&#x2F;h1&gt;
&lt;p&gt;In the two last weeks, we opened two RFCs:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1567&quot;&gt;Normalization for long error codes explanations&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rfcs&#x2F;pull&#x2F;1574&quot;&gt;More api documentation conventions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Once they‚Äôre approved, the work on Rust documentation will certainly increase again. They both intend to normalize how to write specific documentation. Please take a look at them. :)&lt;&#x2F;p&gt;
&lt;h1 id=&quot;current-opened-issues&quot;&gt;Current opened issues&lt;&#x2F;h1&gt;
&lt;p&gt;For now, here are the issues opened for Rust documentation:&lt;&#x2F;p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
  &lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;32777&quot;&gt;Add error explanations for all error codes&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;They both need help to move forward so any contribution is very welcome!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;recent-doc-contributions&quot;&gt;Recent doc contributions&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuillaumeGomez&quot;&gt;@GuillaumeGomez&lt;&#x2F;a&gt; worked on both &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pull&#x2F;32230&quot;&gt;rustdoc front-end&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+author%3AGuillaumeGomez+is%3Aclosed+32744+32581+32464+32452+32416&quot;&gt;documentation improvements&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;steveklabnik&quot;&gt;@Steveklabnik&lt;&#x2F;a&gt; worked on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;29329&quot;&gt;The Standard Library Documentation Checklist&lt;&#x2F;a&gt; RFC.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;meetings&quot;&gt;Meetings&lt;&#x2F;h1&gt;
&lt;p&gt;Next meeting will be on Wednesday 13rd of April 2016 at 20:00 GMT on #rust-docs channel on irc.mozilla.org, feel free to come!&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Calling C from Rust</title>
		<published>2016-01-18T09:31:42+00:00</published>
		<updated>2016-01-18T09:31:42+00:00</updated>
		<link href="https://kitallis.github.io/hades/calling-c-from-rust-7qvoarespnqj4v562ssgc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/calling-c-from-rust-7qvoarespnqj4v562ssgc/</id>
		<content type="html">&lt;p&gt;Yesterday I asked Kamal how to call C code from Rust, for a project I‚Äôm thinking about. It turned out to be a little harder than I expected! Largely because I don‚Äôt know Rust well, and fixing compiler errors is nontrivial. 30 minutes and some number of inscrutable-to-me compiler errors later, we figured it out.
I want to do something pretty simple ‚Äì copy the string ‚ÄúHello, world!‚Äù and print it.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Why I ‚ù§ Rust</title>
		<published>2016-01-10T08:43:43+00:00</published>
		<updated>2016-01-10T08:43:43+00:00</updated>
		<link href="https://kitallis.github.io/hades/why-i-rust-fa3-pjfczbjhtq2hyytm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/why-i-rust-fa3-pjfczbjhtq2hyytm/</id>
		<content type="html">&lt;p&gt;I gave a talk about why I like Rust a while ago! There‚Äôs no video. Normally my talk slides are unremarkable and I don‚Äôt post them, but I think these mostly stand on their own and I‚Äôm happy with how they turned out. Here it is (and it‚Äôs embedded below).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>TODO I</title>
		<published>2016-01-09T13:00:02+00:00</published>
		<updated>2016-01-09T13:00:02+00:00</updated>
		<link href="https://kitallis.github.io/hades/todo-i-yc-raez7twymkzh-408yz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/todo-i-yc-raez7twymkzh-408yz/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Ideas Have Expirations</title>
		<published>2016-01-04T08:03:08+00:00</published>
		<updated>2016-01-04T08:03:08+00:00</updated>
		<link href="https://kitallis.github.io/hades/ideas-have-expirations-pe4lgsmfptumzmgjtzwxz/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ideas-have-expirations-pe4lgsmfptumzmgjtzwxz/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Index 1,600,000,000 Keys with Automata and Rust</title>
		<published>2015-11-11T22:45:00-04:00</published>
		<updated>2015-11-11T22:45:00-04:00</updated>
		<link href="https://kitallis.github.io/hades/index-1-600-000-000-keys-with-automata-and-rust-hiaudidgqrudgyxa6jivk/" type="text/html"/>
		<id>https://kitallis.github.io/hades/index-1-600-000-000-keys-with-automata-and-rust-hiaudidgqrudgyxa6jivk/</id>
		<content type="html">&lt;p&gt;It turns out that finite state machines are useful for things other than
expressing computation. Finite state machines can also be used to compactly
represent ordered sets or maps of strings that can be searched very quickly.&lt;&#x2F;p&gt;
&lt;p&gt;In this article, I will teach you about finite state machines as a &lt;em&gt;data
structure&lt;&#x2F;em&gt; for representing ordered sets and maps. This includes introducing
an implementation written in Rust called the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;BurntSushi&#x2F;fst&quot;&gt;&lt;code&gt;fst&lt;&#x2F;code&gt; crate&lt;&#x2F;a&gt;.
It comes with
&lt;a href=&quot;https:&#x2F;&#x2F;burntsushi.net&#x2F;rustdoc&#x2F;fst&#x2F;&quot;&gt;complete API documentation&lt;&#x2F;a&gt;.
I will also show you how to build them using a simple command line tool.
Finally, I will discuss a few experiments culminating in indexing over
1,600,000,000 URLs (134 GB) from the
&lt;a href=&quot;http:&#x2F;&#x2F;blog.commoncrawl.org&#x2F;2015&#x2F;08&#x2F;july-2015-crawl-archive-available&#x2F;&quot;&gt;July 2015 Common Crawl Archive&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The technique presented in this article is also how
&lt;a href=&quot;http:&#x2F;&#x2F;blog.mikemccandless.com&#x2F;2010&#x2F;12&#x2F;using-finite-state-transducers-in.html&quot;&gt;Lucene represents a part of its inverted
index&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Along the way, we will talk about memory maps, automaton intersection with
regular expressions, fuzzy searching with Levenshtein distance and streaming
set operations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Target audience&lt;&#x2F;strong&gt;: Some familiarity with programming and fundamental data
structures. No experience with automata theory or Rust is required.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>i3: the window manager for vimmers</title>
		<published>2015-10-30T00:00:00+00:00</published>
		<updated>2015-10-30T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/i3-the-window-manager-for-vimmers-7446qrk277zq-ox1qylit/" type="text/html"/>
		<id>https://kitallis.github.io/hades/i3-the-window-manager-for-vimmers-7446qrk277zq-ox1qylit/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;i3wm.org&#x2F;&quot;&gt;i3&lt;&#x2F;a&gt; is an ultra lightweight tiling window manager with &lt;a href=&quot;http:&#x2F;&#x2F;i3wm.org&#x2F;docs&#x2F;&quot;&gt;excellent documentation&lt;&#x2F;a&gt;. It follows the Arch Way in that it is configurable through a simple text based config file and is generally badass (well tested, simple to use, small codebase, etc). It is also fast and consumes almost no memory.&lt;&#x2F;p&gt;
&lt;p&gt;i3‚Äôs entire purpose is to be controlled through key commands. When you first install it, it gives you a well documented configuration file for you to edit. There are only a few changes we have to make to make i3 vim compatible.&lt;&#x2F;p&gt;
&lt;p&gt;One of the key benefits of using Arch and i3 is that there are no ‚Äúrandom‚Äù keybindings ‚Äì everything is documented in your i3 config. This makes it much easier to do things like define Alt+C&#x2F;V to be copy&#x2F;paste (for example) ‚Äì we will get to that when we discuss urxvt&lt;&#x2F;p&gt;
&lt;h1 id=&quot;open-i3-or-configi3config&quot;&gt;Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~&#x2F;.i3&lt;&#x2F;code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~&#x2F;.config&#x2F;i3&#x2F;config&lt;&#x2F;code&gt;&lt;&#x2F;h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Mod=Alt -- I use alt so it doesn&#x27;t conflict with vim or tmux but is easy to reach
set $mod Mod1
&lt;h1 id=&quot;kill-focused-window-vim-delete-follows-vimperator-settings-more-than-vim&quot;&gt;kill focused window (vim delete, follows vimperator settings more than vim)&lt;&#x2F;h1&gt;
&lt;p&gt;bindsym $mod+d kill&lt;&#x2F;p&gt;
&lt;h1 id=&quot;dmenu-is-how-you-start-programs-make-it-the-same-as-vim-command-mode&quot;&gt;dmenu is how you start programs -- make it the same as vim command mode&lt;&#x2F;h1&gt;
&lt;p&gt;bindsym $mod+semicolon exec dmenu_run&lt;&#x2F;p&gt;
&lt;h1 id=&quot;i3-uses-jkl-instead-of-hjkl-fix-that&quot;&gt;i3 uses jkl; instead of hjkl -- fix that&lt;&#x2F;h1&gt;
&lt;p&gt;bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right&lt;&#x2F;p&gt;
&lt;h1 id=&quot;move-focused-window&quot;&gt;move focused window&lt;&#x2F;h1&gt;
&lt;p&gt;bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right&lt;&#x2F;p&gt;
&lt;h1 id=&quot;these-are-more-like-the-tmux-config-we-will-get-to-later-but-are-intuitive&quot;&gt;These are more like the tmux config we will get to later, but are intuitive&lt;&#x2F;h1&gt;
&lt;p&gt;bindsym $mod+backslash  split horizontal
bindsym $mod+bar        split horizontal
bindsym $mod+apostrophe split vertical
bindsym $mod+quotedbl   split vertical
bindsym $mod+minus      split vertical
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can also see more settings (and up to date settings) I have at my &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vitiral&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;config&#x2F;i3&#x2F;config&quot;&gt;i3 config&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Monthly Favorites, September 2015</title>
		<published>2015-09-30T12:00:18+00:00</published>
		<updated>2015-09-30T12:00:18+00:00</updated>
		<link href="https://kitallis.github.io/hades/monthly-favorites-september-2015-cfcdjdr21fhbcwpdq2ztc/" type="text/html"/>
		<id>https://kitallis.github.io/hades/monthly-favorites-september-2015-cfcdjdr21fhbcwpdq2ztc/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>RustCamp Reminiscences</title>
		<published>2015-08-03T07:14:57+00:00</published>
		<updated>2015-08-03T07:14:57+00:00</updated>
		<link href="https://kitallis.github.io/hades/rustcamp-reminiscences-ka13holo-eewtgq7vt3tq/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rustcamp-reminiscences-ka13holo-eewtgq7vt3tq/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Understanding Lifetime in Rust ‚Äì Part II</title>
		<published>2015-07-08T19:34:41+00:00</published>
		<updated>2015-07-08T19:34:41+00:00</updated>
		<link href="https://kitallis.github.io/hades/understanding-lifetime-in-rust-part-ii-w-r4yavoknnw9esbm2yni/" type="text/html"/>
		<id>https://kitallis.github.io/hades/understanding-lifetime-in-rust-part-ii-w-r4yavoknnw9esbm2yni/</id>
		<content type="html">&lt;p&gt;In Part I we discussed the motivation behind lifetime management in Rust and how it works from a function. In this installment we will explore how lifetime helps us model containment relationship (that is, when an object contains a reference to another object). The Business Requirement We will design a Person type. A person may [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Understanding Lifetime in Rust ‚Äì Part I</title>
		<published>2015-06-29T15:52:50+00:00</published>
		<updated>2015-06-29T15:52:50+00:00</updated>
		<link href="https://kitallis.github.io/hades/understanding-lifetime-in-rust-part-i-76hgws1bli0nmvb6x2r6v/" type="text/html"/>
		<id>https://kitallis.github.io/hades/understanding-lifetime-in-rust-part-i-76hgws1bli0nmvb6x2r6v/</id>
		<content type="html">&lt;p&gt;Lifetime is where the true strength of Rust lies and makes it unique from other languages with similar syntax like C++ and Java. Unfortunately, it is also the area that takes the longest to understand. The effort put in learning this is well worth it. Remember that lifetime solves two very nagging problems in programming: [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Casket</title>
		<published>2015-06-21T00:00:00+00:00</published>
		<updated>2015-06-21T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/casket-chjbknuayzwfxjiyr-ewb/" type="text/html"/>
		<id>https://kitallis.github.io/hades/casket-chjbknuayzwfxjiyr-ewb/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;casket&quot;&gt;GitHub page&lt;&#x2F;a&gt; for more
information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Rust Using Visual Studio Code</title>
		<published>2015-06-16T18:36:43+00:00</published>
		<updated>2015-06-16T18:36:43+00:00</updated>
		<link href="https://kitallis.github.io/hades/rust-using-visual-studio-code-qjtobzpxqypfzfdzgizhf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/rust-using-visual-studio-code-qjtobzpxqypfzfdzgizhf/</id>
		<content type="html">&lt;p&gt;I am getting decent productivity using MS Visual Studio Code to code Rust. This is how I have it setup. Use a Good Font VS Code has built in support for Rust syntax coloring. But a good font always helps. My favorite is Source Code Pro. Download and install it from Google Fonts. In VS [‚Ä¶]&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Error Handling in Rust</title>
		<published>2015-05-14T10:47:26-04:00</published>
		<updated>2015-05-14T10:47:26-04:00</updated>
		<link href="https://kitallis.github.io/hades/error-handling-in-rust-9ogfe9fkbf6ouzxjjbofm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/error-handling-in-rust-9ogfe9fkbf6ouzxjjbofm/</id>
		<content type="html">&lt;p&gt;Like most programming languages, Rust encourages the programmer to handle
errors in a particular way. Generally speaking, error handling is divided into
two broad categories: exceptions and return values. Rust opts for return
values.&lt;&#x2F;p&gt;
&lt;p&gt;In this article, I intend to provide a comprehensive treatment of how to deal
with errors in Rust. More than that, I will attempt to introduce error handling
one piece at a time so that you&amp;rsquo;ll come away with a solid working knowledge of
how everything fits together.&lt;&#x2F;p&gt;
&lt;p&gt;When done naively, error handling in Rust can be verbose and annoying. This
article will explore those stumbling blocks and demonstrate how to use the
standard library to make error handling concise and ergonomic.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Target audience&lt;&#x2F;strong&gt;: Those new to Rust that don&amp;rsquo;t know its error handling
idioms yet. Some familiarity with Rust is helpful. (This article makes heavy
use of some standard traits and some very light use of closures and macros.)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Update (2018&#x2F;04&#x2F;14)&lt;&#x2F;strong&gt;: Examples were converted to &lt;code&gt;?&lt;&#x2F;code&gt;, and some text was
added to give historical context on the change.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Update (2020&#x2F;01&#x2F;03)&lt;&#x2F;strong&gt;: A recommendation to use
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;failure&quot;&gt;&lt;code&gt;failure&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; was removed and replaced with
a recommendation to use either &lt;code&gt;Box&amp;lt;Error + Send + Sync&amp;gt;&lt;&#x2F;code&gt; or
&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;anyhow&quot;&gt;&lt;code&gt;anyhow&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>PDF Comparison Utility</title>
		<published>2015-04-29T00:00:00+00:00</published>
		<updated>2015-04-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/pdf-comparison-utility-qsxbyp5qkq1wjv5rmp4qx/" type="text/html"/>
		<id>https://kitallis.github.io/hades/pdf-comparison-utility-qsxbyp5qkq1wjv5rmp4qx/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;pdf-diff&quot;&gt;GitHub page&lt;&#x2F;a&gt; for more
information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>XXX III</title>
		<published>2015-04-12T16:19:44+00:00</published>
		<updated>2015-04-12T16:19:44+00:00</updated>
		<link href="https://kitallis.github.io/hades/xxx-iii-tpsweviogcg8ewjuumkbr/" type="text/html"/>
		<id>https://kitallis.github.io/hades/xxx-iii-tpsweviogcg8ewjuumkbr/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>XXX II</title>
		<published>2015-03-22T06:07:40+00:00</published>
		<updated>2015-03-22T06:07:40+00:00</updated>
		<link href="https://kitallis.github.io/hades/xxx-ii-qmr5uckmjckrnysaxkwul/" type="text/html"/>
		<id>https://kitallis.github.io/hades/xxx-ii-qmr5uckmjckrnysaxkwul/</id>
		<content type="html"></content>
	</entry>
	<entry xml:lang="en">
		<title>Engineering Equations</title>
		<published>2015-02-09T00:00:00+00:00</published>
		<updated>2015-02-09T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/engineering-equations-qihhppk-kfmcq-ycxjj19/" type="text/html"/>
		<id>https://kitallis.github.io/hades/engineering-equations-qihhppk-kfmcq-ycxjj19/</id>
		<content type="html">&lt;p&gt;See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;engineering-equations&quot;&gt;GitHub page&lt;&#x2F;a&gt; for
more information.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Diving into concurrency: trying out mutexes and atomics</title>
		<published>2014-12-14T12:58:55+00:00</published>
		<updated>2014-12-14T12:58:55+00:00</updated>
		<link href="https://kitallis.github.io/hades/diving-into-concurrency-trying-out-mutexes-and-atomics-2e1p9ucod-x09mlyzhxy2/" type="text/html"/>
		<id>https://kitallis.github.io/hades/diving-into-concurrency-trying-out-mutexes-and-atomics-2e1p9ucod-x09mlyzhxy2/</id>
		<content type="html">&lt;p&gt;I hadn&amp;rsquo;t written any threaded programs before yesterday. I knew sort of
abstractly about some concurrency concepts (mutexes! people say
compare-and-swap but I don&amp;rsquo;t totally get it!), but actually
understanding a Thing is hard if I&amp;rsquo;ve never done it. So yesterday I
decided to write a program with threads! In this post, we&amp;rsquo;re going to:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Write a threaded program that gets the wrong answer because of a race
condition&lt;&#x2F;li&gt;
&lt;li&gt;Fix that race condition in C and Rust, using 2 different approaches
(mutexes and atomics)&lt;&#x2F;li&gt;
&lt;li&gt;Find out why Rust is slower than C&lt;&#x2F;li&gt;
&lt;li&gt;Talk a little about the actual system calls and instructions that
make some of this work&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Resume Build System</title>
		<published>2014-09-11T00:00:00+00:00</published>
		<updated>2014-09-11T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/resume-build-system-xt9ya9gbmdf7ko-fpnf1i/" type="text/html"/>
		<id>https://kitallis.github.io/hades/resume-build-system-xt9ya9gbmdf7ko-fpnf1i/</id>
		<content type="html">&lt;p&gt;I developed a system to parse my resume from &lt;a href=&quot;http:&#x2F;&#x2F;yaml.org&#x2F;&quot;&gt;YAML&lt;&#x2F;a&gt;-formatted data files and
use templates to generate PDF, HTML, plain text, &lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;&quot;&gt;Sphinx&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;&quot;&gt;Markdown&lt;&#x2F;a&gt;
output. I track all of my data files and templates in &lt;a href=&quot;https:&#x2F;&#x2F;www.git-scm.com&#x2F;&quot;&gt;Git&lt;&#x2F;a&gt;, which allows me
to easily keep track of changes over time, tag versions customized for specific
applications, etc. It is partly inspired by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mhyee&#x2F;resume&quot;&gt;Ming-Ho Yee&amp;rsquo;s resume project&lt;&#x2F;a&gt;.
You can view the public portions of the project source code on
its &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;resume&quot;&gt;GitHub page&lt;&#x2F;a&gt;, and you can
view &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;resume&#x2F;&quot;&gt;generated copies of my resume&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;&#x2F;h2&gt;
&lt;p&gt;For a long time, I maintained my resume in Microsoft Word, but that was a pain
because&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Much of the formatting information was hidden in the
&lt;abbr title=&quot;What You See Is What You Get&quot;&gt;WYSIWYG&lt;&#x2F;abbr&gt; interface,
which made debugging formatting problems very frustrating, particularly on
something like a resume where precise formatting is important. I used Word&amp;rsquo;s
support for styles, tab stops, etc., and I am very familiar with Word, but
it&amp;rsquo;s just a frustrating and buggy program.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;Word does not support Linux, so when I switched from Windows to Linux, I had
to use Word in a Windows virtual machine. I tried using &lt;a href=&quot;https:&#x2F;&#x2F;www.libreoffice.org&#x2F;&quot;&gt;LibreOffice&lt;&#x2F;a&gt;
before switching to my current approach, but LibreOffice has most of Word&amp;rsquo;s
other problems.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;There was no good way to track my changes, view differences between versions,
etc., due to Word&amp;rsquo;s binary format. Of course, Word has built-in reviewing and
diffing functionality, but it&amp;rsquo;s designed for reviewing documents, not
long-term history tracking, and it doesn&amp;rsquo;t integrate nicely with Git.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;There was no good way to produce other file formats (except PDF), which were
necessary for some job applications and my personal website.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now, I have complete control of formatting without it being hidden behind a
GUI, I can build my resume on Linux, I can use Git for version control with
understandable diffs, and I can easily produce whatever file format I need.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-it-works&quot;&gt;How it Works&lt;&#x2F;h2&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;www.python.org&#x2F;&quot;&gt;Python&lt;&#x2F;a&gt; script takes as arguments the desired output format, the template
to use, the output filename, and the source data file(s). It uses
the &lt;a href=&quot;http:&#x2F;&#x2F;pyyaml.org&#x2F;wiki&#x2F;PyYAML&quot;&gt;PyYAML&lt;&#x2F;a&gt; library to parse the YAML-formatted data file(s) into an
in-memory data structure. If multiple data files are provided, the script
merges the data together, which allows e.g. for separation between data to be
published online and data to be included only on hard copies (such as an
address or phone number).&lt;&#x2F;p&gt;
&lt;p&gt;Next, the script parses the section of the YAML-formatted configuration file
corresponding to the desired output format. This includes&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;replacements to be applied to the raw data strings for escaping problematic
characters (e.g. replacing &lt;code&gt;&amp;amp;&lt;&#x2F;code&gt; with &lt;code&gt;&amp;amp;amp;&lt;&#x2F;code&gt; in HTML), applying simple markup
(e.g. &lt;code&gt;&#x2F;&#x2F;emphasis&#x2F;&#x2F;&lt;&#x2F;code&gt; for &lt;em&gt;emphasis&lt;&#x2F;em&gt;), etc.&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;the delimiters to be used by the template system (because the default Jinja2
delimiters don&amp;rsquo;t work well with LaTeX)&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;p&gt;the desired line endings for the output file (generally &lt;code&gt;\n&lt;&#x2F;code&gt;, but &lt;code&gt;\r\n&lt;&#x2F;code&gt; for
the plain text file for MS Notepad users)&lt;&#x2F;p&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Finally, the script applies the replacements to the raw data strings and then
uses &lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;&quot;&gt;Jinja2&lt;&#x2F;a&gt; to fill the data into the template. The script provides some
custom filters to use in the templates for line wrapping, alignment, etc.&lt;&#x2F;p&gt;
&lt;p&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;make&#x2F;manual&#x2F;make.html#Introduction&quot;&gt;Makefile&lt;&#x2F;a&gt; provides instructions to build individual files or just rebuild
all of them, so a simple call to &lt;code&gt;make&lt;&#x2F;code&gt; builds everything at once.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;input-files&quot;&gt;Input Files&lt;&#x2F;h2&gt;
&lt;p&gt;This is a portion of a resume data file. It illustrates the YAML-formatted data
structure and some of the markup specified in the configuration file. For
example, &lt;code&gt;--&lt;&#x2F;code&gt; is used to represent en dashes in date ranges, &lt;code&gt;~&lt;&#x2F;code&gt; is used to
represent non-breaking spaces, and &lt;code&gt;&#x2F;&#x2F;emphasis&#x2F;&#x2F;&lt;&#x2F;code&gt; is used to emphasize award
names.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;nt&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Mechanical engineering Ph.D.~student with research and industry experience in&lt;&#x2F;span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;reinforcement learning, nonlinear dynamical systems, mechanical simulation,&lt;&#x2F;span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;electromechanical controls, product development, testing and verification,&lt;&#x2F;span&gt;
  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;data analysis, and software development.&lt;&#x2F;span&gt;
&lt;span class=&quot;nt&quot;&gt;education&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;nt&quot;&gt;degree&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Ph.D.~Mechanical Engineering&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;university&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Duke University&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;location&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Durham,~NC&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;grade&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;4.00~GPA&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;date&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;2015--present&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;multicols&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;2&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;description&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2017&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;National&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Defense&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Science&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;and&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Engineering&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Graduate&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;(NDSEG)&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Fellowship:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Merit-based,&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;national,&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;full-ride&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;fellowship&amp;quot;&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2015&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;James~B.~Duke&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Fellowship:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Merit-based,&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;four-year&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;fellowship&amp;quot;&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2015&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Pratt&#x2F;Gardner&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Fellowship:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Merit-based&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;fellowship&amp;quot;&lt;&#x2F;span&gt;
  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;nt&quot;&gt;degree&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;B.S.~Mechanical Engineering&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;university&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;North Carolina State University&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;location&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Raleigh,~NC&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;grade&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Valedictorian, 4.00~GPA&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;date&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;2011--2015&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;multicols&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;2&lt;&#x2F;span&gt;
    &lt;span class=&quot;nt&quot;&gt;description&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;Minors:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Spanish&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Computer&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Programming&amp;quot;&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2015&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;NCSU&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Mech.~&amp;amp;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Aero.~Engineering&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Senior&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Award&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Leadership&#x2F;&#x2F;&amp;quot;&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2014&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Goldwater&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Scholar:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Merit-based,&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;national&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;scholarship&amp;quot;&lt;&#x2F;span&gt;
      &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&#x2F;&#x2F;2011&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;NCSU&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Park&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Scholar:&#x2F;&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;Merit-based,&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;full-ride&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;scholarship&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;This is a portion of a configuration file for LaTeX output:&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;nt&quot;&gt;latex&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
  &lt;span class=&quot;nt&quot;&gt;replacements&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;amp;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\\&amp;amp;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;%&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\\%&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;\$&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\\$&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;LaTeX&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\\LaTeX&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
    &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&#x2F;&#x2F;(.*?)&#x2F;&#x2F;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;\\emph{\1}&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
  &lt;span class=&quot;nt&quot;&gt;jinja2_delim&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;%&amp;lt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;%&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;lt;&amp;lt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;&amp;gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;%%&amp;lt;&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;&amp;gt;%%&amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;&#x2F;span&gt;
  &lt;span class=&quot;nt&quot;&gt;line_endings&lt;&#x2F;span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;\n&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;
&lt;p&gt;This is a portion of a template for plain text output. It illustrates some of
the features of the &lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;docs&#x2F;dev&#x2F;templates&#x2F;&quot;&gt;Jinja2 templating language&lt;&#x2F;a&gt;, including filters,
conditionals, and loops.&lt;&#x2F;p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-jinja&quot; data-lang=&quot;jinja&quot;&gt;&lt;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;contact.name.first&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.name.last&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;)|&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.name.first&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.name.last&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#&amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;contact.name.first&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;&#x2F;span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.name.last&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;)|&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.street&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.city&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Address: &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.street&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt; ‚Äì &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.city&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;elif&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.city&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Address: &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.city&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.country&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;         &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.address.country&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.phone&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Phone:   &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.phone&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.email&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Email:   &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.email&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.linkedin&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Social:  linkedin.com&#x2F;in&#x2F;&lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.linkedin&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.web&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;&#x2F;span&gt; &lt;span class=&quot;nf&quot;&gt;defined&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;Web:     &lt;&#x2F;span&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;contact.web&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endif&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;x&quot;&gt;Summary&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;=======&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;hard_wrap&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;WIDTH&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;x&quot;&gt;Education&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;=========&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;entrylist&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;education&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;x&quot;&gt;Publications &amp;amp; Presentations&lt;&#x2F;span&gt;
&lt;span class=&quot;x&quot;&gt;============================&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;item&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;publications&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;span class=&quot;cp&quot;&gt;{{&lt;&#x2F;span&gt; &lt;span class=&quot;nv&quot;&gt;item.text&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;&#x2F;span&gt;&lt;span class=&quot;nf&quot;&gt;hard_wrap&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;nv&quot;&gt;WIDTH&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;&#x2F;span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;&#x2F;span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;cp&quot;&gt;{%&lt;&#x2F;span&gt; &lt;span class=&quot;k&quot;&gt;endfor&lt;&#x2F;span&gt; &lt;span class=&quot;cp&quot;&gt;%}&lt;&#x2F;span&gt;&lt;span class=&quot;x&quot;&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;div&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;more-information&quot;&gt;More Information&lt;&#x2F;h2&gt;
&lt;p&gt;If you&amp;rsquo;d like to see the specifics of usage, dependencies, license, etc., see
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;resume&quot;&gt;GitHub page&lt;&#x2F;a&gt;. The project is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jturner314&#x2F;resume&#x2F;blob&#x2F;master&#x2F;LICENSE.rst&quot;&gt;published under fairly open licenses&lt;&#x2F;a&gt;, so
you can adapt it for your own use.&lt;&#x2F;p&gt;
&lt;p&gt;You can view the &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;resume&#x2F;&quot;&gt;Markdown output for my resume&lt;&#x2F;a&gt;
integrated into this site, or you can
download &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;resume-web.pdf&quot;&gt;my resume as PDF&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;jim.turner.link&#x2F;downloads&#x2F;resume-web.txt&quot;&gt;my resume as plain text&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Ruby Rogues podcast: systems programming tricks!</title>
		<published>2014-07-17T20:21:11+00:00</published>
		<updated>2014-07-17T20:21:11+00:00</updated>
		<link href="https://kitallis.github.io/hades/ruby-rogues-podcast-systems-programming-tricks-1im-hk7xtrpeginogesnv/" type="text/html"/>
		<id>https://kitallis.github.io/hades/ruby-rogues-podcast-systems-programming-tricks-1im-hk7xtrpeginogesnv/</id>
		<content type="html">&lt;p&gt;If you listen to the Ruby Rogues podcast this week, you will find me! We talked about using systems programming tools (like strace) to debug your regular pedestrian code, building an operating system in Rust, but also other things I didn‚Äôt expect, like how asking stupid questions is an amazing way to learn.
Ruby Rogues also has a transcript of the entire episode, an index, and links to everything anyone referenced during the episode, including apparently 13 posts from this blog (!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Syntax extensions and regular expressions for Rust</title>
		<published>2014-04-21T19:51:00-04:00</published>
		<updated>2014-04-21T19:51:00-04:00</updated>
		<link href="https://kitallis.github.io/hades/syntax-extensions-and-regular-expressions-for-rust-jrvpqsqdv8akitx179oci/" type="text/html"/>
		<id>https://kitallis.github.io/hades/syntax-extensions-and-regular-expressions-for-rust-jrvpqsqdv8akitx179oci/</id>
		<content type="html">&lt;p&gt;&lt;strong&gt;WARNING:&lt;&#x2F;strong&gt; &lt;!-- raw HTML omitted --&gt;2018-04-12&lt;!-- raw HTML omitted --&gt;: The code snippets for this post are no longer
available. This is just as well anyway, since they all depended on an unstable
internal compiler interface, which hasn&amp;rsquo;t existed for years.&lt;&#x2F;p&gt;
&lt;p&gt;A few weeks ago, I set out to add regular expressions to the
&lt;a href=&quot;http:&#x2F;&#x2F;www.rust-lang.org&#x2F;&quot;&gt;Rust&lt;&#x2F;a&gt;
distribution with an implementation and feature set heavily inspired by
&lt;a href=&quot;http:&#x2F;&#x2F;swtch.com&#x2F;~rsc&#x2F;regexp&#x2F;&quot;&gt;Russ Cox&amp;rsquo;s RE2&lt;&#x2F;a&gt;.
It was just recently added to the
&lt;a href=&quot;http:&#x2F;&#x2F;static.rust-lang.org&#x2F;doc&#x2F;master&#x2F;regex&#x2F;index.html&quot;&gt;Rust distribution&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This regex crate includes a syntax extension that compiles a regular expression
to native Rust code &lt;em&gt;when a Rust program is compiled&lt;&#x2F;em&gt;. This can be thought of
as &amp;ldquo;ahead of time&amp;rdquo; compilation or
something similar to &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Compile_time_function_execution&quot;&gt;compile time function
execution&lt;&#x2F;a&gt;.
These special natively compiled regexes have the &lt;em&gt;same exact&lt;&#x2F;em&gt; API as regular
expressions compiled at runtime.&lt;&#x2F;p&gt;
&lt;p&gt;In this article, I will outline my implementation strategy&amp;mdash;including code
samples on how to write a Rust syntax extension&amp;mdash;and describe how I was able
to achieve an identical API between regexes compiled at compile time and
regexes compiled at runtime.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>My Rust OS will never be finished (and it&#x27;s a success!)</title>
		<published>2014-03-21T07:38:59+00:00</published>
		<updated>2014-03-21T07:38:59+00:00</updated>
		<link href="https://kitallis.github.io/hades/my-rust-os-will-never-be-finished-and-it-s-a-success-0zb10aswmcmba2zqawaze/" type="text/html"/>
		<id>https://kitallis.github.io/hades/my-rust-os-will-never-be-finished-and-it-s-a-success-0zb10aswmcmba2zqawaze/</id>
		<content type="html">&lt;p&gt;In November&#x2F;December last year, I spent 3 weeks working on a toy
operating system in Rust. (for more, see
&lt;a href=&quot;http:&#x2F;&#x2F;jvns.ca&#x2F;blog&#x2F;2014&#x2F;03&#x2F;12&#x2F;the-rust-os-story&#x2F;&quot;&gt;Writing an OS in Rust in tiny steps&lt;&#x2F;a&gt;,
and &lt;a href=&quot;http:&#x2F;&#x2F;jvns.ca&#x2F;blog&#x2F;categories&#x2F;kernel&#x2F;&quot;&gt;more&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;I wrote a ton of blog posts about it, and I gave a talk about the
process at Mozilla last week
(&lt;a href=&quot;https:&#x2F;&#x2F;air.mozilla.org&#x2F;rust-meetup-march-2014&#x2F;&quot;&gt;the video&lt;&#x2F;a&gt;). At
that talk, a few people asked me if I was going to finish the project.
I said no, and here&amp;rsquo;s why.&lt;&#x2F;p&gt;
&lt;p&gt;There are lots of reasons for working on programming projects. Just a
few:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;to end up with useful code&lt;&#x2F;li&gt;
&lt;li&gt;to learn something&lt;&#x2F;li&gt;
&lt;li&gt;to explore a new concept (see: Bret Victor&amp;rsquo;s demos)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing an OS in Rust in tiny steps (Steps 1-5)</title>
		<published>2014-03-12T07:09:10+00:00</published>
		<updated>2014-03-12T07:09:10+00:00</updated>
		<link href="https://kitallis.github.io/hades/writing-an-os-in-rust-in-tiny-steps-steps-1-5-ihwtqlowwlspzytpfrg-j/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-an-os-in-rust-in-tiny-steps-steps-1-5-ihwtqlowwlspzytpfrg-j/</id>
		<content type="html">&lt;p&gt;I&amp;rsquo;m giving a talk tomorrow on writing a kernel in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;My experience of writing a kernel that it was like jumping in puddles:
it&amp;rsquo;s a lot of fun, and there are a lot of mishaps:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;jvns.ca&#x2F;images&#x2F;puddle.gif&quot;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here are a few of the tiny steps I took. There are more, but those
will have to wait for the evening.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Day 39: Writing malloc wrong, for fun</title>
		<published>2013-12-10T00:00:00+00:00</published>
		<updated>2013-12-10T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/day-39-writing-malloc-wrong-for-fun-psc0fksixb-uje6mflh0r/" type="text/html"/>
		<id>https://kitallis.github.io/hades/day-39-writing-malloc-wrong-for-fun-psc0fksixb-uje6mflh0r/</id>
		<content type="html">&lt;p&gt;My major achievement for today is writing the following five lines of code:
let a: ~u8 = ~(&#x27;A&#x27; as u8); stdio::putc(*a); let b: ~u8 = ~(&#x27;B&#x27; as u8); stdio::putc(*a); stdio::putc(*b);  and having them do the wrong thing. One would normally expect this to print ‚ÄúAAB‚Äù. But for me, right now, until I stop goofing off, it prints ‚ÄúABB‚Äù. Why is that?
Well, it‚Äôs because my malloc implementation looks like this:&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Day 38: After 6 days, I have problems that I can&#x27;t understand at all</title>
		<published>2013-12-06T00:00:00+00:00</published>
		<updated>2013-12-06T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/day-38-after-6-days-i-have-problems-that-i-can-t-understand-at-all-n6e2fdzlbwaftdvbhuctw/" type="text/html"/>
		<id>https://kitallis.github.io/hades/day-38-after-6-days-i-have-problems-that-i-can-t-understand-at-all-n6e2fdzlbwaftdvbhuctw/</id>
		<content type="html">&lt;p&gt;tl;dr: I expect NUMS[2] to equal NUMS[keycode] when keycode == 2. This doesn‚Äôt appear to be the case, and I don‚Äôt understand how this is possible.
I‚Äôm trying to set up keycode handling in my kernel, and I‚Äôm having a strange problem with array indexing that I can‚Äôt really fathom at all (except ‚Äúsomething is wrong‚Äù).
When I run this code, and press 1 several times, it prints |2C |2C |2C |2C |2C |2C |2C |2C |2C.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Day 37: After 5 days, my OS doesn&#x27;t crash when I press a key</title>
		<published>2013-12-04T00:00:00+00:00</published>
		<updated>2013-12-04T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/day-37-after-5-days-my-os-doesn-t-crash-when-i-press-a-key-giandgzyfyfjbtcmjttf/" type="text/html"/>
		<id>https://kitallis.github.io/hades/day-37-after-5-days-my-os-doesn-t-crash-when-i-press-a-key-giandgzyfyfjbtcmjttf/</id>
		<content type="html">&lt;p&gt;Right now I‚Äôm working towards being able to:
press keys on my keyboard having the OS not crash and have the key I pressed be echoed back  I just achieved step 2, and this has been kind of a saga, so here‚Äôs an explanation of the blood and tears involved. First up, some resources that really helped me out:
The fantastic OSDev wiki. This tutorial on how to make a basic x86 kernel, especially the IDT page.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Day 36: On programming without malloc</title>
		<published>2013-12-03T00:00:00+00:00</published>
		<updated>2013-12-03T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/day-36-on-programming-without-malloc-kpm4-eoycztwoit0ybrug/" type="text/html"/>
		<id>https://kitallis.github.io/hades/day-36-on-programming-without-malloc-kpm4-eoycztwoit0ybrug/</id>
		<content type="html">&lt;p&gt;So right now I‚Äôm working on writing a kernel in Rust. My current goal is to press keys on the keyboard and have them echoed to the screen. This is going okay! I anticipate being able to type by the end of the week.
One thing that‚Äôs interesting is that my expectations around what programs should be able to do is really different right now. Normally I write Python or other high-level languages, so my programs don‚Äôt run too quickly, but have tons of resources available to them (the Internet, a standard library, memory allocation, garbage collection, ‚Ä¶).&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Day 35: Types in Rust, for beginners</title>
		<published>2013-12-02T00:00:00+00:00</published>
		<updated>2013-12-02T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/day-35-types-in-rust-for-beginners-yol-bklbxcdiaspqxtjta/" type="text/html"/>
		<id>https://kitallis.github.io/hades/day-35-types-in-rust-for-beginners-yol-bklbxcdiaspqxtjta/</id>
		<content type="html">&lt;p&gt;I found understanding Rust types really confusing, so I wrote up a small tutorial for myself in an attempt to understand some of them. This is by no means exhaustive. There is a types section in the manual, but it has nowhere near enough examples.
This assumes that you‚Äôve read the sections about owned and borrowed pointers in the Rust tutorial, but not much else.
I‚Äôm not talking about managed pointers (@) at all.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>How to call Rust from assembly, and vice versa</title>
		<published>2013-12-01T00:00:00+00:00</published>
		<updated>2013-12-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/how-to-call-rust-from-assembly-and-vice-versa-kvblen4nt8vf4mim77lac/" type="text/html"/>
		<id>https://kitallis.github.io/hades/how-to-call-rust-from-assembly-and-vice-versa-kvblen4nt8vf4mim77lac/</id>
		<content type="html">&lt;p&gt;In the last few days I‚Äôve been working on a kernel in Rust. This has entailed learning about linkers and foreign function interfaces and all kinds of things.
To learn this stuff, I read this guide to linkers, looked at the Rust foreign function interface tutorial, and asked a million questions on the Rust IRC channel.
Disclaimer: even more than usual, some of this is probably wrong.
So. Linkers.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing a kernel using rustboot &amp; rust-core</title>
		<published>2013-11-29T00:00:00+00:00</published>
		<updated>2013-11-29T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/writing-a-kernel-using-rustboot-rust-core-nqageunc6gr7iq35smad9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-a-kernel-using-rustboot-rust-core-nqageunc6gr7iq35smad9/</id>
		<content type="html">&lt;p&gt;Here I am again using the word ‚Äúkernel‚Äù in a fairly broad sense :)
So today Lindsey Kuper, one of the residents for next week, came by Hacker School! I spent some time a while ago trying to learn some Rust, but got discouraged by the scary pointers and ran away.
But today she pointed out that Rust is for systems programming, and right now I am trying to write an operating system, and this would be the perfect time to pick it up again!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Writing type parametric functions in Go</title>
		<published>2013-04-06T12:54:00-05:00</published>
		<updated>2013-04-06T12:54:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/writing-type-parametric-functions-in-go-huaaoucxr-bahxxsqyiy/" type="text/html"/>
		<id>https://kitallis.github.io/hades/writing-type-parametric-functions-in-go-huaaoucxr-bahxxsqyiy/</id>
		<content type="html">&lt;p&gt;Go&amp;rsquo;s only method of compile time safe polymorphism is structural subtyping, and
this article will do nothing to change that. Instead, I&amp;rsquo;m going to present a
package &lt;code&gt;ty&lt;&#x2F;code&gt; with facilities to write type parametric functions in Go that
maintain &lt;strong&gt;run time&lt;&#x2F;strong&gt; type safety, while also being convenient for the
caller to use.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Introducing NFLGame: Programmatic access to live NFL game statistics</title>
		<published>2012-08-30T00:45:00-05:00</published>
		<updated>2012-08-30T00:45:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/introducing-nflgame-programmatic-access-to-live-nfl-game-statistics-otaiewpbsudcju9hkjwu1/" type="text/html"/>
		<id>https://kitallis.github.io/hades/introducing-nflgame-programmatic-access-to-live-nfl-game-statistics-otaiewpbsudcju9hkjwu1/</id>
		<content type="html">&lt;p&gt;As a programmer and a fantasy football addict, I am embarassed by the means
through which we must expend ourselves to get data in a machine readable form.
This lack of open source software cripples the community with sub-standard
tools, and most importantly, detracts from some really cool and fun things that
could be done with easily available statistics. Many tools are either out-dated
or broken, or if they work, they are closed source and often cost money.&lt;&#x2F;p&gt;
&lt;p&gt;Yesterday I started work on a new library package that I hope will start to
improve this sorry state of affairs.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Running Archlinux on the Lenovo Thinkpad T430</title>
		<published>2012-07-01T00:39:00-05:00</published>
		<updated>2012-07-01T00:39:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/running-archlinux-on-the-lenovo-thinkpad-t430-cqfogvgk07owvcwybgtc4/" type="text/html"/>
		<id>https://kitallis.github.io/hades/running-archlinux-on-the-lenovo-thinkpad-t430-cqfogvgk07owvcwybgtc4/</id>
		<content type="html">&lt;p&gt;In sum, Archlinux is working beautifully. What follows is a rough run down of
my notes while installing, configuring, tuning and using Archlinux on the
Lenovo Thinkpad T430.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Daemonizing Go Programs (with a BSD-style rc.d example)</title>
		<published>2012-04-27T21:12:00-05:00</published>
		<updated>2012-04-27T21:12:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/daemonizing-go-programs-with-a-bsd-style-rc-d-example-wblfpwbrmvc-camevg9/" type="text/html"/>
		<id>https://kitallis.github.io/hades/daemonizing-go-programs-with-a-bsd-style-rc-d-example-wblfpwbrmvc-camevg9/</id>
		<content type="html">&lt;p&gt;Go, by its very nature, is multithreaded. This makes a traditional approach of
daemonizing Go programs by forking a bit difficult.&lt;&#x2F;p&gt;
&lt;p&gt;To get around this, you could try something as simple as backgrounding your Go
program and instructing it to &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nohup&quot;&gt;ignore the HUP
signal&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Adding Thread Safety to the X Go Binding</title>
		<published>2012-04-21T20:52:00-05:00</published>
		<updated>2012-04-21T20:52:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/adding-thread-safety-to-the-x-go-binding-gjyqrgahn2emmik81panu/" type="text/html"/>
		<id>https://kitallis.github.io/hades/adding-thread-safety-to-the-x-go-binding-gjyqrgahn2emmik81panu/</id>
		<content type="html">&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;code.google.com&#x2F;p&#x2F;x-go-binding&#x2F;&quot;&gt;X Go Binding (XGB)&lt;&#x2F;a&gt; is a low level
library that provides an API to interact with running X servers. One can only
communicate with an X server by sending data over a network connection;
protocol requests, replies and errors need to be perfectly constructed down to
the last byte. Xlib did precisely this, and then some. As a result, Xlib became
huge and difficult to maintain.&lt;&#x2F;p&gt;
&lt;p&gt;In recent years, the &lt;a href=&quot;http:&#x2F;&#x2F;xcb.freedesktop.org&#x2F;&quot;&gt;XCB project&lt;&#x2F;a&gt; made things a
bit more civilized by generating C code from &lt;a href=&quot;http:&#x2F;&#x2F;cgit.freedesktop.org&#x2F;xcb&#x2F;proto&#x2F;tree&#x2F;src&quot;&gt;XML
files&lt;&#x2F;a&gt; describing the X client
protocol using Python. While &lt;a href=&quot;http:&#x2F;&#x2F;cgit.freedesktop.org&#x2F;xcb&#x2F;libxcb&#x2F;tree&#x2F;src&#x2F;c_client.py&quot;&gt;the Python to generate said
code&lt;&#x2F;a&gt; is no walk
in the park, it is typically preferred to the alternative: keeping the X core
protocol up to date along with any number of extensions that exist as well.
(There are other benefits to XCB, like easier asynchronicity, but that is
beyond the scope of this post.)&lt;&#x2F;p&gt;
&lt;p&gt;XGB proceeds in a similar vain; &lt;a href=&quot;http:&#x2F;&#x2F;code.google.com&#x2F;r&#x2F;jamslam-x-go-binding&#x2F;source&#x2F;browse&#x2F;xgb&#x2F;go_client.py&quot;&gt;Python is used to generate Go
code&lt;&#x2F;a&gt;
that provides an API to interact with the X protocol. Unlike its sister project
XCB, it is not thread safe. In particular, if X requests are made in parallel,
the best case scenario is a jumbled request or reply and the worst case
scenario is an X server crash. Parallel requests can be particularly useful
when images are being sent to the X server to be painted on the screen; other
useful work could be done in the interim.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>Dynamic desktop workspaces</title>
		<published>2012-04-21T17:30:00-05:00</published>
		<updated>2012-04-21T17:30:00-05:00</updated>
		<link href="https://kitallis.github.io/hades/dynamic-desktop-workspaces-vlrogowexy5utlu4-o22d/" type="text/html"/>
		<id>https://kitallis.github.io/hades/dynamic-desktop-workspaces-vlrogowexy5utlu4-o22d/</id>
		<content type="html">&lt;p&gt;Do you have dynamic workspaces in your window manager?&lt;&#x2F;p&gt;
&lt;p&gt;You might be wondering: what in the world are dynamic workspaces?
A dynamic workspace model allows one to add, remove or rename workspaces on the
fly.
Comparatively, in a typical window manager (or desktop environment)
configuration, you tell the window manager to have &lt;strong&gt;x&lt;&#x2F;strong&gt; number of workspaces.
When you start your window manager, you&amp;rsquo;ll have &lt;strong&gt;x&lt;&#x2F;strong&gt; workspaces, and you can
typically cycle between them using some variation of &amp;ldquo;next workspace&amp;rdquo; or
&amp;ldquo;previous workspace&amp;rdquo; commands.
The disadvantage with this model is that it&amp;rsquo;s difficult to have a large number
of workspaces&amp;mdash;else you might forget which window is on each workspace.&lt;&#x2F;p&gt;</content>
	</entry>
	<entry xml:lang="en">
		<title>About me</title>
		<published>0001-01-01T00:00:00+00:00</published>
		<updated>0001-01-01T00:00:00+00:00</updated>
		<link href="https://kitallis.github.io/hades/about-me-5wulm2aqyhciufcbebolm/" type="text/html"/>
		<id>https://kitallis.github.io/hades/about-me-5wulm2aqyhciufcbebolm/</id>
		<content type="html">&lt;p&gt;This is the blog of withoutboats, a Rust contributor and a stack of labrador puppies in an overcoat.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
